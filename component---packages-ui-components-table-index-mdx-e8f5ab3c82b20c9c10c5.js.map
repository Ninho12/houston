{"version":3,"sources":["webpack:///../packages/ui-components/Table/Row/context.tsx","webpack:///../packages/ui-components/Table/Action/index.tsx","webpack:///../packages/ui-components/Table/context.tsx","webpack:///../packages/ui-components/Table/Loading/index.tsx","webpack:///../packages/ui-components/Table/Body/index.tsx","webpack:///../packages/ui-components/Table/Cell/index.tsx","webpack:///../packages/ui-components/Table/Collapse/index.tsx","webpack:///../packages/ui-components/Table/Column/SortLabel/index.tsx","webpack:///../packages/ui-components/Table/Column/index.tsx","webpack:///../packages/ui-components/Table/Empty/index.tsx","webpack:///../packages/ui-components/Table/Error/index.tsx","webpack:///../packages/ui-components/Table/Header/index.tsx","webpack:///../packages/ui-components/Table/Pagination/index.tsx","webpack:///../packages/ui-components/Table/Row/styles.ts","webpack:///../packages/ui-components/Table/Row/index.tsx","webpack:///../packages/ui-components/Table/Action/Menu.tsx","webpack:///../packages/ui-components/Table/observer.ts","webpack:///../packages/ui-components/Table/styles.tsx","webpack:///../packages/ui-components/Table/Table.tsx","webpack:///../packages/ui-components/Table/index.tsx","webpack:///../packages/ui-components/Table/index.mdx"],"names":["TableRowContext","createContext","registerCollapse","registerAction","TableActionOption","React","children","disabled","onClick","icon","useContextSelector","context","unregister","content","TableContext","loading","onSort","columns","registerColumn","onShowAction","rowMapLabel","rows","registerRow","stripedRows","size","hasCollapseInRows","hasActionInRows","useStyle","createUseStyles","theme","text","padding","spacing","TableLoading","loadingText","classes","className","align","colSpan","LinearProgress","Typography","fontWeight","lineHeight","TableBody","cellKeyIncremeter","useStyles","root","borderTop","colors","grey","fontSize","textSize","color","rootSmall","TableCell","mobileSize","mobileAlign","columnLabel","onDoubleClick","props","cellKey","cellRef","label","tableSize","current","setAttribute","clsx","ref","TableCollapse","onOpen","onClose","disableBackground","disabledPadding","cursor","display","alignItems","transition","transform","SortLabel","sortable","active","direction","borderBottom","TableColumn","sortableField","rest","sort","isSorted","field","handleSort","Error","TableEmpty","count","columnsLen","length","opacity","fontStyle","marginTop","TableError","error","onRetry","formater","errorMessage","Button","variant","TableHeader","disabledActionsColumn","hasActions","some","r","hasCollapse","columnActionTitle","width","td","perPage","whiteSpace","marginRight","labels","breakpoints","down","input","maxWidth","pages","justifyContent","height","Pagination","page","optionsPerPageProp","optionsPerPage","onChangePerPage","onChangePage","total","labelGoToPage","labelItensPerPage","toString","pageInput","setPageInput","split","map","value","Number","String","handlePageInputChange","valueOrEvent","event","enterPressed","key","toLowerCase","target","type","currentPage","Math","floor","maxPage","ceil","handleChangePerPage","_","handleChangePage","timeout","setTimeout","clearTimeout","Row","xs","sm","Select","margin","options","onChange","Text","onKeyUp","onBlur","shape","cellAction","cellCollapse","paddingRight","iconAction","borderRadius","background","fill","tableActionIncremeter","TableRow","data","index","useBoolean","showCollapse","toogleShowCollapse","collapse","setCollapse","actions","setActions","oneAction","onClickAction","e","anchorEl","currentTarget","rowData","rowIndex","action","filter","o","onCollapseEnter","onCollapseClose","contextValue","classesAction","classesCollapse","Provider","in","onEntered","onExited","unmountOnExit","option","MenuActions","open","optionsProp","menuOptions","anchorOrigin","vertical","horizontal","transformOrigin","Menu","getContentAnchorEl","disableAutoFocusItem","disableAutoFocus","keepMounted","elevation","PaperProps","style","maxHeight","MenuItem","bindMutationObserver","table","callback","handleMutation","headerLabels","Array","from","shift","cells","reduce","acc","column","tagName","push","textContent","row","forEach","cell","getAttribute","getTableHeaderLabels","Object","keys","observer","MutationObserver","observe","childList","subtree","disconnect","tableContainer","position","borderSpacing","boxSizing","backgroundColor","border","marginLeft","textAlign","tableResponsive","flexWrap","boxShadow","paddingBottom","borderTopLeftRadius","borderTopRightRadius","marginBottom","borderLeft","right","top","bottom","flexDirection","alignSelf","wordBreak","flex","flexGrow","flexBasis","percent","columnsKeyIncrementer","rowKeyIncremeter","Table","id","tableRef","mediaQueryMobile","useMediaQuery","mobileWidth","responsive","openedMenuActions","openMenuActions","closeMenuActions","menuActionOptions","setMenuActionOptions","setRowMapLabel","setColumns","setRows","c","unbind","rowMap","TableContainer","withHoustonTheme","nestedComponent","Body","Cell","Column","Collapse","Empty","Header","Action","salesService","name","faker","firstName","lastName","email","internet","price","commerce","list","params","of","pipe","result","a","b","start","slice","delay","listWithError","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","__position","__code","__scope","useState","useCallback","Playground","useObservablePaginated","setSort","setPage","setPerPage","onEdit","alert","JSON","stringify","initialParams","onChangeParams","isLoading","retry","errorFormater","err","isMDXComponent"],"mappings":"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","file":"component---packages-ui-components-table-index-mdx-e8f5ab3c82b20c9c10c5.js","sourcesContent":["import { createContext } from 'use-context-selector';\n\nimport { ITableAction, ITableCollapse } from '../interface';\n\nexport interface ITableRowContext {\n  registerCollapse: (content: ITableCollapse) => () => void;\n  registerAction: (option: Omit<ITableAction, 'key'>) => () => void;\n}\n\nconst TableRowContext = createContext<ITableRowContext>({\n  registerCollapse: () => () => null,\n  registerAction: () => () => null\n});\n\nexport default TableRowContext;\n","import * as React from 'react';\n\nimport { useContextSelector } from 'use-context-selector';\n\nimport TableRowContext from '../Row/context';\n\nexport interface ITableActionOptionProp {\n  children?: React.ReactNode;\n  onClick: (data: unknown, index?: number) => void;\n  icon?: React.ReactNode;\n  disabled?: boolean;\n}\n\nconst TableActionOption = React.memo<ITableActionOptionProp>(({ children, disabled, onClick, icon }) => {\n  const registerAction = useContextSelector(TableRowContext, context => context.registerAction);\n\n  React.useEffect(() => {\n    const unregister = registerAction({ disabled, onClick, icon, content: children });\n    return () => unregister();\n  }, [children, disabled, onClick, icon, registerAction]);\n\n  return null;\n});\n\nexport default TableActionOption;\n","import { Size } from '@material-ui/core/Table';\nimport { createContext } from 'use-context-selector';\n\nimport { ITableSort, ITableAction } from './interface';\n\nexport interface ITableRow {\n  key: string;\n  hasActions: boolean;\n  hasCollapse: boolean;\n}\n\nexport interface ITableActionShow {\n  anchorEl: HTMLElement;\n  rowData: unknown;\n  rowIndex?: number;\n  actions: ITableAction[];\n}\n\nexport interface ITableContext {\n  loading: boolean;\n  loadingText?: React.ReactNode;\n  size: Size;\n\n  sort?: ITableSort;\n  onSort: (param: ITableSort) => void;\n\n  columns: string[];\n  registerColumn: () => () => void;\n\n  rows: ITableRow[];\n  registerRow: (param: Omit<ITableRow, 'key'>) => () => void;\n\n  rowMapLabel: { [rowKey: string]: string };\n\n  onShowAction: (param: ITableActionShow) => void;\n\n  stripedRows: boolean;\n  columnActionTitle?: string;\n\n  hasCollapseInRows: boolean;\n  hasActionInRows: boolean;\n}\n\nconst TableContext = createContext<ITableContext>({\n  loading: false,\n  onSort: () => null,\n  columns: [],\n  registerColumn: () => () => null,\n  onShowAction: () => null,\n  rowMapLabel: {},\n  rows: [],\n  registerRow: () => () => null,\n  stripedRows: false,\n  size: 'medium',\n  hasCollapseInRows: false,\n  hasActionInRows: false\n});\n\nexport default TableContext;\n","import * as React from 'react';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { useContextSelector } from 'use-context-selector';\n\nimport createUseStyles from '../../styles/createUseStyles';\nimport Typography from '../../Typography';\nimport TableContext from '../context';\n\nexport interface ITableLoadingProps {}\n\nconst useStyle = createUseStyles(theme => ({\n  text: {\n    padding: theme.spacing(5)\n  }\n}));\n\nconst TableLoading = React.memo<ITableLoadingProps>(() => {\n  const loading = useContextSelector(TableContext, context => context.loading);\n  const loadingText = useContextSelector(TableContext, context => context.loadingText);\n\n  const classes = useStyle();\n\n  if (!loading) return null;\n\n  return (\n    <tr className='table-loader'>\n      <td align='center' colSpan={1000}>\n        <LinearProgress />\n\n        <Typography size='normal' fontWeight='regular' lineHeight='comfortable' className={classes.text}>\n          {loadingText}\n        </Typography>\n      </td>\n    </tr>\n  );\n});\n\nexport default TableLoading;\n","import * as React from 'react';\n\nimport { useContextSelector } from 'use-context-selector';\n\nimport TableContext from '../context';\nimport TableLoading from '../Loading';\n\nexport interface ITableHeadProps {\n  children: React.ReactNode;\n}\n\nconst TableBody = React.memo<ITableHeadProps>(({ children }) => {\n  const loading = useContextSelector(TableContext, context => context.loading);\n\n  return <tbody>{loading ? <TableLoading /> : children}</tbody>;\n});\n\nexport default TableBody;\n","import * as React from 'react';\n\nimport { GridSize } from '@material-ui/core/Grid';\nimport clsx from 'clsx';\nimport { useContextSelector } from 'use-context-selector';\n\nimport createUseStyles from '../../styles/createUseStyles';\nimport TableContext from '../context';\n\nlet cellKeyIncremeter = 0;\n\nexport interface ITableCellProps {\n  id?: string;\n  className?: string;\n  colSpan?: number;\n  columnLabel?: string;\n  mobileSize?: GridSize | true | false | 0;\n  mobileAlign?: React.TdHTMLAttributes<HTMLTableDataCellElement>['align'];\n  onClick?: () => void;\n  onDoubleClick?: () => void;\n  children?: React.ReactNode;\n  align?: React.TdHTMLAttributes<HTMLTableDataCellElement>['align'];\n}\n\nconst useStyles = createUseStyles(theme => ({\n  root: {\n    padding: '12px 20px',\n    borderTop: `1px solid ${theme.colors.grey[200]}`,\n    fontSize: theme.textSize('normal'),\n    color: theme.colors.grey[600],\n    fontWeight: theme.fontWeight('regular'),\n    lineHeight: theme.lineHeight('normal')\n  },\n\n  rootSmall: {\n    padding: '8px 12px',\n    fontSize: theme.textSize('small')\n  }\n}));\n\nconst TableCell = React.memo<ITableCellProps>(\n  ({ children, className, mobileSize, mobileAlign, columnLabel, onClick, onDoubleClick, align, ...props }) => {\n    const [cellKey] = React.useState(() => `cell-${++cellKeyIncremeter}`);\n    const cellRef = React.useRef<HTMLTableCellElement>();\n\n    const label = useContextSelector(TableContext, context => context.rowMapLabel[cellKey]);\n    const tableSize = useContextSelector(TableContext, context => context.size);\n\n    const classes = useStyles();\n\n    React.useEffect(() => {\n      cellRef.current.setAttribute('cell-key', cellKey);\n    }, [cellKey]);\n\n    return (\n      <td\n        {...props}\n        onClick={onClick}\n        onDoubleClick={onDoubleClick}\n        className={clsx(\n          classes.root,\n          tableSize === 'small' && classes.rootSmall,\n          className,\n          `cell-size-${mobileSize ?? 'auto'}`,\n          `cell-align-${align ?? 'left'}`,\n          mobileAlign && `cell-mobile-align-${mobileAlign}`\n        )}\n        ref={cellRef}\n      >\n        <span className='table-label-mobile'>{columnLabel ?? label}</span>\n        {children}\n      </td>\n    );\n  }\n);\n\nexport default TableCell;\n","import * as React from 'react';\n\nimport { useContextSelector } from 'use-context-selector';\n\nimport TableRowContext from '../Row/context';\n\nexport interface ITableCollapseProps {\n  onOpen?: (data: unknown, index: number) => void;\n  onClose?: (data: unknown, index: number) => void;\n  disabled?: boolean;\n  children?: React.ReactNode;\n  disabledPadding?: boolean;\n  disableBackground?: boolean;\n}\n\nconst TableCollapse = React.memo<ITableCollapseProps>(\n  ({ onOpen, onClose, disabled, disableBackground, disabledPadding, children }) => {\n    const registerCollapse = useContextSelector(TableRowContext, context => context.registerCollapse);\n\n    React.useEffect(() => {\n      const unregister = registerCollapse({\n        disabled,\n        onOpen,\n        onClose,\n        disableBackground,\n        disabledPadding,\n        content: children\n      });\n      return () => unregister();\n    }, [children, disabled, registerCollapse, onOpen, onClose, disableBackground, disabledPadding]);\n\n    return null;\n  }\n);\n\nexport default TableCollapse;\n","import * as React from 'react';\n\nimport clsx from 'clsx';\nimport { useContextSelector } from 'use-context-selector';\n\nimport IconArrowUp from '@eduzz/houston-icons/ArrowUp';\n\nimport createUseStyles from '../../../styles/createUseStyles';\nimport TableContext from '../../context';\n\ninterface ISortLabelProps {\n  sortable?: boolean;\n  active?: boolean;\n  disabled?: boolean;\n  direction?: 'asc' | 'desc';\n  onClick?: () => void;\n  children?: React.ReactNode;\n}\n\nconst useStyles = createUseStyles(theme => ({\n  root: {\n    fontSize: theme.textSize('normal'),\n    fontWeight: theme.fontWeight('semibold'),\n    color: theme.colors.grey[600],\n\n    '&.--small': {\n      fontSize: theme.textSize('small')\n    },\n\n    '&.--disabled': {\n      color: theme.colors.grey[400],\n      cursor: 'no-drop'\n    },\n\n    '&.--sortable': {\n      cursor: 'pointer',\n      display: 'inline-flex',\n      alignItems: 'center'\n    },\n\n    '& .icon': {\n      lineHeight: 0,\n      transition: '0.2s linear',\n\n      '&.--desc': {\n        transform: 'rotate(-180deg)'\n      }\n    }\n  }\n}));\n\nconst SortLabel: React.FC<ISortLabelProps> = ({ children, sortable, active, direction, disabled, onClick }) => {\n  const tableSize = useContextSelector(TableContext, context => context.size);\n\n  const classes = useStyles();\n\n  if (!sortable) {\n    return (\n      <span className={clsx(classes.root, disabled && '--disabled', tableSize === 'small' && '--small')}>\n        {children}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={clsx(classes.root, disabled && '--disabled', tableSize === 'small' && '--small', '--sortable')}\n      onClick={onClick}\n    >\n      {children}\n\n      {active && (\n        <div className={clsx(direction === 'desc' && '--desc', 'icon')}>\n          <IconArrowUp />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default React.memo(SortLabel);\n","import * as React from 'react';\n\nimport clsx from 'clsx';\nimport { useContextSelector } from 'use-context-selector';\n\nimport createUseStyles from '../../styles/createUseStyles';\nimport TableContext from '../context';\nimport SortLabel from './SortLabel';\n\nexport interface ITableColumnProps {\n  id?: string;\n  className?: string;\n  children?: React.ReactNode;\n  width?: number;\n  /**\n   * Default `left`\n   */\n  align?: React.TdHTMLAttributes<HTMLTableDataCellElement>['align'];\n  /**\n   * Control of ordered columns\n   * Default `false`\n   */\n  sortableField?: string;\n}\n\nconst useStyles = createUseStyles(theme => ({\n  root: {\n    padding: '8px 20px',\n    borderBottom: `1px solid ${theme.colors.grey[200]}`\n  },\n\n  rootSmall: {\n    padding: '8px 12px'\n  }\n}));\n\nconst TableColumn = React.memo<ITableColumnProps>(({ sortableField, children, className, align, ...rest }) => {\n  const registerColumn = useContextSelector(TableContext, context => context.registerColumn);\n  const onSort = useContextSelector(TableContext, context => context.onSort);\n  const sort = useContextSelector(TableContext, context => context.sort);\n  const loading = useContextSelector(TableContext, context => context.loading);\n  const tableSize = useContextSelector(TableContext, context => context.size);\n\n  const classes = useStyles();\n\n  const cellRef = React.useRef<HTMLTableHeaderCellElement>();\n\n  const isSorted = sort?.field === sortableField;\n\n  const handleSort = React.useCallback(() => {\n    if (!onSort) {\n      throw new Error('@eduzz/houston-ui: add the onSort prop to the Table to filter the fields');\n    }\n\n    onSort({\n      field: sortableField,\n      direction: !isSorted || sort?.direction === 'desc' ? 'asc' : 'desc'\n    });\n  }, [onSort, sortableField, isSorted, sort?.direction]);\n\n  React.useEffect(() => {\n    const unregister = registerColumn();\n    return () => unregister();\n  }, [registerColumn]);\n\n  return (\n    <th\n      ref={cellRef}\n      className={clsx(\n        classes.root,\n        tableSize === 'small' && classes.rootSmall,\n        className,\n        `column-align-${align ?? 'left'}`\n      )}\n      {...rest}\n    >\n      <SortLabel\n        sortable={!!sortableField}\n        active={isSorted}\n        disabled={loading}\n        direction={isSorted ? sort?.direction : 'asc'}\n        onClick={handleSort}\n      >\n        {children}\n      </SortLabel>\n    </th>\n  );\n});\n\nexport default TableColumn;\n","import * as React from 'react';\n\nimport { useContextSelector } from 'use-context-selector';\n\nimport Typography from '../../Typography';\nimport TableContext from '../context';\n\nexport interface ITableEmptyProps {\n  count: number;\n  children?: React.ReactNode;\n}\n\nconst TableEmpty = React.memo<ITableEmptyProps>(({ children, count }) => {\n  const columnsLen = useContextSelector(TableContext, context => context.columns.length);\n\n  if (count) return null;\n\n  children = children ?? 'Nenhum dado encontrado';\n\n  return (\n    <tr className='table-empty-message'>\n      <td align='center' colSpan={columnsLen}>\n        {typeof children === 'string' ? (\n          <Typography size='normal' fontWeight='regular' lineHeight='comfortable'>\n            {children}\n          </Typography>\n        ) : (\n          children\n        )}\n      </td>\n    </tr>\n  );\n});\n\nexport default TableEmpty;\n","import * as React from 'react';\n\nimport Button from '../../Button';\nimport createUseStyles from '../../styles/createUseStyles';\nimport Typography from '../../Typography';\n\nexport interface ITableEErrorProps {\n  error?: any;\n  formater?: (error: any) => string;\n  onRetry?: () => void;\n  children?: React.ReactNode;\n}\n\nconst useStyle = createUseStyles(theme => ({\n  text: {\n    opacity: 0.8,\n    fontStyle: 'italic',\n    '& + button': { marginTop: theme.spacing(3) }\n  }\n}));\n\nconst TableError = React.memo<ITableEErrorProps>(({ children, error, onRetry, formater }) => {\n  const classes = useStyle();\n\n  const errorMessage = React.useMemo(() => {\n    if (formater) {\n      return formater(error) ?? 'Algo inesperado aconteceu...';\n    }\n\n    return typeof error === 'string' ? error : 'Algo inesperado aconteceu...';\n  }, [error, formater]);\n\n  if (error) return null;\n  children = children ?? errorMessage;\n\n  return (\n    <tr className='table-error-message'>\n      <td align='center' colSpan={1000}>\n        {typeof children === 'string' ? (\n          <>\n            <Typography size='normal' fontWeight='regular' lineHeight='comfortable' className={classes.text}>\n              {children}\n            </Typography>\n\n            {onRetry && (\n              <Button variant='text' onClick={onRetry}>\n                Tentar Novamente\n              </Button>\n            )}\n          </>\n        ) : (\n          children\n        )}\n      </td>\n    </tr>\n  );\n});\n\nexport default TableError;\n","import * as React from 'react';\n\nimport { useContextSelector } from 'use-context-selector';\n\nimport TableColumn from '../Column';\nimport TableContext from '../context';\n\nexport interface ITableHeadProps {\n  children: React.ReactNode;\n  disabledActionsColumn?: boolean;\n}\n\nconst TableHeader = React.memo<ITableHeadProps>(({ children, disabledActionsColumn }) => {\n  const hasActions = useContextSelector(TableContext, context => context.rows.some(r => r.hasActions));\n  const hasCollapse = useContextSelector(TableContext, context => context.rows.some(r => r.hasCollapse));\n  const columnActionTitle = useContextSelector(TableContext, context => context.columnActionTitle);\n\n  return (\n    <thead>\n      <tr>\n        {children}\n\n        {hasActions && !disabledActionsColumn && (\n          <TableColumn width={30} align='right'>\n            {columnActionTitle ?? 'Ações'}\n          </TableColumn>\n        )}\n\n        {hasCollapse && <TableColumn width={30} />}\n      </tr>\n    </thead>\n  );\n});\n\nexport default TableHeader;\n","import * as React from 'react';\n\nimport PaginationMUI from '@material-ui/lab/Pagination';\nimport { useContextSelector } from 'use-context-selector';\n\nimport SelectField from '@eduzz/houston-ui/Forms/Select';\nimport TextField from '@eduzz/houston-ui/Forms/Text';\nimport Column from '@eduzz/houston-ui/Grid/Column';\nimport Row from '@eduzz/houston-ui/Grid/Row';\nimport createUseStyles from '@eduzz/houston-ui/styles/createUseStyles';\nimport Typography from '@eduzz/houston-ui/Typography';\n\nimport TableContext from '../context';\n\ntype ITablePaginationExtends = 'id' | 'className' | 'children';\n\nexport interface ITablePagination extends Pick<React.HTMLAttributes<HTMLTableRowElement>, ITablePaginationExtends> {\n  page: number;\n  perPage: number;\n  total: number;\n  optionsPerPage?: number[] | 'string' | false;\n  labelItensPerPage?: React.ReactNode;\n  labelGoToPage?: React.ReactNode;\n  onChangePage: (page: number) => void;\n  onChangePerPage: (rowsPerPage: number) => void;\n}\n\nconst useStyles = createUseStyles(theme => ({\n  td: {\n    padding: '12px 0'\n  },\n\n  perPage: {\n    display: 'inline-flex',\n    alignItems: 'center',\n\n    '& > p': {\n      whiteSpace: 'nowrap',\n      marginRight: theme.spacing(2),\n      color: theme.colors.grey[600]\n    }\n  },\n\n  labels: {\n    display: 'inline-flex',\n    alignItems: 'center',\n\n    '& > p': {\n      whiteSpace: 'nowrap',\n      marginRight: theme.spacing(2),\n      color: theme.colors.grey[600]\n    },\n\n    [theme.breakpoints.down('xs')]: {\n      display: 'none'\n    }\n  },\n\n  input: {\n    maxWidth: 50\n  },\n\n  pages: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    height: '100%',\n    alignItems: 'center',\n\n    [theme.breakpoints.down('xs')]: {\n      marginTop: theme.spacing(2),\n      justifyContent: 'center'\n    }\n  }\n}));\n\nconst Pagination = React.memo<ITablePagination>(\n  ({\n    page,\n    optionsPerPage: optionsPerPageProp,\n    onChangePerPage,\n    onChangePage,\n    total,\n    perPage,\n    labelGoToPage,\n    labelItensPerPage\n  }) => {\n    const classes = useStyles();\n\n    const loading = useContextSelector(TableContext, context => context.loading);\n\n    const [pageInput, setPageInput] = React.useState<string>(page?.toString());\n\n    const optionsPerPage = React.useMemo(() => {\n      if (optionsPerPageProp === false) {\n        return null;\n      }\n\n      if (typeof optionsPerPageProp === 'string') {\n        return optionsPerPageProp.split(',').map(value => ({ label: value, value: Number(value) }));\n      }\n\n      return (optionsPerPageProp ?? [5, 10, 25, 50]).map(value => ({ label: String(value), value }));\n    }, [optionsPerPageProp]);\n\n    const handlePageInputChange = React.useCallback(\n      (\n        valueOrEvent: string | React.KeyboardEvent<HTMLDivElement>,\n        event?:\n          | React.KeyboardEvent<HTMLDivElement>\n          | React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>\n          | React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n      ) => {\n        let enterPressed = false;\n        let value = '';\n\n        if (typeof valueOrEvent === 'object') {\n          event = valueOrEvent;\n          enterPressed = valueOrEvent.key?.toLowerCase() === 'enter';\n          value = (valueOrEvent.target as any).value;\n        } else {\n          value = valueOrEvent;\n        }\n\n        setPageInput(value);\n\n        if (event.type === 'change' || (event.type === 'keyup' && !enterPressed)) {\n          return;\n        }\n\n        let currentPage = Math.floor(Number(value));\n        const maxPage = Math.ceil(total / perPage);\n\n        if (!currentPage) {\n          currentPage = 1;\n        }\n\n        if (currentPage > maxPage) {\n          currentPage = maxPage;\n        }\n\n        if (currentPage != Number(value)) {\n          setPageInput(currentPage.toString());\n        }\n\n        if (currentPage === page) {\n          return;\n        }\n\n        onChangePage(currentPage);\n      },\n      [onChangePage, page, perPage, total]\n    );\n\n    const handleChangePerPage = React.useCallback(\n      (_: any, event: React.ChangeEvent<{ name?: string; value: any }>) => {\n        onChangePerPage(event.target.value);\n      },\n      [onChangePerPage]\n    );\n\n    const handleChangePage = React.useCallback(\n      (_: React.ChangeEvent<unknown>, page: number) => {\n        onChangePage(page);\n      },\n      [onChangePage]\n    );\n\n    React.useEffect(() => {\n      const timeout = setTimeout(() => setPageInput(page?.toString()), 500);\n      return () => clearTimeout(timeout);\n    }, [page]);\n\n    return (\n      <tfoot>\n        <tr>\n          <td colSpan={1000} className={classes.td}>\n            <Row>\n              <Column xs={12} sm='auto'>\n                <Row justifyContent='center'>\n                  <Column xs='auto' className={classes.perPage}>\n                    <Typography size='small' fontWeight='semibold'>\n                      {labelItensPerPage ?? 'Itens por página:'}\n                    </Typography>\n\n                    <SelectField\n                      disabled={loading}\n                      size='small'\n                      margin='none'\n                      options={optionsPerPage}\n                      value={perPage}\n                      onChange={handleChangePerPage}\n                    />\n                  </Column>\n\n                  <Column xs='auto' className={classes.labels}>\n                    <Typography size='small' fontWeight='semibold'>\n                      {labelGoToPage ?? 'Ir para:'}\n                    </Typography>\n\n                    <TextField\n                      margin='none'\n                      size='small'\n                      disabled={loading}\n                      value={pageInput}\n                      className={classes.input}\n                      onChange={handlePageInputChange}\n                      onKeyUp={handlePageInputChange}\n                      onBlur={handlePageInputChange}\n                    />\n                  </Column>\n                </Row>\n              </Column>\n\n              <Column xs={12} sm={true}>\n                <div className={classes.pages}>\n                  <PaginationMUI\n                    count={Math.ceil(total / perPage)}\n                    page={page ?? 1}\n                    disabled={loading}\n                    shape='rounded'\n                    size='medium'\n                    onChange={handleChangePage}\n                  />\n                </div>\n              </Column>\n            </Row>\n          </td>\n        </tr>\n      </tfoot>\n    );\n  }\n);\n\nexport default Pagination;\n","import createUseStyles from '@eduzz/houston-ui/styles/createUseStyles';\n\nexport default createUseStyles(theme => ({\n  cellAction: {\n    padding: '6px 12px',\n    borderTop: `1px solid ${theme.colors.grey[200]}`,\n    fontSize: theme.textSize('normal'),\n\n    '&.--small': {\n      fontSize: theme.textSize('small')\n    }\n  },\n\n  cellCollapse: {\n    paddingRight: 8,\n    borderTop: `1px solid ${theme.colors.grey[200]}`,\n    fontSize: theme.textSize('normal'),\n\n    '&.--small': {\n      fontSize: theme.textSize('small')\n    }\n  },\n\n  iconAction: {\n    display: 'inline-flex',\n    padding: 4,\n    transition: 'background 0.2s linear',\n    borderRadius: '50%',\n    cursor: 'pointer',\n\n    '&:hover': {\n      background: theme.colors.grey[200]\n    },\n\n    '&:focus': {\n      background: theme.colors.grey[300]\n    },\n\n    '& .houston-icon': {\n      '& svg': {\n        fill: theme.colors.grey[600]\n      }\n    }\n  }\n}));\n","import * as React from 'react';\n\nimport CollapseMUI from '@material-ui/core/Collapse';\nimport clsx from 'clsx';\nimport { useContextSelector } from 'use-context-selector';\n\nimport useBoolean from '@eduzz/houston-hooks/useBoolean';\nimport IconChevronDown from '@eduzz/houston-icons/ChevronDown';\nimport IconDotsHorizontal from '@eduzz/houston-icons/DotsHorizontal';\n\nimport TableContext from '../context';\nimport { ITableAction, ITableCollapse } from '../interface';\nimport TableRowContext, { ITableRowContext } from './context';\nimport useStyles from './styles';\n\nlet tableActionIncremeter = 0;\n\nexport interface ITableRowProps {\n  id?: string;\n  className?: string;\n  data: unknown;\n  index: number;\n  children?: React.ReactNode;\n  onClick?: () => void;\n  onDoubleClick?: () => void;\n}\n\nconst TableRow = React.memo<ITableRowProps>(({ data, index, children, className, ...props }) => {\n  const stripedRows = useContextSelector(TableContext, context => context.stripedRows);\n  const onShowAction = useContextSelector(TableContext, context => context.onShowAction);\n  const registerRow = useContextSelector(TableContext, context => context.registerRow);\n  const tableSize = useContextSelector(TableContext, context => context.size);\n  const hasCollapseInRows = useContextSelector(TableContext, context => context.hasCollapseInRows);\n  const hasActionInRows = useContextSelector(TableContext, context => context.hasActionInRows);\n\n  const classes = useStyles();\n\n  const [showCollapse, toogleShowCollapse] = useBoolean(false);\n\n  const [collapse, setCollapse] = React.useState<ITableCollapse>(null);\n  const [actions, setActions] = React.useState<ITableAction[]>([]);\n\n  const oneAction = actions.length === 1 ? actions[0] : null;\n  const hasActions = actions.length > 0;\n  const hasCollapse = collapse !== null;\n\n  const onClickAction = React.useCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n      if (oneAction) {\n        oneAction.onClick(data, index);\n        return;\n      }\n\n      onShowAction({ anchorEl: e.currentTarget, rowData: data, rowIndex: index, actions });\n    },\n    [oneAction, onShowAction, data, index, actions]\n  );\n\n  const registerCollapse = React.useCallback((content: ITableCollapse) => {\n    setCollapse(content);\n    return () => setCollapse(null);\n  }, []);\n\n  const registerAction = React.useCallback((action: Omit<ITableAction, 'key'>) => {\n    const key = `table-action-option-${++tableActionIncremeter}`;\n    setActions(actions => [...actions, { key, ...action }]);\n    return () => setActions(actions => actions.filter(o => o.key !== key));\n  }, []);\n\n  const onCollapseEnter = React.useCallback(\n    () => collapse.onOpen && collapse.onOpen(data, index),\n    [collapse, data, index]\n  );\n\n  const onCollapseClose = React.useCallback(\n    () => collapse.onClose && collapse.onClose(data, index),\n    [collapse, data, index]\n  );\n\n  React.useEffect(() => {\n    const unregister = registerRow({ hasActions, hasCollapse });\n    return () => unregister();\n  }, [hasActions, hasCollapse, registerRow]);\n\n  const contextValue = React.useMemo<ITableRowContext>(\n    () => ({ registerAction, registerCollapse }),\n    [registerAction, registerCollapse]\n  );\n\n  const classesAction = React.useMemo(\n    () => clsx(classes.cellAction, tableSize === 'small' && '--small', 'table-action-cell', className),\n    [className, classes.cellAction, tableSize]\n  );\n\n  const classesCollapse = React.useMemo(\n    () => clsx(classes.cellCollapse, tableSize === 'small' && '--small', 'table-collapse-cell', className),\n    [className, classes.cellCollapse, tableSize]\n  );\n\n  return (\n    <TableRowContext.Provider value={contextValue}>\n      <tr\n        {...props}\n        className={clsx(\n          hasActions && 'table-row-has-action',\n          hasCollapse && 'table-row-has-collapse',\n          stripedRows && (index % 2 == 0 ? 'table-row-even' : 'table-row-odd'),\n          className\n        )}\n      >\n        {children}\n\n        {hasActions && (\n          <td align='right' className={classesAction}>\n            {hasActions && (\n              <div onClick={onClickAction} className={classes.iconAction}>\n                {oneAction?.icon ?? <IconDotsHorizontal size={24} />}\n              </div>\n            )}\n          </td>\n        )}\n\n        {!hasActions && hasActionInRows && <td className={clsx(classesAction)} />}\n\n        {hasCollapse && (\n          <td align='right' className={classesCollapse}>\n            <div\n              onClick={toogleShowCollapse}\n              className={clsx(\n                classes.iconAction,\n                'table-collapse-button',\n                showCollapse && 'table-collapse-button-opened'\n              )}\n            >\n              <IconChevronDown size={24} />\n            </div>\n          </td>\n        )}\n\n        {!hasCollapse && hasCollapseInRows && <td className={classesCollapse} />}\n      </tr>\n\n      {hasCollapse && (\n        <tr\n          className={clsx(\n            'table-collapse',\n            showCollapse && 'table-collapse-opened',\n            collapse.disableBackground && 'table-collapse-no-background',\n            collapse.disabledPadding && 'table-collapse-no-padding'\n          )}\n        >\n          <td colSpan={1000}>\n            <CollapseMUI\n              in={showCollapse && !collapse.disabled}\n              timeout={350}\n              onEntered={onCollapseEnter}\n              onExited={onCollapseClose}\n              unmountOnExit\n            >\n              <div className='table-collapse-content'>{collapse.content}</div>\n            </CollapseMUI>\n          </td>\n        </tr>\n      )}\n    </TableRowContext.Provider>\n  );\n});\n\nexport default TableRow;\n","import * as React from 'react';\n\nimport Menu, { MenuProps } from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport createUseStyles from '../../styles/createUseStyles';\nimport { ITableAction } from '../interface';\n\nconst useStyles = createUseStyles(() => ({\n  option: {\n    display: 'flex',\n    alignItems: 'center',\n\n    '& svg, span': {\n      marginRight: 8,\n      fontSize: 24\n    }\n  }\n}));\n\ninterface IProps extends MenuProps {\n  anchorEl: HTMLElement;\n  onClose: () => void;\n  options: ITableAction[];\n  rowData: unknown;\n  rowIndex: number;\n}\n\nconst MenuActions = React.memo<IProps>(({ open, onClose, options: optionsProp, anchorEl, rowData, rowIndex }) => {\n  const classes = useStyles();\n\n  const options = React.useMemo(() => {\n    return (optionsProp || []).map(option => ({\n      ...option,\n      onClick: () => {\n        option.onClick(rowData, rowIndex);\n        onClose();\n      }\n    }));\n  }, [onClose, optionsProp, rowData, rowIndex]);\n\n  const menuOptions = React.useMemo<Partial<MenuProps>>(\n    () => ({\n      anchorOrigin: { vertical: 'bottom', horizontal: 'right' },\n      transformOrigin: { vertical: 'top', horizontal: 'right' }\n    }),\n    []\n  );\n\n  return (\n    <Menu\n      anchorEl={anchorEl}\n      open={open}\n      onClose={onClose}\n      getContentAnchorEl={null}\n      disableAutoFocusItem\n      disableAutoFocus\n      keepMounted\n      anchorOrigin={menuOptions.anchorOrigin}\n      transformOrigin={menuOptions.transformOrigin}\n      elevation={3}\n      PaperProps={{\n        style: {\n          maxHeight: 350\n        }\n      }}\n    >\n      {options?.map(option => {\n        return (\n          <MenuItem key={option.key} onClick={option.onClick} disabled={option.disabled}>\n            <div className={classes.option}>\n              {option.icon}\n              {option.content}\n            </div>\n          </MenuItem>\n        );\n      })}\n    </Menu>\n  );\n});\n\nexport default MenuActions;\n","interface IRowMap {\n  [rowKey: string]: string;\n}\n\ninterface ICallback {\n  (rowMap: IRowMap): void;\n}\n\nexport function bindMutationObserver(table: HTMLTableElement, callback: ICallback) {\n  let timeout: any;\n\n  const handleMutation = () => {\n    clearTimeout(timeout);\n\n    timeout = setTimeout(() => {\n      const headerLabels = getTableHeaderLabels(table);\n\n      const hasLabels = !!Object.keys(headerLabels).length;\n      if (!hasLabels) return;\n\n      callback(headerLabels);\n    }, 300);\n  };\n\n  handleMutation();\n  const observer = new MutationObserver(handleMutation);\n  observer.observe(table, { childList: true, subtree: true });\n\n  return () => observer.disconnect();\n}\n\nfunction getTableHeaderLabels(table: HTMLTableElement): IRowMap {\n  const rows = Array.from(table.rows);\n\n  const columns = Array.from(rows.shift()?.cells).reduce((acc, column) => {\n    if (column.tagName.toLowerCase() !== 'th') {\n      return acc;\n    }\n\n    acc.push(column.textContent);\n    return acc;\n  }, []);\n\n  return rows.reduce((acc, row) => {\n    Array.from(row.cells).forEach((cell, index) => {\n      const key = cell.getAttribute('cell-key');\n\n      if (!key) return;\n      acc[key] = columns[index];\n    });\n\n    return acc;\n  }, {} as IRowMap);\n}\n","import createUseStyles from '@eduzz/houston-ui/styles/createUseStyles';\n\nexport interface IStyleParams {\n  maxHeight: number;\n}\n\nconst useStyles = createUseStyles(theme => ({\n  tableContainer: {\n    position: 'relative'\n  },\n\n  table: {\n    width: '100%',\n    borderSpacing: 0,\n\n    '& .table-label-mobile': {\n      display: 'none',\n      fontSize: theme.textSize('x-small'),\n      fontWeight: theme.fontWeight('semibold')\n    },\n\n    '& .table-collapse-button': {\n      transition: '.2s linear'\n    },\n\n    '& .table-collapse-button-opened': {\n      transform: 'rotate(-180deg)'\n    },\n\n    '& > tbody > tr > td': {\n      boxSizing: 'border-box'\n    },\n\n    '& > tbody > tr.table-row-even > td': {\n      backgroundColor: theme.colors.grey[100]\n    },\n\n    '& > tbody > tr.table-row-even + tr.table-collapse td': {\n      backgroundColor: theme.colors.grey[100]\n    },\n\n    '& > tbody > tr.table-loader td': {\n      padding: 0\n    },\n\n    '& > tbody > tr.table-collapse > td': {\n      padding: 0\n    },\n\n    '& > tbody > tr.table-collapse:not(.table-collapse-opened) > td': {\n      border: 'none'\n    },\n\n    '& > tbody > tr.table-collapse:not(.table-collapse-no-padding) > td div.table-collapse-content': {\n      padding: theme.spacing(3)\n    },\n\n    '& > tbody > tr.table-collapse:not(.table-collapse-no-background) > td div.table-collapse-content': {\n      backgroundColor: theme.colors.grey[200]\n    },\n\n    '& > tbody > tr > td.table-action-cell': {\n      paddingRight: theme.spacing(3)\n    },\n\n    '& > tbody > tr > td.table-action-cell button + button': {\n      marginLeft: theme.spacing(1)\n    },\n\n    '& > thead > tr > th.column-align-left': {\n      textAlign: 'left'\n    },\n\n    '& > thead > tr > th.column-align-center': {\n      textAlign: 'center'\n    },\n\n    '& > thead > tr > th.column-align-right': {\n      textAlign: 'right'\n    },\n\n    '& > tbody > tr > td.cell-align-left': {\n      textAlign: 'left'\n    },\n\n    '& > tbody > tr > td.cell-align-center': {\n      textAlign: 'center'\n    },\n\n    '& > tbody > tr > td.cell-align-right': {\n      textAlign: 'right'\n    }\n  },\n\n  tableResponsive: {\n    display: 'block !important',\n\n    '& .table-label-mobile': {\n      display: 'block !important'\n    },\n\n    '& > thead': {\n      display: 'none'\n    },\n\n    '& > tbody, & > tfoot, , & > tfoot > tr, & > tfoot > tr > td': {\n      display: 'block'\n    },\n\n    '& > tbody > tr': {\n      display: 'flex',\n      width: `calc(100% - ${theme.spacing(4)})`,\n      flexWrap: 'wrap',\n      position: 'relative',\n      boxShadow: '0px 2px 1px rgba(0, 0, 0, 0.1)',\n      borderRadius: 3,\n      margin: theme.spacing(2),\n      marginTop: 0,\n      border: `1px solid ${theme.colors.grey[200]}`,\n      padding: theme.spacing(3),\n      paddingBottom: theme.spacing(1),\n      boxSizing: 'border-box'\n    },\n\n    '& > tbody > tr.table-collapse': {\n      padding: 0,\n      marginTop: (theme.spacing(2) + 2) * -1,\n      borderTopLeftRadius: 0,\n      borderTopRightRadius: 0,\n      boxShadow: 'none',\n      backgroundColor: 'white'\n    },\n\n    '& > tbody > tr.table-collapse-opened': {\n      boxShadow: '0px 2px 1px rgba(0, 0, 0, 0.1)'\n    },\n\n    '& > tbody > tr.table-collapse > td': {\n      marginBottom: 0\n    },\n\n    '& > tbody > tr.table-row-even': {\n      backgroundColor: theme.colors.grey[100]\n    },\n\n    '& > tbody > tr.table-row-even + tr.table-collapse': {\n      backgroundColor: theme.colors.grey[100],\n      border: 0\n    },\n\n    '& > tbody > tr.table-row-even > td': {\n      backgroundColor: 'transparent'\n    },\n\n    '& > tbody > tr.table-row-even + tr.table-collapse td': {\n      backgroundColor: 'transparent'\n    },\n\n    '& > tbody > tr.table-row-has-action, & > tbody > tr.table-row-has-collapse': {\n      paddingRight: 50,\n      '&:before': {\n        content: '\" \"',\n        display: 'block',\n        position: 'absolute',\n        borderLeft: `1px solid ${theme.colors.grey[200]}`,\n        right: 40,\n        top: 0,\n        bottom: 0\n      }\n    },\n\n    '& > tbody > tr > td.table-collapse-cell': {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: 'auto',\n      bottom: theme.spacing(1),\n      flexDirection: 'column',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      display: 'flex',\n      paddingRight: 0,\n      marginBottom: 0\n    },\n\n    '& > tbody > tr > td.table-action-cell': {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      bottom: 'auto',\n      flexDirection: 'column',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      display: 'flex',\n      paddingRight: 0,\n      marginBottom: 0\n    },\n\n    '& > tbody > tr > td.table-action-cell button + button': {\n      marginLeft: 0\n    },\n\n    '& > tbody > tr > td.table-action-cell button:first-child:not(:last-child)': {\n      alignSelf: 'flex-start'\n    },\n\n    '& > tbody > tr > td': {\n      boxSizing: 'border-box',\n      wordBreak: 'break-word',\n      padding: 0,\n      marginBottom: theme.spacing(2),\n      flex: 1,\n      border: 'none',\n      flexGrow: 0,\n      flexBasis: '100%',\n      maxWidth: '100%',\n      lineHeight: theme.lineHeight('compact')\n    },\n\n    '& > tbody > tr.table-loader': {\n      padding: 0,\n      paddingRight: 0,\n      '&:before': {\n        display: 'none'\n      }\n    },\n\n    '& > tbody > tr.table-empty-message': {\n      paddingRight: 0,\n      '&:before': {\n        display: 'none'\n      }\n    },\n\n    '& > tbody > tr.table-loader > td': {\n      marginBottom: 0\n    },\n\n    '& > tbody > tr > td.cell-mobile-align-left': {\n      textAlign: 'left'\n    },\n\n    '& > tbody > tr > td.cell-mobile-align-center': {\n      textAlign: 'center'\n    },\n\n    '& > tbody > tr > td.cell-mobile-align-right': {\n      textAlign: 'right'\n    },\n\n    '& > tbody > tr > td.cell-size-true': {\n      flexGrow: 1,\n      flexBasis: 0,\n      maxWidth: '100%'\n    },\n\n    '& > tbody > tr > td.cell-size-0': {\n      display: 'none'\n    },\n\n    ...new Array(12).fill('a').reduce((acc, _, index) => {\n      const size = index + 1;\n      const percent = `${(size / 12) * 100}%`;\n\n      return {\n        ...acc,\n        [`& > tbody > tr > td.cell-size-${size}`]: {\n          flexGrow: 0,\n          maxWidth: percent,\n          flexBasis: percent\n        }\n      };\n    }, {})\n  }\n}));\n\nexport default useStyles;\n","import * as React from 'react';\n\nimport { Size, TableProps } from '@material-ui/core/Table';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport clsx from 'clsx';\n\nimport useBoolean from '@eduzz/houston-hooks/useBoolean';\nimport withHoustonTheme from '@eduzz/houston-ui/styles/ThemeProvider/WrapperTheme';\n\nimport MenuActions from './Action/Menu';\nimport TableContext, { ITableActionShow, ITableContext, ITableRow } from './context';\nimport { ITableSort } from './interface';\nimport { bindMutationObserver } from './observer';\nimport useStyles from './styles';\n\nlet columnsKeyIncrementer = 0,\n  rowKeyIncremeter = 0;\n\nexport interface ITableProps extends Pick<TableProps, 'id' | 'children' | 'className'> {\n  loading?: boolean;\n  loadingText?: React.ReactNode;\n  sort?: ITableSort;\n  /**\n   * Function called when clicking on an ordered column\n   */\n  onSort?: (ordernation: ITableSort) => void;\n  /**\n   * Default `medium`\n   */\n  size?: Size;\n  /**\n   * Max Height table container\n   */\n  maxHeight?: number;\n  stripedRows?: boolean;\n  columnActionTitle?: string;\n  mobileWidth?: number | boolean;\n}\n\nconst Table: React.FC<ITableProps> = props => {\n  const {\n    size,\n    id,\n    children,\n    loading,\n    sort,\n    onSort,\n    maxHeight,\n    stripedRows,\n    columnActionTitle,\n    className,\n    loadingText\n  } = props;\n\n  const tableRef = React.useRef<HTMLTableElement>();\n  const mediaQueryMobile = useMediaQuery(`(max-width: ${props.mobileWidth ?? 600}px)`);\n  const responsive = typeof props.mobileWidth === 'boolean' ? props.mobileWidth : mediaQueryMobile;\n\n  const [openedMenuActions, , openMenuActions, closeMenuActions] = useBoolean(false);\n  const [menuActionOptions, setMenuActionOptions] = React.useState<ITableActionShow>();\n\n  const [rowMapLabel, setRowMapLabel] = React.useState<{ [rowKey: string]: string }>({});\n  const [columns, setColumns] = React.useState<string[]>(() => []);\n  const [rows, setRows] = React.useState<ITableRow[]>([]);\n\n  const classes = useStyles();\n\n  const onShowAction = React.useCallback(\n    (data: ITableActionShow) => {\n      setMenuActionOptions(data);\n      openMenuActions();\n    },\n    [openMenuActions]\n  );\n\n  const registerColumn = React.useCallback(() => {\n    const key = `column-${++columnsKeyIncrementer}`;\n\n    setColumns(columns => [...columns, key]);\n    return () => setColumns(columns => columns.filter(c => c != key));\n  }, []);\n\n  const registerRow = React.useCallback((row: Omit<ITableRow, 'key'>) => {\n    const key = `table-row-${++rowKeyIncremeter}`;\n\n    setRows(rows => [...rows, { key, ...row }]);\n    return () => setRows(rows => rows.filter(r => r.key !== key));\n  }, []);\n\n  const hasCollapseInRows = React.useMemo(() => rows?.some(r => r.hasCollapse), [rows]);\n  const hasActionInRows = React.useMemo(() => rows?.some(r => r.hasActions), [rows]);\n\n  React.useEffect(() => {\n    const unbind = bindMutationObserver(tableRef?.current, rowMap => setRowMapLabel(rowMap));\n    return () => unbind();\n  }, []);\n\n  const contextValue = React.useMemo<ITableContext>(\n    () => ({\n      loading: loading ?? false,\n      loadingText: loadingText ?? 'Carregando...',\n      sort,\n      onSort,\n      onShowAction,\n      registerColumn,\n      rowMapLabel,\n      columns,\n      rows,\n      registerRow,\n      stripedRows,\n      columnActionTitle,\n      size: size ?? 'medium',\n      hasCollapseInRows,\n      hasActionInRows\n    }),\n    [\n      loading,\n      loadingText,\n      sort,\n      onSort,\n      onShowAction,\n      registerColumn,\n      rowMapLabel,\n      columns,\n      rows,\n      registerRow,\n      stripedRows,\n      columnActionTitle,\n      size,\n      hasCollapseInRows,\n      hasActionInRows\n    ]\n  );\n\n  return (\n    <TableContext.Provider value={contextValue}>\n      <TableContainer className={classes.tableContainer} style={{ maxHeight }}>\n        <table id={id} ref={tableRef} className={clsx(classes.table, responsive && classes.tableResponsive, className)}>\n          {children}\n\n          <MenuActions\n            open={openedMenuActions}\n            anchorEl={menuActionOptions?.anchorEl}\n            options={menuActionOptions?.actions}\n            rowData={menuActionOptions?.rowData}\n            rowIndex={menuActionOptions?.rowIndex}\n            onClose={closeMenuActions}\n          />\n        </table>\n      </TableContainer>\n    </TableContext.Provider>\n  );\n};\n\nexport default withHoustonTheme(React.memo(Table));\n","import nestedComponent from '@eduzz/houston-ui/Helpers/nestedComponent';\n\nimport Action from './Action';\nimport Body from './Body';\nimport Cell from './Cell';\nimport Collapse from './Collapse';\nimport Column from './Column';\nimport Empty from './Empty';\nimport Error from './Error';\nimport Header from './Header';\nimport Pagination from './Pagination';\nimport Row from './Row';\nimport Table from './Table';\n\nexport default nestedComponent(Table, {\n  Body,\n  Cell,\n  Column,\n  Collapse,\n  Empty,\n  Header,\n  Row,\n  Error,\n  Pagination,\n  Action\n});\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/github/workspace/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { useState, useCallback } from 'react';\nimport { Playground } from 'docz';\nimport faker from 'faker/locale/pt_BR';\nimport { of } from 'rxjs';\nimport { delay, map } from 'rxjs/operators';\nimport useObservablePaginated from '@eduzz/houston-hooks/useObservablePaginated';\nimport Table from './index.tsx';\nexport const salesService = (() => {\n  const data = new Array(100).fill('a').map((_, index) => ({\n    id: index + 1,\n    name: `${faker.name.firstName()} ${faker.name.lastName()}`,\n    email: faker.internet.email().toLowerCase(),\n    price: faker.commerce.price()\n  }));\n  return {\n    list: params => {\n      return of(data).pipe(map(data => {\n        let result = data;\n\n        if (params.sort) {\n          result = result.sort((a, b) => {\n            if (a[params.sort.field] > b[params.sort.field]) return params.sort.direction === 'asc' ? 1 : -1;\n            if (a[params.sort.field] == b[params.sort.field]) return 0;\n            return params.sort.direction === 'asc' ? -1 : 1;\n          });\n        }\n\n        const start = (params.page - 1) * params.perPage;\n        return result.slice(start, start + params.perPage);\n      }), delay(500), map(result => ({\n        total: data.length,\n        result\n      })));\n    },\n    listWithError: () => of(true).pipe(map(() => new Error('Opá!')))\n  };\n})();\nexport const _frontmatter = {};\nconst layoutProps = {\n  salesService,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n\n\n\n    <h1 {...{\n      \"id\": \"tabela\"\n    }}>{`Tabela`}</h1>\n    <p>{`Tabelas apresentam informações de uma forma fácil de visualizar, de modo que os usuários podem\nprocurar por padrões e percepções.`}</p>\n    <h3 {...{\n      \"id\": \"importação\"\n    }}>{`Importação`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import Table from '@eduzz/houston-ui/Table';\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"tabela-simples\"\n    }}>{`Tabela simples`}</h3>\n    <Playground __position={0} __code={'() => {\\n  const [sort, setSort] = useState(null)\\n  const [page, setPage] = useState(1)\\n  const [perPage, setPerPage] = useState(10)\\n  const [rows, setRows] = useState(() => {\\n    return new Array(5).fill(\\'a\\').map((_, index) => ({\\n      id: index + 1,\\n      name: `${faker.name.firstName()} ${faker.name.lastName()}`,\\n      email: faker.internet.email().toLowerCase(),\\n      price: faker.commerce.price(),\\n    }))\\n  })\\n  const onSort = useCallback(data => {\\n    setSort(data)\\n    setRows(rows => {\\n      return rows.sort((a, b) => {\\n        if (a[data.field] > b[data.field])\\n          return data.direction === \\'asc\\' ? 1 : -1\\n        if (a[data.field] == b[data.field]) return 0\\n        return data.direction === \\'asc\\' ? -1 : 1\\n      })\\n    })\\n  }, [])\\n  return (\\n    <Table stripedRows sort={sort} onSort={onSort}>\\n      <Table.Header>\\n        <Table.Column width={50} sortableField=\\\"id\\\">\\n          #\\n        </Table.Column>\\n        <Table.Column sortableField=\\\"name\\\">Nome</Table.Column>\\n        <Table.Column sortableField=\\\"email\\\">Email</Table.Column>\\n        <Table.Column align=\\\"right\\\">Valor</Table.Column>\\n      </Table.Header>\\n      <Table.Body>\\n        <Table.Empty count={rows.length} />\\n        {rows.map((row, index) => (\\n          <Table.Row data={row} index={index} key={row.id}>\\n            <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\\n            <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\\n            <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\\n            <Table.Cell mobileSize={6} align=\\\"right\\\">\\n              {row.price}\\n            </Table.Cell>\\n          </Table.Row>\\n        ))}\\n      </Table.Body>\\n      <Table.Pagination\\n        page={page}\\n        perPage={perPage}\\n        total={100}\\n        onChangePage={setPage}\\n        onChangePerPage={setPerPage}\\n      />\\n    </Table>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      useCallback,\n      Playground,\n      faker,\n      of,\n      delay,\n      map,\n      useObservablePaginated,\n      Table,\n      DefaultLayout,\n      salesService,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [sort, setSort] = useState(null);\n        const [page, setPage] = useState(1);\n        const [perPage, setPerPage] = useState(10);\n        const [rows, setRows] = useState(() => {\n          return new Array(5).fill('a').map((_, index) => ({\n            id: index + 1,\n            name: `${faker.name.firstName()} ${faker.name.lastName()}`,\n            email: faker.internet.email().toLowerCase(),\n            price: faker.commerce.price()\n          }));\n        });\n        const onSort = useCallback(data => {\n          setSort(data);\n          setRows(rows => {\n            return rows.sort((a, b) => {\n              if (a[data.field] > b[data.field]) return data.direction === 'asc' ? 1 : -1;\n              if (a[data.field] == b[data.field]) return 0;\n              return data.direction === 'asc' ? -1 : 1;\n            });\n          });\n        }, []);\n        return <Table stripedRows sort={sort} onSort={onSort} mdxType=\"Table\">\n        <Table.Header>\n          <Table.Column width={50} sortableField='id'>\n            #\n          </Table.Column>\n          <Table.Column sortableField='name'>Nome</Table.Column>\n          <Table.Column sortableField='email'>Email</Table.Column>\n          <Table.Column align='right'>Valor</Table.Column>\n        </Table.Header>\n        <Table.Body>\n          <Table.Empty count={rows.length} />\n          {rows.map((row, index) => <Table.Row data={row} index={index} key={row.id}>\n              <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\n              <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\n              <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\n              <Table.Cell mobileSize={6} align='right'>\n                {row.price}\n              </Table.Cell>\n            </Table.Row>)}\n        </Table.Body>\n        <Table.Pagination page={page} perPage={perPage} total={100} onChangePage={setPage} onChangePerPage={setPerPage} />\n      </Table>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"collapse-e-actions\"\n    }}>{`Collapse e Actions`}</h3>\n    <Playground __position={1} __code={'() => {\\n  const [sort, setSort] = useState(null)\\n  const [page, setPage] = useState(1)\\n  const [perPage, setPerPage] = useState(10)\\n  const [rows, setRows] = useState(() => {\\n    return new Array(5).fill(\\'a\\').map((_, index) => ({\\n      id: index + 1,\\n      name: `${faker.name.firstName()} ${faker.name.lastName()}`,\\n      email: faker.internet.email().toLowerCase(),\\n      price: faker.commerce.price(),\\n    }))\\n  })\\n  const onSort = useCallback(data => {\\n    setSort(data)\\n    setRows(rows => {\\n      return rows.sort((a, b) => {\\n        if (a[data.field] > b[data.field])\\n          return data.direction === \\'asc\\' ? 1 : -1\\n        if (a[data.field] == b[data.field]) return 0\\n        return data.direction === \\'asc\\' ? -1 : 1\\n      })\\n    })\\n  }, [])\\n  const onEdit = useCallback((data, index) => {\\n    alert(\\n      `Você recebera o data e o index:\\\\n${JSON.stringify(\\n        { data, index },\\n        null,\\n        2,\\n      )}`,\\n    )\\n  }, [])\\n  return (\\n    <Table stripedRows sort={sort} onSort={onSort}>\\n      <Table.Header>\\n        <Table.Column width={50} sortableField=\\\"id\\\">\\n          #\\n        </Table.Column>\\n        <Table.Column sortableField=\\\"name\\\">Nome</Table.Column>\\n        <Table.Column sortableField=\\\"email\\\">Email</Table.Column>\\n        <Table.Column align=\\\"right\\\">Valor</Table.Column>\\n      </Table.Header>\\n      <Table.Body>\\n        <Table.Empty count={rows.length} />\\n        {rows.map((row, index) => (\\n          <Table.Row data={row} index={index} key={row.id}>\\n            <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\\n            <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\\n            <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\\n            <Table.Cell mobileSize={6} align=\\\"right\\\">\\n              {row.price}\\n            </Table.Cell>\\n            <Table.Action onClick={onEdit}>Editar</Table.Action>\\n            <Table.Collapse>Olá!</Table.Collapse>\\n          </Table.Row>\\n        ))}\\n      </Table.Body>\\n      <Table.Pagination\\n        page={page}\\n        perPage={perPage}\\n        total={100}\\n        onChangePage={setPage}\\n        onChangePerPage={setPerPage}\\n      />\\n    </Table>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      useCallback,\n      Playground,\n      faker,\n      of,\n      delay,\n      map,\n      useObservablePaginated,\n      Table,\n      DefaultLayout,\n      salesService,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [sort, setSort] = useState(null);\n        const [page, setPage] = useState(1);\n        const [perPage, setPerPage] = useState(10);\n        const [rows, setRows] = useState(() => {\n          return new Array(5).fill('a').map((_, index) => ({\n            id: index + 1,\n            name: `${faker.name.firstName()} ${faker.name.lastName()}`,\n            email: faker.internet.email().toLowerCase(),\n            price: faker.commerce.price()\n          }));\n        });\n        const onSort = useCallback(data => {\n          setSort(data);\n          setRows(rows => {\n            return rows.sort((a, b) => {\n              if (a[data.field] > b[data.field]) return data.direction === 'asc' ? 1 : -1;\n              if (a[data.field] == b[data.field]) return 0;\n              return data.direction === 'asc' ? -1 : 1;\n            });\n          });\n        }, []);\n        const onEdit = useCallback((data, index) => {\n          alert(`Você recebera o data e o index:\\n${JSON.stringify({\n            data,\n            index\n          }, null, 2)}`);\n        }, []);\n        return <Table stripedRows sort={sort} onSort={onSort} mdxType=\"Table\">\n        <Table.Header>\n          <Table.Column width={50} sortableField='id'>\n            #\n          </Table.Column>\n          <Table.Column sortableField='name'>Nome</Table.Column>\n          <Table.Column sortableField='email'>Email</Table.Column>\n          <Table.Column align='right'>Valor</Table.Column>\n        </Table.Header>\n        <Table.Body>\n          <Table.Empty count={rows.length} />\n          {rows.map((row, index) => <Table.Row data={row} index={index} key={row.id}>\n              <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\n              <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\n              <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\n              <Table.Cell mobileSize={6} align='right'>\n                {row.price}\n              </Table.Cell>\n              <Table.Action onClick={onEdit}>Editar</Table.Action>\n              <Table.Collapse>Olá!</Table.Collapse>\n            </Table.Row>)}\n        </Table.Body>\n        <Table.Pagination page={page} perPage={perPage} total={100} onChangePage={setPage} onChangePerPage={setPerPage} />\n      </Table>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"responsivo\"\n    }}>{`Responsivo`}</h3>\n    <Playground __position={2} __code={'() => {\\n  const [sort, setSort] = useState(null)\\n  const [page, setPage] = useState(1)\\n  const [perPage, setPerPage] = useState(10)\\n  const [rows, setRows] = useState(() => {\\n    return new Array(5).fill(\\'a\\').map((_, index) => ({\\n      id: index + 1,\\n      name: `${faker.name.firstName()} ${faker.name.lastName()}`,\\n      email: faker.internet.email().toLowerCase(),\\n      price: faker.commerce.price(),\\n    }))\\n  })\\n  const onSort = useCallback(data => {\\n    setSort(data)\\n    setRows(rows => {\\n      return rows.sort((a, b) => {\\n        if (a[data.field] > b[data.field])\\n          return data.direction === \\'asc\\' ? 1 : -1\\n        if (a[data.field] == b[data.field]) return 0\\n        return data.direction === \\'asc\\' ? -1 : 1\\n      })\\n    })\\n  }, [])\\n  const onEdit = useCallback((data, index) => {\\n    alert(\\n      `Você recebera o data e o index:\\\\n${JSON.stringify(\\n        { data, index },\\n        null,\\n        2,\\n      )}`,\\n    )\\n  }, [])\\n  return (\\n    <Table stripedRows mobileWidth={true} sort={sort} onSort={onSort}>\\n      <Table.Header>\\n        <Table.Column width={50} sortableField=\\\"id\\\">\\n          #\\n        </Table.Column>\\n        <Table.Column sortableField=\\\"name\\\">Nome</Table.Column>\\n        <Table.Column sortableField=\\\"email\\\">Email</Table.Column>\\n        <Table.Column align=\\\"right\\\">Valor</Table.Column>\\n      </Table.Header>\\n      <Table.Body>\\n        <Table.Empty count={rows.length} />\\n        {rows.map((row, index) => (\\n          <Table.Row data={row} index={index} key={row.id}>\\n            <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\\n            <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\\n            <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\\n            <Table.Cell mobileSize={6} align=\\\"right\\\">\\n              {row.price}\\n            </Table.Cell>\\n            <Table.Action onClick={onEdit}>Editar</Table.Action>\\n            <Table.Collapse>Olá!</Table.Collapse>\\n          </Table.Row>\\n        ))}\\n      </Table.Body>\\n      <Table.Pagination\\n        page={page}\\n        perPage={perPage}\\n        total={100}\\n        onChangePage={setPage}\\n        onChangePerPage={setPerPage}\\n      />\\n    </Table>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      useCallback,\n      Playground,\n      faker,\n      of,\n      delay,\n      map,\n      useObservablePaginated,\n      Table,\n      DefaultLayout,\n      salesService,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [sort, setSort] = useState(null);\n        const [page, setPage] = useState(1);\n        const [perPage, setPerPage] = useState(10);\n        const [rows, setRows] = useState(() => {\n          return new Array(5).fill('a').map((_, index) => ({\n            id: index + 1,\n            name: `${faker.name.firstName()} ${faker.name.lastName()}`,\n            email: faker.internet.email().toLowerCase(),\n            price: faker.commerce.price()\n          }));\n        });\n        const onSort = useCallback(data => {\n          setSort(data);\n          setRows(rows => {\n            return rows.sort((a, b) => {\n              if (a[data.field] > b[data.field]) return data.direction === 'asc' ? 1 : -1;\n              if (a[data.field] == b[data.field]) return 0;\n              return data.direction === 'asc' ? -1 : 1;\n            });\n          });\n        }, []);\n        const onEdit = useCallback((data, index) => {\n          alert(`Você recebera o data e o index:\\n${JSON.stringify({\n            data,\n            index\n          }, null, 2)}`);\n        }, []);\n        return <Table stripedRows mobileWidth={true} sort={sort} onSort={onSort} mdxType=\"Table\">\n        <Table.Header>\n          <Table.Column width={50} sortableField='id'>\n            #\n          </Table.Column>\n          <Table.Column sortableField='name'>Nome</Table.Column>\n          <Table.Column sortableField='email'>Email</Table.Column>\n          <Table.Column align='right'>Valor</Table.Column>\n        </Table.Header>\n        <Table.Body>\n          <Table.Empty count={rows.length} />\n          {rows.map((row, index) => <Table.Row data={row} index={index} key={row.id}>\n              <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\n              <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\n              <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\n              <Table.Cell mobileSize={6} align='right'>\n                {row.price}\n              </Table.Cell>\n              <Table.Action onClick={onEdit}>Editar</Table.Action>\n              <Table.Collapse>Olá!</Table.Collapse>\n            </Table.Row>)}\n        </Table.Body>\n        <Table.Pagination page={page} perPage={perPage} total={100} onChangePage={setPage} onChangePerPage={setPerPage} />\n      </Table>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"sem-dados\"\n    }}>{`Sem dados`}</h3>\n    <p>{`Mensagens customizadas para eventos internos.`}</p>\n    <Playground __position={3} __code={'<Table>\\n  <Table.Header>\\n    <Table.Column>ID</Table.Column>\\n    <Table.Column>Produto</Table.Column>\\n    <Table.Column>Produtor</Table.Column>\\n    <Table.Column align=\\\"right\\\">Valor</Table.Column>\\n  </Table.Header>\\n  <Table.Body>\\n    <Table.Empty count={0} />\\n    <Table.Empty count={0}>Realmente isso está vazio</Table.Empty>\\n  </Table.Body>\\n</Table>'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      useCallback,\n      Playground,\n      faker,\n      of,\n      delay,\n      map,\n      useObservablePaginated,\n      Table,\n      DefaultLayout,\n      salesService,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Table mdxType=\"Table\">\n    <Table.Header>\n      <Table.Column>ID</Table.Column>\n      <Table.Column>Produto</Table.Column>\n      <Table.Column>Produtor</Table.Column>\n      <Table.Column align='right'>Valor</Table.Column>\n    </Table.Header>\n    <Table.Body>\n      <Table.Empty count={0} />\n      <Table.Empty count={0}>Realmente isso está vazio</Table.Empty>\n    </Table.Body>\n  </Table>\n    </Playground>\n    <h3 {...{\n      \"id\": \"usando-um-observable\"\n    }}>{`Usando um Observable`}</h3>\n    <p>{`Você pode de uma maneira fácil utizar o hook `}<strong parentName=\"p\">{`useObservablePaginated`}</strong>{` do `}<strong parentName=\"p\">{`@eduzz/houston-hooks`}</strong>{`:`}</p>\n    <Playground __position={4} __code={'() => {\\n  const {\\n    params,\\n    handleChangePage,\\n    handleChangePerPage,\\n    handleSort,\\n    result,\\n    total,\\n    isLoading,\\n  } = useObservablePaginated(\\n    {\\n      initialParams: { perPage: 5 },\\n      onChangeParams: params => salesService.list(params),\\n    },\\n    [],\\n  )\\n  return (\\n    <Table\\n      stripedRows\\n      sort={params.sort}\\n      onSort={handleSort}\\n      loading={isLoading}\\n    >\\n      <Table.Header>\\n        <Table.Column width={50} sortableField=\\\"id\\\">\\n          #\\n        </Table.Column>\\n        <Table.Column sortableField=\\\"name\\\">Nome</Table.Column>\\n        <Table.Column sortableField=\\\"email\\\">Email</Table.Column>\\n        <Table.Column align=\\\"right\\\">Valor</Table.Column>\\n      </Table.Header>\\n      <Table.Body>\\n        <Table.Empty count={result.length} />\\n        {result.map((row, index) => (\\n          <Table.Row data={row} index={index} key={row.id}>\\n            <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\\n            <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\\n            <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\\n            <Table.Cell mobileSize={6} align=\\\"right\\\">\\n              {row.price}\\n            </Table.Cell>\\n          </Table.Row>\\n        ))}\\n      </Table.Body>\\n      <Table.Pagination\\n        page={params.page}\\n        perPage={params.perPage}\\n        total={total}\\n        onChangePage={handleChangePage}\\n        onChangePerPage={handleChangePerPage}\\n      />\\n    </Table>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      useCallback,\n      Playground,\n      faker,\n      of,\n      delay,\n      map,\n      useObservablePaginated,\n      Table,\n      DefaultLayout,\n      salesService,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const {\n          params,\n          handleChangePage,\n          handleChangePerPage,\n          handleSort,\n          result,\n          total,\n          isLoading\n        } = useObservablePaginated({\n          initialParams: {\n            perPage: 5\n          },\n          onChangeParams: params => salesService.list(params)\n        }, []);\n        return <Table stripedRows sort={params.sort} onSort={handleSort} loading={isLoading} mdxType=\"Table\">\n        <Table.Header>\n          <Table.Column width={50} sortableField='id'>\n            #\n          </Table.Column>\n          <Table.Column sortableField='name'>Nome</Table.Column>\n          <Table.Column sortableField='email'>Email</Table.Column>\n          <Table.Column align='right'>Valor</Table.Column>\n        </Table.Header>\n        <Table.Body>\n          <Table.Empty count={result.length} />\n          {result.map((row, index) => <Table.Row data={row} index={index} key={row.id}>\n              <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\n              <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\n              <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\n              <Table.Cell mobileSize={6} align='right'>\n                {row.price}\n              </Table.Cell>\n            </Table.Row>)}\n        </Table.Body>\n        <Table.Pagination page={params.page} perPage={params.perPage} total={total} onChangePage={handleChangePage} onChangePerPage={handleChangePerPage} />\n      </Table>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"tratando-errors\"\n    }}>{`Tratando Errors`}</h3>\n    <p>{`É possivel tratar os erros de uma maneira fácil apenas passando ele o `}<strong parentName=\"p\">{`Table.Error`}</strong></p>\n    <Playground __position={5} __code={'() => {\\n  const { error, isLoading, result, retry } = useObservablePaginated(\\n    { onChangeParams: () => salesService.listWithError() },\\n    [],\\n  )\\n  const errorFormater = React.useCallback(err => \\'Apenas um erro cara, rlx!\\')\\n  return (\\n    <Table stripedRows loading={isLoading}>\\n      <Table.Header>\\n        <Table.Column width={50} sortableField=\\\"id\\\">\\n          #\\n        </Table.Column>\\n        <Table.Column sortableField=\\\"name\\\">Nome</Table.Column>\\n        <Table.Column sortableField=\\\"email\\\">Email</Table.Column>\\n        <Table.Column align=\\\"right\\\">Valor</Table.Column>\\n      </Table.Header>\\n      <Table.Body>\\n        <Table.Error error={error} />\\n        <Table.Error error={error} formater={errorFormater} />\\n        <Table.Error error={error} formater={errorFormater} onRetry={retry} />\\n        {result.map((row, index) => (\\n          <Table.Row data={row} index={index} key={row.id}>\\n            <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\\n            <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\\n            <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\\n            <Table.Cell mobileSize={6} align=\\\"right\\\">\\n              {row.price}\\n            </Table.Cell>\\n          </Table.Row>\\n        ))}\\n      </Table.Body>\\n    </Table>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      useCallback,\n      Playground,\n      faker,\n      of,\n      delay,\n      map,\n      useObservablePaginated,\n      Table,\n      DefaultLayout,\n      salesService,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const {\n          error,\n          isLoading,\n          result,\n          retry\n        } = useObservablePaginated({\n          onChangeParams: () => salesService.listWithError()\n        }, []);\n        const errorFormater = React.useCallback(err => 'Apenas um erro cara, rlx!');\n        return <Table stripedRows loading={isLoading} mdxType=\"Table\">\n        <Table.Header>\n          <Table.Column width={50} sortableField='id'>\n            #\n          </Table.Column>\n          <Table.Column sortableField='name'>Nome</Table.Column>\n          <Table.Column sortableField='email'>Email</Table.Column>\n          <Table.Column align='right'>Valor</Table.Column>\n        </Table.Header>\n        <Table.Body>\n          <Table.Error error={error} />\n          <Table.Error error={error} formater={errorFormater} />\n          <Table.Error error={error} formater={errorFormater} onRetry={retry} />\n          {result.map((row, index) => <Table.Row data={row} index={index} key={row.id}>\n              <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\n              <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\n              <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\n              <Table.Cell mobileSize={6} align='right'>\n                {row.price}\n              </Table.Cell>\n            </Table.Row>)}\n        </Table.Body>\n      </Table>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"propriedades-disponíveis\"\n    }}>{`Propriedades disponíveis`}</h3>\n    <h3 {...{\n      \"id\": \"table-props\"\n    }}>{`Table props`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tipo`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`obrigatório`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`padrão`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`descrição`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`loading`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`loadingText`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`React.ReactNode`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Carregando...`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`sort`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ITableSort`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Valor atual do sort`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onSort`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`function`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Função chamada ao clicar em uma coluna com `}<inlineCode parentName=\"td\">{`sortableField`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`size`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Size`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`medium`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`maxHeight`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`stripedRows`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`columnActionTitle`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Ações`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Label da coluna de ações e collapse`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`mobileWidth`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number/boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`600`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Tamanho da tela que a tabela irá para o modo mobile, se false a tabela permanecerá sempre uma table`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"tablecolumn-props\"\n    }}>{`Table.Column props`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tipo`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`obrigatório`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`padrão`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`descrição`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`sortableField`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Campo referência para o sort`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`width`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`align`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ITableAlign`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`left`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"tablerow-props\"\n    }}>{`Table.Row props`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tipo`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`obrigatório`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`padrão`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`descrição`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`data`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`any`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Valores da linha, é necessário para o componente `}<inlineCode parentName=\"td\">{`Table.Action`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`index`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`numer`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Index da linha, é necessário para o componente `}<inlineCode parentName=\"td\">{`Table.Action`}</inlineCode>{`.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"tablecell-props\"\n    }}>{`Table.Cell props`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tipo`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`obrigatório`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`padrão`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`descrição`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`align`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ITableAlign`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`left`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`colSpan`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`mobileSize`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`GridSize/boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`auto`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Grid system que cada celula irá seguir no modo mobile`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`mobileAlign`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ITableAlign`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`left`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`columnLabel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Padrão Header`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Existe um processo para pegar o label do header, mas caso queria mudar basta passar um valor`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"tableoption-props\"\n    }}>{`Table.Option props`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tipo`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`obrigatório`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`padrão`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`descrição`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onClick`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(row: data, index: number) => void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`disabled`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`order`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Seguirá o padrão do render, caso tenha alguma opção condicional, pode embralhar a ordem, nesse caso passe o order`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`icon`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`React.ReactNode`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"tablepagination-props\"\n    }}>{`Table.Pagination props`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tipo`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`obrigatório`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`padrão`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`descrição`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}></th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`page`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`perPage`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`total`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optionsPerPage`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\\`number[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string\\``}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`[5, 10, 25, 50]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Pode ser passado uma string separado por virgula, para diminuir o número de render`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`labelItensPerPage`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`React.ReactNode`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Itens por página:`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`labelGoToPage`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`React.ReactNode`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Ir para:`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onChangePage`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(page: number) => void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onChangePerPage`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(perPage: number) => void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"tablecollapse-props\"\n    }}>{`Table.Collapse props`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tipo`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`obrigatório`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`padrão`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`descrição`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onOpen`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(data: unknown, index: number) => void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Função chamada ao abrir.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onClose`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(data: unknown, index: number) => void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Função chamada ao fechar.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`disabled`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`disabledPadding`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Desabilita o padding interno`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`disableBackground`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Desabilita o bacgrkound interno`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}