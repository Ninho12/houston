(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{"/ExV":function(e,t,o){"use strict";o.r(t),o.d(t,"_frontmatter",(function(){return p})),o.d(t,"default",(function(){return f}));var a=o("cxan"),n=o("+wNj"),l=(o("ERkP"),o("ZVZ0")),u=o("9Rvw"),r=o("qbsg"),s=o("x6WP"),i=o("E1Lo"),c=o("f2RX"),b=(o("l1C2"),["components"]),p={};void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"packages/hooks/useBoolean/index.mdx"}});var d={_frontmatter:p},m=u.a;function f(e){var t,o=e.components,f=Object(n.a)(e,b);return Object(l.b)(m,Object(a.a)({},d,f,{components:o,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"useboolean"},"useBoolean"),Object(l.b)("p",null,"Esse é um hooks apenas para facilitar o uso de booleanos, útil quando deseja passar como callback de uma função"),Object(l.b)("h2",{id:"como-usar"},"Como usar"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-tsx"},"const [value, toggleValue, toTrue, toFalse] = useBoolean();\n")),Object(l.b)(r.c,{__position:0,__code:"() => {\n  const [value, toggleValue, toTrue, toFalse] = useBoolean()\n  return (\n    <div>\n      <Typography>Value: {value.toString()}</Typography>\n      <Button onClick={toggleValue}>Click to toggle</Button>\n      <span style={{ marginLeft: 10 }} />\n      <Button onClick={toTrue} disabled={value}>\n        Click to set true\n      </Button>\n      <span style={{ marginLeft: 10 }} />\n      <Button onClick={toFalse} disabled={!value}>\n        Click to set false\n      </Button>\n    </div>\n  )\n}",__scope:(t={props:f,DefaultLayout:u.a,Playground:r.c,Button:s.a,Typography:i.a,useBoolean:c.a},t.DefaultLayout=u.a,t._frontmatter=p,t),mdxType:"Playground"},(function(){var e=Object(c.a)(),t=e[0],o=e[1],a=e[2],n=e[3];return Object(l.b)("div",null,Object(l.b)(i.a,{mdxType:"Typography"},"Value: ",t.toString()),Object(l.b)(s.a,{onClick:o,mdxType:"Button"},"Click to toggle"),Object(l.b)("span",{style:{marginLeft:10}}),Object(l.b)(s.a,{onClick:a,disabled:t,mdxType:"Button"},"Click to set true"),Object(l.b)("span",{style:{marginLeft:10}}),Object(l.b)(s.a,{onClick:n,disabled:!t,mdxType:"Button"},"Click to set false"))})),Object(l.b)("h2",{id:"parâmetros-e-retorno"},"Parâmetros e Retorno"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-tsx"},"/**\n * Simplify the way to use a boolean state\n * @param initial A boolen of a function that return a  boolean\n * @returns [value, toogleValue, toTrue, toFalse]\n */\nexport default function useBoolean(initial?: boolean | (() => boolean)): [boolean, () => void, () => void, () => void];\n")))}void 0!==f&&f&&f===Object(f)&&Object.isExtensible(f)&&!f.hasOwnProperty("__filemeta")&&Object.defineProperty(f,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"packages/hooks/useBoolean/index.mdx"}}),f.isMDXComponent=!0}}]);
//# sourceMappingURL=component---packages-hooks-use-boolean-index-mdx-c27cb3bfa08e56c82050.js.map