name: NPM Publish

on:
  push:
    branches:
      - master

jobs:
  check-version:
    runs-on: ubuntu-latest
    steps:
      - name: Clone
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 15
      - name: Set Version
        id: current-version
        run: echo '::set-output name=VERSION::'$(node -p -e "require('./package.json').version") && echo '::set-output name=BETA::'$(node -p -e "require('./package.json').version.includes('beta')")
    outputs:
      VERSION: ${{ steps.current-version.outputs.VERSION }}
      BETA: ${{ steps.current-version.outputs.BETA }}

  publish:
    needs: check-version
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && ${{ needs.check-version.outputs.BETA }} == 'false'
    steps:
      - name: Clone
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 15
      - name: Prepare Env
        uses: borales/actions-yarn@v2.3.0
        with:
          cmd: install
      - name: Setup NPM Registry
        run: echo '//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}' > ~/.npmrc && npm config get registry && npm whoami
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      - name: Publish
        run: npm run publish -- --ci
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      - name: Set Version
        id: current-version
        run: echo '::set-output name=VERSION::'$(node -p -e "require('./package.json').version") && echo '::set-output name=BETA::'$(node -p -e "require('./package.json').version.includes('beta')")
      - name: Create Tag
        uses: actions/create-release@v1
        with:
          tag_name: v${{ needs.check-version.outputs.VERSION }}
          release_name: Release v${{ needs.check-version.outputs.VERSION }}
          body: No comments
          draft: false
          prerelease: ${{ needs.check-version.outputs.BETA }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
