name: Beta Publish

on:
  push:
    branches:
      - develop

jobs:
  check-version:
    runs-on: ubuntu-latest
    steps:
      - name: Clone
        uses: actions/checkout@v2
      - name: Discord
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.DISCORD_WEBHOOK_ID }}
          webhook_token: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 15
      - name: Set Version
        id: current-version
        run: echo '::set-output name=VERSION::'$(node -p -e "require('./package.json').version") && echo '::set-output name=BETA::'$(node -p -e "require('./package.json').version.includes('beta')")
    outputs:
      VERSION: ${{ steps.current-version.outputs.VERSION }}
      BETA: ${{ steps.current-version.outputs.BETA }}

  should-release:
    runs-on: ubuntu-latest
    steps:
      - name: Clone
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 15
      - name: Deps
        run: npm i -g semver ora
      - name: Run should-release
        run: sh ./scripts/should-release.sh
      - name: Check Skip Release
        id: skip-release
        run: echo '::set-output name=SKIP::'$(cat .skip-release)
    outputs:
      SKIP: ${{ steps.skip-release.outputs.SKIP }}

  publish-beta:
    needs: [check-version, should-release]
    runs-on: ubuntu-latest
    if: needs.check-version.outputs.BETA == 'true' && needs.should-release.outputs.SKIP != 'true'
    steps:
      - name: Clone
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 15
      - name: Prepare Env
        uses: borales/actions-yarn@v2.3.0
        with:
          cmd: install
      - name: Setup NPM Registry
        run: echo '//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}' > ~/.npmrc && npm config get registry && npm whoami
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      - name: Publish
        run: npm run publish -- --ci
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      - name: Check Skip Release
        id: skip-release
        run: echo '::set-output name=SKIP::'$(cat .skip-release)
      - name: Create Tag
        if: steps.skip-release.outputs.SKIP != 'true'
        uses: actions/create-release@v1
        with:
          tag_name: v${{ needs.check-version.outputs.VERSION }}
          release_name: Release v${{ needs.check-version.outputs.VERSION }}
          body: No comments
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
