{"version":3,"sources":["webpack:///../packages/ui-components/Table/index.mdx"],"names":["data","salesService","Array","fill","map","_","index","id","name","faker","firstName","lastName","email","internet","toLowerCase","price","commerce","list","params","of","pipe","result","sort","a","b","field","direction","start","page","perPage","slice","delay","total","length","listWithError","Error","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","useState","useCallback","Playground","useObservablePaginated","Table","setSort","setPage","setPerPage","rows","setRows","onSort","stripedRows","Header","Column","width","sortableField","align","Body","Empty","count","row","Row","key","Cell","mobileSize","Pagination","onChangePage","onChangePerPage","onEdit","alert","JSON","stringify","Action","onClick","Collapse","mobileWidth","initialParams","onChangeParams","handleChangePage","handleChangePerPage","handleSort","isLoading","loading","error","retry","errorFormater","React","err","formater","onRetry","isMDXComponent"],"mappings":"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","file":"component---packages-ui-components-table-index-mdx-184b8340f7fa0012266a.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/github/workspace/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { useState, useCallback } from 'react';\nimport { Playground } from 'docz';\nimport faker from 'faker/locale/pt_BR';\nimport { of } from 'rxjs';\nimport { delay, map } from 'rxjs/operators';\nimport useObservablePaginated from '@eduzz/houston-hooks/useObservablePaginated';\nimport Table from './index.tsx';\nexport const salesService = (() => {\n  const data = new Array(100).fill('a').map((_, index) => ({\n    id: index + 1,\n    name: `${faker.name.firstName()} ${faker.name.lastName()}`,\n    email: faker.internet.email().toLowerCase(),\n    price: faker.commerce.price()\n  }));\n  return {\n    list: params => {\n      return of(data).pipe(map(data => {\n        let result = data;\n\n        if (params.sort) {\n          result = result.sort((a, b) => {\n            if (a[params.sort.field] > b[params.sort.field]) return params.sort.direction === 'asc' ? 1 : -1;\n            if (a[params.sort.field] == b[params.sort.field]) return 0;\n            return params.sort.direction === 'asc' ? -1 : 1;\n          });\n        }\n\n        const start = (params.page - 1) * params.perPage;\n        return result.slice(start, start + params.perPage);\n      }), delay(500), map(result => ({\n        total: data.length,\n        result\n      })));\n    },\n    listWithError: () => of(true).pipe(map(() => new Error('Opá!')))\n  };\n})();\nexport const _frontmatter = {};\nconst layoutProps = {\n  salesService,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n\n\n\n    <h1 {...{\n      \"id\": \"tabela\"\n    }}>{`Tabela`}</h1>\n    <p>{`Tabelas apresentam informações de uma forma fácil de visualizar, de modo que os usuários podem\nprocurar por padrões e percepções.`}</p>\n    <h3 {...{\n      \"id\": \"importação\"\n    }}>{`Importação`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import Table from '@eduzz/houston-ui/Table';\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"tabela-simples\"\n    }}>{`Tabela simples`}</h3>\n    <Playground __position={0} __code={'() => {\\n  const [sort, setSort] = useState(null)\\n  const [page, setPage] = useState(1)\\n  const [perPage, setPerPage] = useState(10)\\n  const [rows, setRows] = useState(() => {\\n    return new Array(5).fill(\\'a\\').map((_, index) => ({\\n      id: index + 1,\\n      name: `${faker.name.firstName()} ${faker.name.lastName()}`,\\n      email: faker.internet.email().toLowerCase(),\\n      price: faker.commerce.price(),\\n    }))\\n  })\\n  const onSort = useCallback(data => {\\n    setSort(data)\\n    setRows(rows => {\\n      return rows.sort((a, b) => {\\n        if (a[data.field] > b[data.field])\\n          return data.direction === \\'asc\\' ? 1 : -1\\n        if (a[data.field] == b[data.field]) return 0\\n        return data.direction === \\'asc\\' ? -1 : 1\\n      })\\n    })\\n  }, [])\\n  return (\\n    <Table stripedRows sort={sort} onSort={onSort}>\\n      <Table.Header>\\n        <Table.Column width={50} sortableField=\\\"id\\\">\\n          #\\n        </Table.Column>\\n        <Table.Column sortableField=\\\"name\\\">Nome</Table.Column>\\n        <Table.Column sortableField=\\\"email\\\">Email</Table.Column>\\n        <Table.Column align=\\\"right\\\">Valor</Table.Column>\\n      </Table.Header>\\n      <Table.Body>\\n        <Table.Empty count={rows.length} />\\n        {rows.map((row, index) => (\\n          <Table.Row data={row} index={index} key={row.id}>\\n            <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\\n            <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\\n            <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\\n            <Table.Cell mobileSize={6} align=\\\"right\\\">\\n              {row.price}\\n            </Table.Cell>\\n          </Table.Row>\\n        ))}\\n      </Table.Body>\\n      <Table.Pagination\\n        page={page}\\n        perPage={perPage}\\n        total={100}\\n        onChangePage={setPage}\\n        onChangePerPage={setPerPage}\\n      />\\n    </Table>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      useCallback,\n      Playground,\n      faker,\n      of,\n      delay,\n      map,\n      useObservablePaginated,\n      Table,\n      DefaultLayout,\n      salesService,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [sort, setSort] = useState(null);\n        const [page, setPage] = useState(1);\n        const [perPage, setPerPage] = useState(10);\n        const [rows, setRows] = useState(() => {\n          return new Array(5).fill('a').map((_, index) => ({\n            id: index + 1,\n            name: `${faker.name.firstName()} ${faker.name.lastName()}`,\n            email: faker.internet.email().toLowerCase(),\n            price: faker.commerce.price()\n          }));\n        });\n        const onSort = useCallback(data => {\n          setSort(data);\n          setRows(rows => {\n            return rows.sort((a, b) => {\n              if (a[data.field] > b[data.field]) return data.direction === 'asc' ? 1 : -1;\n              if (a[data.field] == b[data.field]) return 0;\n              return data.direction === 'asc' ? -1 : 1;\n            });\n          });\n        }, []);\n        return <Table stripedRows sort={sort} onSort={onSort} mdxType=\"Table\">\n        <Table.Header>\n          <Table.Column width={50} sortableField='id'>\n            #\n          </Table.Column>\n          <Table.Column sortableField='name'>Nome</Table.Column>\n          <Table.Column sortableField='email'>Email</Table.Column>\n          <Table.Column align='right'>Valor</Table.Column>\n        </Table.Header>\n        <Table.Body>\n          <Table.Empty count={rows.length} />\n          {rows.map((row, index) => <Table.Row data={row} index={index} key={row.id}>\n              <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\n              <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\n              <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\n              <Table.Cell mobileSize={6} align='right'>\n                {row.price}\n              </Table.Cell>\n            </Table.Row>)}\n        </Table.Body>\n        <Table.Pagination page={page} perPage={perPage} total={100} onChangePage={setPage} onChangePerPage={setPerPage} />\n      </Table>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"collapse-e-actions\"\n    }}>{`Collapse e Actions`}</h3>\n    <Playground __position={1} __code={'() => {\\n  const [sort, setSort] = useState(null)\\n  const [page, setPage] = useState(1)\\n  const [perPage, setPerPage] = useState(10)\\n  const [rows, setRows] = useState(() => {\\n    return new Array(5).fill(\\'a\\').map((_, index) => ({\\n      id: index + 1,\\n      name: `${faker.name.firstName()} ${faker.name.lastName()}`,\\n      email: faker.internet.email().toLowerCase(),\\n      price: faker.commerce.price(),\\n    }))\\n  })\\n  const onSort = useCallback(data => {\\n    setSort(data)\\n    setRows(rows => {\\n      return rows.sort((a, b) => {\\n        if (a[data.field] > b[data.field])\\n          return data.direction === \\'asc\\' ? 1 : -1\\n        if (a[data.field] == b[data.field]) return 0\\n        return data.direction === \\'asc\\' ? -1 : 1\\n      })\\n    })\\n  }, [])\\n  const onEdit = useCallback((data, index) => {\\n    alert(\\n      `Você recebera o data e o index:\\\\n${JSON.stringify(\\n        { data, index },\\n        null,\\n        2,\\n      )}`,\\n    )\\n  }, [])\\n  return (\\n    <Table stripedRows sort={sort} onSort={onSort}>\\n      <Table.Header>\\n        <Table.Column width={50} sortableField=\\\"id\\\">\\n          #\\n        </Table.Column>\\n        <Table.Column sortableField=\\\"name\\\">Nome</Table.Column>\\n        <Table.Column sortableField=\\\"email\\\">Email</Table.Column>\\n        <Table.Column align=\\\"right\\\">Valor</Table.Column>\\n      </Table.Header>\\n      <Table.Body>\\n        <Table.Empty count={rows.length} />\\n        {rows.map((row, index) => (\\n          <Table.Row data={row} index={index} key={row.id}>\\n            <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\\n            <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\\n            <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\\n            <Table.Cell mobileSize={6} align=\\\"right\\\">\\n              {row.price}\\n            </Table.Cell>\\n            <Table.Action onClick={onEdit}>Editar</Table.Action>\\n            <Table.Collapse>Olá!</Table.Collapse>\\n          </Table.Row>\\n        ))}\\n      </Table.Body>\\n      <Table.Pagination\\n        page={page}\\n        perPage={perPage}\\n        total={100}\\n        onChangePage={setPage}\\n        onChangePerPage={setPerPage}\\n      />\\n    </Table>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      useCallback,\n      Playground,\n      faker,\n      of,\n      delay,\n      map,\n      useObservablePaginated,\n      Table,\n      DefaultLayout,\n      salesService,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [sort, setSort] = useState(null);\n        const [page, setPage] = useState(1);\n        const [perPage, setPerPage] = useState(10);\n        const [rows, setRows] = useState(() => {\n          return new Array(5).fill('a').map((_, index) => ({\n            id: index + 1,\n            name: `${faker.name.firstName()} ${faker.name.lastName()}`,\n            email: faker.internet.email().toLowerCase(),\n            price: faker.commerce.price()\n          }));\n        });\n        const onSort = useCallback(data => {\n          setSort(data);\n          setRows(rows => {\n            return rows.sort((a, b) => {\n              if (a[data.field] > b[data.field]) return data.direction === 'asc' ? 1 : -1;\n              if (a[data.field] == b[data.field]) return 0;\n              return data.direction === 'asc' ? -1 : 1;\n            });\n          });\n        }, []);\n        const onEdit = useCallback((data, index) => {\n          alert(`Você recebera o data e o index:\\n${JSON.stringify({\n            data,\n            index\n          }, null, 2)}`);\n        }, []);\n        return <Table stripedRows sort={sort} onSort={onSort} mdxType=\"Table\">\n        <Table.Header>\n          <Table.Column width={50} sortableField='id'>\n            #\n          </Table.Column>\n          <Table.Column sortableField='name'>Nome</Table.Column>\n          <Table.Column sortableField='email'>Email</Table.Column>\n          <Table.Column align='right'>Valor</Table.Column>\n        </Table.Header>\n        <Table.Body>\n          <Table.Empty count={rows.length} />\n          {rows.map((row, index) => <Table.Row data={row} index={index} key={row.id}>\n              <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\n              <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\n              <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\n              <Table.Cell mobileSize={6} align='right'>\n                {row.price}\n              </Table.Cell>\n              <Table.Action onClick={onEdit}>Editar</Table.Action>\n              <Table.Collapse>Olá!</Table.Collapse>\n            </Table.Row>)}\n        </Table.Body>\n        <Table.Pagination page={page} perPage={perPage} total={100} onChangePage={setPage} onChangePerPage={setPerPage} />\n      </Table>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"responsivo\"\n    }}>{`Responsivo`}</h3>\n    <Playground __position={2} __code={'() => {\\n  const [sort, setSort] = useState(null)\\n  const [page, setPage] = useState(1)\\n  const [perPage, setPerPage] = useState(10)\\n  const [rows, setRows] = useState(() => {\\n    return new Array(5).fill(\\'a\\').map((_, index) => ({\\n      id: index + 1,\\n      name: `${faker.name.firstName()} ${faker.name.lastName()}`,\\n      email: faker.internet.email().toLowerCase(),\\n      price: faker.commerce.price(),\\n    }))\\n  })\\n  const onSort = useCallback(data => {\\n    setSort(data)\\n    setRows(rows => {\\n      return rows.sort((a, b) => {\\n        if (a[data.field] > b[data.field])\\n          return data.direction === \\'asc\\' ? 1 : -1\\n        if (a[data.field] == b[data.field]) return 0\\n        return data.direction === \\'asc\\' ? -1 : 1\\n      })\\n    })\\n  }, [])\\n  const onEdit = useCallback((data, index) => {\\n    alert(\\n      `Você recebera o data e o index:\\\\n${JSON.stringify(\\n        { data, index },\\n        null,\\n        2,\\n      )}`,\\n    )\\n  }, [])\\n  return (\\n    <Table stripedRows mobileWidth={true} sort={sort} onSort={onSort}>\\n      <Table.Header>\\n        <Table.Column width={50} sortableField=\\\"id\\\">\\n          #\\n        </Table.Column>\\n        <Table.Column sortableField=\\\"name\\\">Nome</Table.Column>\\n        <Table.Column sortableField=\\\"email\\\">Email</Table.Column>\\n        <Table.Column align=\\\"right\\\">Valor</Table.Column>\\n      </Table.Header>\\n      <Table.Body>\\n        <Table.Empty count={rows.length} />\\n        {rows.map((row, index) => (\\n          <Table.Row data={row} index={index} key={row.id}>\\n            <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\\n            <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\\n            <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\\n            <Table.Cell mobileSize={6} align=\\\"right\\\">\\n              {row.price}\\n            </Table.Cell>\\n            <Table.Action onClick={onEdit}>Editar</Table.Action>\\n            <Table.Collapse>Olá!</Table.Collapse>\\n          </Table.Row>\\n        ))}\\n      </Table.Body>\\n      <Table.Pagination\\n        page={page}\\n        perPage={perPage}\\n        total={100}\\n        onChangePage={setPage}\\n        onChangePerPage={setPerPage}\\n      />\\n    </Table>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      useCallback,\n      Playground,\n      faker,\n      of,\n      delay,\n      map,\n      useObservablePaginated,\n      Table,\n      DefaultLayout,\n      salesService,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [sort, setSort] = useState(null);\n        const [page, setPage] = useState(1);\n        const [perPage, setPerPage] = useState(10);\n        const [rows, setRows] = useState(() => {\n          return new Array(5).fill('a').map((_, index) => ({\n            id: index + 1,\n            name: `${faker.name.firstName()} ${faker.name.lastName()}`,\n            email: faker.internet.email().toLowerCase(),\n            price: faker.commerce.price()\n          }));\n        });\n        const onSort = useCallback(data => {\n          setSort(data);\n          setRows(rows => {\n            return rows.sort((a, b) => {\n              if (a[data.field] > b[data.field]) return data.direction === 'asc' ? 1 : -1;\n              if (a[data.field] == b[data.field]) return 0;\n              return data.direction === 'asc' ? -1 : 1;\n            });\n          });\n        }, []);\n        const onEdit = useCallback((data, index) => {\n          alert(`Você recebera o data e o index:\\n${JSON.stringify({\n            data,\n            index\n          }, null, 2)}`);\n        }, []);\n        return <Table stripedRows mobileWidth={true} sort={sort} onSort={onSort} mdxType=\"Table\">\n        <Table.Header>\n          <Table.Column width={50} sortableField='id'>\n            #\n          </Table.Column>\n          <Table.Column sortableField='name'>Nome</Table.Column>\n          <Table.Column sortableField='email'>Email</Table.Column>\n          <Table.Column align='right'>Valor</Table.Column>\n        </Table.Header>\n        <Table.Body>\n          <Table.Empty count={rows.length} />\n          {rows.map((row, index) => <Table.Row data={row} index={index} key={row.id}>\n              <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\n              <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\n              <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\n              <Table.Cell mobileSize={6} align='right'>\n                {row.price}\n              </Table.Cell>\n              <Table.Action onClick={onEdit}>Editar</Table.Action>\n              <Table.Collapse>Olá!</Table.Collapse>\n            </Table.Row>)}\n        </Table.Body>\n        <Table.Pagination page={page} perPage={perPage} total={100} onChangePage={setPage} onChangePerPage={setPerPage} />\n      </Table>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"sem-dados\"\n    }}>{`Sem dados`}</h3>\n    <p>{`Mensagens customizadas para eventos internos.`}</p>\n    <Playground __position={3} __code={'<Table>\\n  <Table.Header>\\n    <Table.Column>ID</Table.Column>\\n    <Table.Column>Produto</Table.Column>\\n    <Table.Column>Produtor</Table.Column>\\n    <Table.Column align=\\\"right\\\">Valor</Table.Column>\\n  </Table.Header>\\n  <Table.Body>\\n    <Table.Empty count={0} />\\n    <Table.Empty count={0}>Realmente isso está vazio</Table.Empty>\\n  </Table.Body>\\n</Table>'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      useCallback,\n      Playground,\n      faker,\n      of,\n      delay,\n      map,\n      useObservablePaginated,\n      Table,\n      DefaultLayout,\n      salesService,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Table mdxType=\"Table\">\n    <Table.Header>\n      <Table.Column>ID</Table.Column>\n      <Table.Column>Produto</Table.Column>\n      <Table.Column>Produtor</Table.Column>\n      <Table.Column align='right'>Valor</Table.Column>\n    </Table.Header>\n    <Table.Body>\n      <Table.Empty count={0} />\n      <Table.Empty count={0}>Realmente isso está vazio</Table.Empty>\n    </Table.Body>\n  </Table>\n    </Playground>\n    <h3 {...{\n      \"id\": \"usando-um-observable\"\n    }}>{`Usando um Observable`}</h3>\n    <p>{`Você pode de uma maneira fácil utizar o hook `}<strong parentName=\"p\">{`useObservablePaginated`}</strong>{` do `}<strong parentName=\"p\">{`@eduzz/houston-hooks`}</strong>{`:`}</p>\n    <Playground __position={4} __code={'() => {\\n  const {\\n    params,\\n    handleChangePage,\\n    handleChangePerPage,\\n    handleSort,\\n    result,\\n    total,\\n    isLoading,\\n  } = useObservablePaginated(\\n    {\\n      initialParams: { perPage: 5 },\\n      onChangeParams: params => salesService.list(params),\\n    },\\n    [],\\n  )\\n  return (\\n    <Table\\n      stripedRows\\n      sort={params.sort}\\n      onSort={handleSort}\\n      loading={isLoading}\\n    >\\n      <Table.Header>\\n        <Table.Column width={50} sortableField=\\\"id\\\">\\n          #\\n        </Table.Column>\\n        <Table.Column sortableField=\\\"name\\\">Nome</Table.Column>\\n        <Table.Column sortableField=\\\"email\\\">Email</Table.Column>\\n        <Table.Column align=\\\"right\\\">Valor</Table.Column>\\n      </Table.Header>\\n      <Table.Body>\\n        <Table.Empty count={result.length} />\\n        {result.map((row, index) => (\\n          <Table.Row data={row} index={index} key={row.id}>\\n            <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\\n            <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\\n            <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\\n            <Table.Cell mobileSize={6} align=\\\"right\\\">\\n              {row.price}\\n            </Table.Cell>\\n          </Table.Row>\\n        ))}\\n      </Table.Body>\\n      <Table.Pagination\\n        page={params.page}\\n        perPage={params.perPage}\\n        total={total}\\n        onChangePage={handleChangePage}\\n        onChangePerPage={handleChangePerPage}\\n      />\\n    </Table>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      useCallback,\n      Playground,\n      faker,\n      of,\n      delay,\n      map,\n      useObservablePaginated,\n      Table,\n      DefaultLayout,\n      salesService,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const {\n          params,\n          handleChangePage,\n          handleChangePerPage,\n          handleSort,\n          result,\n          total,\n          isLoading\n        } = useObservablePaginated({\n          initialParams: {\n            perPage: 5\n          },\n          onChangeParams: params => salesService.list(params)\n        }, []);\n        return <Table stripedRows sort={params.sort} onSort={handleSort} loading={isLoading} mdxType=\"Table\">\n        <Table.Header>\n          <Table.Column width={50} sortableField='id'>\n            #\n          </Table.Column>\n          <Table.Column sortableField='name'>Nome</Table.Column>\n          <Table.Column sortableField='email'>Email</Table.Column>\n          <Table.Column align='right'>Valor</Table.Column>\n        </Table.Header>\n        <Table.Body>\n          <Table.Empty count={result.length} />\n          {result.map((row, index) => <Table.Row data={row} index={index} key={row.id}>\n              <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\n              <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\n              <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\n              <Table.Cell mobileSize={6} align='right'>\n                {row.price}\n              </Table.Cell>\n            </Table.Row>)}\n        </Table.Body>\n        <Table.Pagination page={params.page} perPage={params.perPage} total={total} onChangePage={handleChangePage} onChangePerPage={handleChangePerPage} />\n      </Table>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"tratando-errors\"\n    }}>{`Tratando Errors`}</h3>\n    <p>{`É possivel tratar os erros de uma maneira fácil apenas passando ele o `}<strong parentName=\"p\">{`Table.Error`}</strong></p>\n    <Playground __position={5} __code={'() => {\\n  const { error, isLoading, result, retry } = useObservablePaginated(\\n    { onChangeParams: () => salesService.listWithError() },\\n    [],\\n  )\\n  const errorFormater = React.useCallback(err => \\'Apenas um erro cara, rlx!\\')\\n  return (\\n    <Table stripedRows loading={isLoading}>\\n      <Table.Header>\\n        <Table.Column width={50} sortableField=\\\"id\\\">\\n          #\\n        </Table.Column>\\n        <Table.Column sortableField=\\\"name\\\">Nome</Table.Column>\\n        <Table.Column sortableField=\\\"email\\\">Email</Table.Column>\\n        <Table.Column align=\\\"right\\\">Valor</Table.Column>\\n      </Table.Header>\\n      <Table.Body>\\n        <Table.Error error={error} />\\n        <Table.Error error={error} formater={errorFormater} />\\n        <Table.Error error={error} formater={errorFormater} onRetry={retry} />\\n        {result.map((row, index) => (\\n          <Table.Row data={row} index={index} key={row.id}>\\n            <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\\n            <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\\n            <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\\n            <Table.Cell mobileSize={6} align=\\\"right\\\">\\n              {row.price}\\n            </Table.Cell>\\n          </Table.Row>\\n        ))}\\n      </Table.Body>\\n    </Table>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      useCallback,\n      Playground,\n      faker,\n      of,\n      delay,\n      map,\n      useObservablePaginated,\n      Table,\n      DefaultLayout,\n      salesService,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const {\n          error,\n          isLoading,\n          result,\n          retry\n        } = useObservablePaginated({\n          onChangeParams: () => salesService.listWithError()\n        }, []);\n        const errorFormater = React.useCallback(err => 'Apenas um erro cara, rlx!');\n        return <Table stripedRows loading={isLoading} mdxType=\"Table\">\n        <Table.Header>\n          <Table.Column width={50} sortableField='id'>\n            #\n          </Table.Column>\n          <Table.Column sortableField='name'>Nome</Table.Column>\n          <Table.Column sortableField='email'>Email</Table.Column>\n          <Table.Column align='right'>Valor</Table.Column>\n        </Table.Header>\n        <Table.Body>\n          <Table.Error error={error} />\n          <Table.Error error={error} formater={errorFormater} />\n          <Table.Error error={error} formater={errorFormater} onRetry={retry} />\n          {result.map((row, index) => <Table.Row data={row} index={index} key={row.id}>\n              <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\n              <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\n              <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\n              <Table.Cell mobileSize={6} align='right'>\n                {row.price}\n              </Table.Cell>\n            </Table.Row>)}\n        </Table.Body>\n      </Table>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"propriedades-disponíveis\"\n    }}>{`Propriedades disponíveis`}</h3>\n    <h3 {...{\n      \"id\": \"table-props\"\n    }}>{`Table props`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tipo`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`obrigatório`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`padrão`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`descrição`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`loading`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`loadingText`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`React.ReactNode`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Carregando...`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`sort`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ITableSort`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Valor atual do sort`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onSort`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`function`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Função chamada ao clicar em uma coluna com `}<inlineCode parentName=\"td\">{`sortableField`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`stickyHeader`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Header fixo, é necessário inserir um valor na prop `}<inlineCode parentName=\"td\">{`maxHeight`}</inlineCode>{` para melhor experiência.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`size`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Size`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`medium`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`maxHeight`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`stripedRows`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`columnActionTitle`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Ações`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Label da coluna de ações e collapse`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`mobileWidth`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number/boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`600`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Tamanho da tela que a tabela irá para o modo mobile, se false a tabela permanecerá sempre uma table`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"tablecolumn-props\"\n    }}>{`Table.Column props`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tipo`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`obrigatório`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`padrão`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`descrição`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`sortableField`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Campo referência para o sort`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`width`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`align`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ITableAlign`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`left`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"tablerow-props\"\n    }}>{`Table.Row props`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tipo`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`obrigatório`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`padrão`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`descrição`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`data`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`any`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Valores da linha, é necessário para o componente `}<inlineCode parentName=\"td\">{`Table.Action`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`idnex`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`numer`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Index da linha, é necessário para o componente `}<inlineCode parentName=\"td\">{`Table.Action`}</inlineCode>{`.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"tablecell-props\"\n    }}>{`Table.Cell props`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tipo`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`obrigatório`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`padrão`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`descrição`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`align`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ITableAlign`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`left`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`colSpan`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`mobileSize`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`GridSize/boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`auto`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Grid system que cada celula irá seguir no modo mobile`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`columnLabel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Padrão Header`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Existe um processo para pegar o label do header, mas caso queria mudar basta passar um valor`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"tableoption-props\"\n    }}>{`Table.Option props`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tipo`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`obrigatório`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`padrão`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`descrição`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onClick`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(row: data, index: number) => void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`disabled`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`order`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Seguirá o padrão do render, caso tenha alguma opção condicional, pode embralhar a ordem, nesse caso passe o order`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`icon`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`React.ReactNode`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"tablepagination-props\"\n    }}>{`Table.Pagination props`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tipo`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`obrigatório`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`padrão`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`descrição`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}></th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`page`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`perPage`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`total`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optionsPerPage`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\\`number[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string\\``}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`[5, 10, 25, 50]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Pode ser passado uma string separado por virgula, para diminuir o número de render`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`labelItensPerPage`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`React.ReactNode`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Itens por página:`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`labelGoToPage`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`React.ReactNode`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Ir para:`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onChangePage`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(page: number) => void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onChangePerPage`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(perPage: number) => void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"tablecollapse-props\"\n    }}>{`Table.Collapse props`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tipo`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`obrigatório`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`padrão`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`descrição`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onOpen`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(data: unknown, index: number) => void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Função chamada ao abrir.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onClose`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(data: unknown, index: number) => void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Função chamada ao fechar.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`disabled`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`disabledPadding`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Desabilita o padding interno`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`disableBackground`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Desabilita o bacgrkound interno`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}