{"version":3,"sources":["webpack:///../packages/ui-components/Table/Row/context.tsx","webpack:///../packages/ui-components/Table/Action/index.tsx","webpack:///../packages/ui-components/Table/context.tsx","webpack:///../packages/ui-components/Table/Loading/index.tsx","webpack:///../packages/ui-components/Table/Body/index.tsx","webpack:///../packages/ui-components/Table/Cell/index.tsx","webpack:///../packages/ui-components/Table/Collapse/index.tsx","webpack:///../packages/ui-components/Table/Column/index.tsx","webpack:///../packages/ui-components/Table/Empty/index.tsx","webpack:///../packages/ui-components/Table/Error/index.tsx","webpack:///../packages/ui-components/Table/Header/index.tsx","webpack:////github/workspace/node_modules/@material-ui/core/esm/TableFooter/TableFooter.js","webpack:///../packages/ui-components/Table/Pagination/index.tsx","webpack:///../packages/ui-components/Table/Row/index.tsx","webpack:///../packages/ui-components/Table/Action/Menu.tsx","webpack:///../packages/ui-components/Table/observer.ts","webpack:///../packages/ui-components/Table/styles.tsx","webpack:///../packages/ui-components/Table/Table.tsx","webpack:///../packages/ui-components/Table/index.tsx","webpack:///../packages/ui-components/Table/index.mdx"],"names":["TableRowContext","createContext","registerCollapse","registerAction","TableActionOption","React","children","disabled","onClick","icon","useContextSelector","context","unregister","content","TableContext","loading","onSort","columns","registerColumn","onShowAction","rowMapLabel","rows","registerRow","stripedRows","useStyle","createUseStyles","theme","text","padding","spacing","TableLoading","columnsLen","length","loadingText","classes","TableRow","className","TableCell","align","colSpan","LinearProgress","Typography","size","fontWeight","lineHeight","TableBody","cellKeyIncremeter","mobileSize","columnLabel","props","cellKey","cellRef","label","current","setAttribute","clsx","ref","TableCollapse","onOpen","onClose","disableBackground","disabledPadding","TableColumn","id","width","sortableField","sort","isSorted","field","handleSort","Error","direction","sortDirection","TableSortLabel","active","TableEmpty","count","opacity","fontStyle","marginTop","TableError","error","onRetry","formater","errorMessage","Button","variant","TableHeader","disabledActionsColumn","hasActions","some","r","hasCollapse","columnActionTitle","TableHead","tablelvl2","_props$component","component","Component","other","Tablelvl2Context","Provider","value","root","role","withStyles","display","name","useStyles","makeStyles","td","paddingLeft","paddingRight","labels","alignItems","whiteSpace","marginRight","input","maxWidth","pages","justifyContent","height","breakpoints","down","Pagination","page","optionsPerPageProp","optionsPerPage","onChangePerPage","onChangePage","total","perPage","labelGoToPage","labelItensPerPage","toString","pageInput","setPageInput","split","map","Number","String","handlePageInputChange","valueOrEvent","event","enterPressed","key","toLowerCase","target","type","currentPage","Math","floor","maxPage","ceil","handleChangePerPage","_","handleChangePage","timeout","setTimeout","clearTimeout","Row","xs","sm","Select","margin","options","onChange","Text","onKeyUp","onBlur","shape","tableActionIncremeter","data","index","columnSpan","useBoolean","showCollapse","toogleShowCollapse","collapse","setCollapse","actions","setActions","oneAction","onClickAction","e","anchorEl","currentTarget","rowData","rowIndex","action","filter","o","onCollapseEnter","onCollapseClose","contextValue","hover","ButtonIcon","color","in","onEntered","onExited","unmountOnExit","option","fontSize","MenuActions","open","optionsProp","menuOptions","anchorOrigin","vertical","horizontal","transformOrigin","Menu","getContentAnchorEl","disableAutoFocusItem","disableAutoFocus","keepMounted","elevation","MenuItem","bindMutationObserver","table","callback","handleMutation","headerLabels","Array","from","shift","cells","reduce","acc","column","tagName","push","textContent","row","forEach","cell","getAttribute","getTableHeaderLabels","Object","keys","observer","MutationObserver","observe","childList","subtree","disconnect","tableContainer","maxHeight","transition","transform","boxSizing","backgroundColor","colors","grey","border","marginLeft","tableResponsive","flexWrap","position","boxShadow","borderRadius","paddingBottom","borderTopLeftRadius","borderTopRightRadius","marginBottom","borderLeft","right","top","bottom","flexDirection","alignSelf","wordBreak","flex","flexGrow","flexBasis","fill","percent","columnsKeyIncrementer","rowKeyIncremeter","Table","stickyHeader","mobileWidth","tableRef","mediaQueryMobile","useMediaQuery","responsive","openedMenuActions","openMenuActions","closeMenuActions","menuActionOptions","setMenuActionOptions","setRowMapLabel","setColumns","setRows","propsStyle","c","unbind","rowMap","TableContainer","withHoustonTheme","nestedComponent","Body","Cell","Column","Collapse","Empty","Header","Action","salesService","faker","firstName","lastName","email","internet","price","commerce","list","params","of","pipe","result","a","b","start","slice","delay","listWithError","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","__position","__code","__scope","useState","useCallback","Playground","useObservablePaginated","setSort","setPage","setPerPage","onEdit","alert","JSON","stringify","initialParams","onChangeParams","isLoading","retry","errorFormater","err","isMDXComponent"],"mappings":"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","file":"component---packages-ui-components-table-index-mdx-4b37669149902229ced2.js","sourcesContent":["import { createContext } from 'use-context-selector';\n\nimport { ITableAction, ITableCollapse } from '../interface';\n\nexport interface ITableRowContext {\n  registerCollapse: (content: ITableCollapse) => () => void;\n  registerAction: (option: Omit<ITableAction, 'key'>) => () => void;\n}\n\nconst TableRowContext = createContext<ITableRowContext>({\n  registerCollapse: () => () => null,\n  registerAction: () => () => null\n});\n\nexport default TableRowContext;\n","import * as React from 'react';\n\nimport { useContextSelector } from 'use-context-selector';\n\nimport TableRowContext from '../Row/context';\n\nexport interface ITableActionOptionProp {\n  children?: React.ReactNode;\n  onClick: (data: unknown, index?: number) => void;\n  icon?: React.ReactNode;\n  disabled?: boolean;\n}\n\nconst TableActionOption = React.memo<ITableActionOptionProp>(({ children, disabled, onClick, icon }) => {\n  const registerAction = useContextSelector(TableRowContext, context => context.registerAction);\n\n  React.useEffect(() => {\n    const unregister = registerAction({ disabled, onClick, icon, content: children });\n    return () => unregister();\n  }, [children, disabled, onClick, icon, registerAction]);\n\n  return null;\n});\n\nexport default TableActionOption;\n","import { createContext } from 'use-context-selector';\n\nimport { ITableSort, ITableAction } from './interface';\n\nexport interface ITableRow {\n  key: string;\n  hasActions: boolean;\n  hasCollapse: boolean;\n}\n\nexport interface ITableActionShow {\n  anchorEl: HTMLElement;\n  rowData: unknown;\n  rowIndex?: number;\n  actions: ITableAction[];\n}\n\nexport interface ITableContext {\n  loading: boolean;\n  loadingText?: React.ReactNode;\n\n  sort?: ITableSort;\n  onSort: (param: ITableSort) => void;\n\n  columns: string[];\n  registerColumn: () => () => void;\n\n  rows: ITableRow[];\n  registerRow: (param: Omit<ITableRow, 'key'>) => () => void;\n\n  rowMapLabel: { [rowKey: string]: string };\n\n  onShowAction: (param: ITableActionShow) => void;\n\n  // isMobile: boolean;\n  stripedRows: boolean;\n  columnActionTitle?: string;\n}\n\nconst TableContext = createContext<ITableContext>({\n  loading: false,\n  onSort: () => null,\n  columns: [],\n  registerColumn: () => () => null,\n  onShowAction: () => null,\n  rowMapLabel: {},\n  rows: [],\n  registerRow: () => () => null,\n  stripedRows: false\n});\n\nexport default TableContext;\n","import * as React from 'react';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { useContextSelector } from 'use-context-selector';\n\nimport createUseStyles from '../../styles/createUseStyles';\nimport Typography from '../../Typography';\nimport TableContext from '../context';\n\nexport interface ITableLoadingProps {}\n\nconst useStyle = createUseStyles(theme => ({\n  text: {\n    padding: theme.spacing(5)\n  }\n}));\n\nconst TableLoading = React.memo<ITableLoadingProps>(() => {\n  const columnsLen = useContextSelector(TableContext, context => context.columns.length);\n  const loading = useContextSelector(TableContext, context => context.loading);\n  const loadingText = useContextSelector(TableContext, context => context.loadingText);\n\n  const classes = useStyle();\n\n  if (!loading) return null;\n\n  return (\n    <TableRow className='table-loader'>\n      <TableCell align='center' colSpan={columnsLen}>\n        <LinearProgress />\n        <Typography size='normal' fontWeight='regular' lineHeight='comfortable' className={classes.text}>\n          {loadingText}\n        </Typography>\n      </TableCell>\n    </TableRow>\n  );\n});\n\nexport default TableLoading;\n","import * as React from 'react';\n\nimport TableBodyMUI from '@material-ui/core/TableBody';\nimport { useContextSelector } from 'use-context-selector';\n\nimport TableContext from '../context';\nimport TableLoading from '../Loading';\n\nexport interface ITableHeadProps {\n  children: React.ReactNode;\n}\n\nconst TableBody = React.memo<ITableHeadProps>(({ children }) => {\n  const loading = useContextSelector(TableContext, context => context.loading);\n\n  return <TableBodyMUI>{loading ? <TableLoading /> : children}</TableBodyMUI>;\n});\n\nexport default TableBody;\n","import * as React from 'react';\n\nimport { GridSize } from '@material-ui/core/Grid';\nimport TableCellMUI, { TableCellProps as ITableCellPropsMUI } from '@material-ui/core/TableCell';\nimport clsx from 'clsx';\nimport { useContextSelector } from 'use-context-selector';\n\nimport TableContext from '../context';\n\nlet cellKeyIncremeter = 0;\n\ntype ITableCellExtends =\n  | 'id'\n  | 'className'\n  | 'children'\n  | 'padding'\n  | 'colSpan'\n  | 'align'\n  | 'onClick'\n  | 'onDoubleClick';\n\nexport interface ITableCellProps extends Pick<ITableCellPropsMUI, ITableCellExtends> {\n  columnLabel?: string;\n  mobileSize?: GridSize | true | false;\n}\n\nconst TableCell = React.memo<ITableCellProps>(({ children, className, mobileSize, columnLabel, ...props }) => {\n  const [cellKey] = React.useState(() => `cell-${++cellKeyIncremeter}`);\n  const cellRef = React.useRef<HTMLTableCellElement>();\n\n  const label = useContextSelector(TableContext, context => context.rowMapLabel[cellKey]);\n\n  React.useEffect(() => {\n    cellRef.current.setAttribute('cell-key', cellKey);\n  }, [cellKey]);\n\n  return (\n    <TableCellMUI {...props} className={clsx(className, `cell-size-${mobileSize ?? 'auto'}`)} ref={cellRef}>\n      <span className='table-label-mobile'>{columnLabel ?? label}</span>\n      {children}\n    </TableCellMUI>\n  );\n});\n\nexport default TableCell;\n","import * as React from 'react';\n\nimport { useContextSelector } from 'use-context-selector';\n\nimport TableRowContext from '../Row/context';\n\nexport interface ITableCollapseProps {\n  onOpen?: (data: unknown, index: number) => void;\n  onClose?: (data: unknown, index: number) => void;\n  disabled?: boolean;\n  children?: React.ReactNode;\n  disabledPadding?: boolean;\n  disableBackground?: boolean;\n}\n\nconst TableCollapse = React.memo<ITableCollapseProps>(\n  ({ onOpen, onClose, disabled, disableBackground, disabledPadding, children }) => {\n    const registerCollapse = useContextSelector(TableRowContext, context => context.registerCollapse);\n\n    React.useEffect(() => {\n      const unregister = registerCollapse({\n        disabled,\n        onOpen,\n        onClose,\n        disableBackground,\n        disabledPadding,\n        content: children\n      });\n      return () => unregister();\n    }, [children, disabled, registerCollapse, onOpen, onClose, disableBackground, disabledPadding]);\n\n    return null;\n  }\n);\n\nexport default TableCollapse;\n","import * as React from 'react';\n\nimport TableCell, { TableCellProps } from '@material-ui/core/TableCell';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { useContextSelector } from 'use-context-selector';\n\nimport TableContext from '../context';\nimport { ITableAlign } from '../interface';\n\ntype ITableColumnExtends = 'id' | 'className';\n\nexport interface ITableColumnProps extends Pick<TableCellProps, ITableColumnExtends> {\n  children?: React.ReactNode;\n  width?: number;\n  /**\n   * Default `left`\n   */\n  align?: ITableAlign;\n  /**\n   * Control of ordered columns\n   * Default `false`\n   */\n  sortableField?: string;\n}\n\nconst TableColumn = React.memo<ITableColumnProps>(({ id, align, width, sortableField, children, className }) => {\n  const registerColumn = useContextSelector(TableContext, context => context.registerColumn);\n  const onSort = useContextSelector(TableContext, context => context.onSort);\n  const sort = useContextSelector(TableContext, context => context.sort);\n  const loading = useContextSelector(TableContext, context => context.loading);\n\n  const cellRef = React.useRef<HTMLTableHeaderCellElement>();\n\n  const isSorted = sort?.field === sortableField;\n\n  const handleSort = React.useCallback(() => {\n    if (!onSort) {\n      throw new Error('@eduzz/houston-ui: add the onSort prop to the Table to filter the fields');\n    }\n\n    onSort({\n      field: sortableField,\n      direction: !isSorted || sort?.direction === 'desc' ? 'asc' : 'desc'\n    });\n  }, [onSort, sortableField, isSorted, sort?.direction]);\n\n  React.useEffect(() => {\n    const unregister = registerColumn();\n    return () => unregister();\n  }, [registerColumn]);\n\n  return (\n    <TableCell\n      id={id}\n      align={align}\n      className={className}\n      ref={cellRef}\n      sortDirection={isSorted ? sort?.direction : false}\n      width={width}\n    >\n      {!!sortableField ? (\n        <TableSortLabel\n          active={isSorted}\n          disabled={loading}\n          direction={isSorted ? sort?.direction : 'asc'}\n          onClick={handleSort}\n        >\n          {children}\n        </TableSortLabel>\n      ) : (\n        children\n      )}\n    </TableCell>\n  );\n});\n\nexport default TableColumn;\n","import * as React from 'react';\n\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { useContextSelector } from 'use-context-selector';\n\nimport Typography from '../../Typography';\nimport TableContext from '../context';\n\nexport interface ITableEmptyProps {\n  count: number;\n  children?: React.ReactNode;\n}\n\nconst TableEmpty = React.memo<ITableEmptyProps>(({ children, count }) => {\n  const columnsLen = useContextSelector(TableContext, context => context.columns.length);\n\n  if (count) return null;\n\n  children = children ?? 'Nenhum dado encontrado';\n\n  return (\n    <TableRow className='table-empty-message'>\n      <TableCell align='center' colSpan={columnsLen}>\n        {typeof children === 'string' ? (\n          <Typography size='normal' fontWeight='regular' lineHeight='comfortable'>\n            {children}\n          </Typography>\n        ) : (\n          children\n        )}\n      </TableCell>\n    </TableRow>\n  );\n});\n\nexport default TableEmpty;\n","import * as React from 'react';\n\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { useContextSelector } from 'use-context-selector';\n\nimport Button from '../../Button';\nimport createUseStyles from '../../styles/createUseStyles';\nimport Typography from '../../Typography';\nimport TableContext from '../context';\n\nexport interface ITableEErrorProps {\n  error?: any;\n  formater?: (error: any) => string;\n  onRetry?: () => void;\n  children?: React.ReactNode;\n}\n\nconst useStyle = createUseStyles(theme => ({\n  text: {\n    opacity: 0.8,\n    fontStyle: 'italic',\n    '& + button': { marginTop: theme.spacing(3) }\n  }\n}));\n\nconst TableError = React.memo<ITableEErrorProps>(({ children, error, onRetry, formater }) => {\n  const columnsLen = useContextSelector(TableContext, context => context.columns.length);\n  const classes = useStyle();\n\n  const errorMessage = React.useMemo(() => {\n    if (formater) {\n      return formater(error) ?? 'Algo inesperado aconteceu...';\n    }\n\n    return typeof error === 'string' ? error : 'Algo inesperado aconteceu...';\n  }, [error, formater]);\n\n  if (error) return null;\n  children = children ?? errorMessage;\n\n  return (\n    <TableRow className='table-error-message'>\n      <TableCell align='center' colSpan={columnsLen}>\n        {typeof children === 'string' ? (\n          <>\n            <Typography size='normal' fontWeight='regular' lineHeight='comfortable' className={classes.text}>\n              {children}\n            </Typography>\n\n            {onRetry && (\n              <Button variant='text' onClick={onRetry}>\n                Tentar Novamente\n              </Button>\n            )}\n          </>\n        ) : (\n          children\n        )}\n      </TableCell>\n    </TableRow>\n  );\n});\n\nexport default TableError;\n","import * as React from 'react';\n\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { useContextSelector } from 'use-context-selector';\n\nimport TableColumn from '../Column';\nimport TableContext from '../context';\n\nexport interface ITableHeadProps {\n  children: React.ReactNode;\n  disabledActionsColumn?: boolean;\n}\n\nconst TableHeader = React.memo<ITableHeadProps>(({ children, disabledActionsColumn }) => {\n  const hasActions = useContextSelector(TableContext, context => context.rows.some(r => r.hasActions));\n  const hasCollapse = useContextSelector(TableContext, context => context.rows.some(r => r.hasCollapse));\n  const columnActionTitle = useContextSelector(TableContext, context => context.columnActionTitle);\n\n  return (\n    <TableHead>\n      <TableRow>\n        {children}\n        {(hasActions || hasCollapse) && !disabledActionsColumn && (\n          <TableColumn width={hasCollapse && hasActions ? 100 : 80} align='right'>\n            {columnActionTitle ?? 'Ações'}\n          </TableColumn>\n        )}\n      </TableRow>\n    </TableHead>\n  );\n});\n\nexport default TableHeader;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-footer-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'footer'\n};\nvar defaultComponent = 'tfoot';\nvar TableFooter = /*#__PURE__*/React.forwardRef(function TableFooter(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableFooter'\n})(TableFooter);","import * as React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableRow from '@material-ui/core/TableRow';\nimport PaginationMUI from '@material-ui/lab/Pagination';\nimport { useContextSelector } from 'use-context-selector';\n\nimport SelectField from '../../Forms/Select';\nimport TextField from '../../Forms/Text';\nimport Column from '../../Grid/Column';\nimport Row from '../../Grid/Row';\nimport Typography from '../../Typography';\nimport TableContext from '../context';\n\ntype ITablePaginationExtends = 'id' | 'className' | 'children';\n\nexport interface ITablePagination extends Pick<React.HTMLAttributes<HTMLTableRowElement>, ITablePaginationExtends> {\n  page: number;\n  perPage: number;\n  total: number;\n  optionsPerPage?: number[] | 'string' | false;\n  labelItensPerPage?: React.ReactNode;\n  labelGoToPage?: React.ReactNode;\n  onChangePage: (page: number) => void;\n  onChangePerPage: (rowsPerPage: number) => void;\n}\n\nconst useStyles = makeStyles(theme => ({\n  td: {\n    paddingLeft: 0,\n    paddingRight: 0\n  },\n  labels: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    '& > p': {\n      whiteSpace: 'nowrap',\n      marginRight: theme.spacing(2)\n    }\n  },\n  input: {\n    maxWidth: 50\n  },\n  pages: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    height: '100%',\n    alignItems: 'center',\n    [theme.breakpoints.down('xs')]: {\n      marginTop: theme.spacing(2),\n      justifyContent: 'center'\n    }\n  }\n}));\n\nconst Pagination = React.memo<ITablePagination>(\n  ({\n    page,\n    optionsPerPage: optionsPerPageProp,\n    onChangePerPage,\n    onChangePage,\n    total,\n    perPage,\n    labelGoToPage,\n    labelItensPerPage\n  }) => {\n    const classes = useStyles();\n\n    const columnsLen = useContextSelector(TableContext, context => context.columns.length);\n    const loading = useContextSelector(TableContext, context => context.loading);\n\n    const [pageInput, setPageInput] = React.useState<string>(page?.toString());\n\n    const optionsPerPage = React.useMemo(() => {\n      if (optionsPerPageProp === false) {\n        return null;\n      }\n\n      if (typeof optionsPerPageProp === 'string') {\n        return optionsPerPageProp.split(',').map(value => ({ label: value, value: Number(value) }));\n      }\n\n      return (optionsPerPageProp ?? [5, 10, 25, 50]).map(value => ({ label: String(value), value }));\n    }, [optionsPerPageProp]);\n\n    const handlePageInputChange = React.useCallback(\n      (\n        valueOrEvent: string | React.KeyboardEvent<HTMLDivElement>,\n        event?:\n          | React.KeyboardEvent<HTMLDivElement>\n          | React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>\n          | React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n      ) => {\n        let enterPressed = false;\n        let value = '';\n\n        if (typeof valueOrEvent === 'object') {\n          event = valueOrEvent;\n          enterPressed = valueOrEvent.key?.toLowerCase() === 'enter';\n          value = (valueOrEvent.target as any).value;\n        } else {\n          value = valueOrEvent;\n        }\n\n        setPageInput(value);\n\n        if (event.type === 'change' || (event.type === 'keyup' && !enterPressed)) {\n          return;\n        }\n\n        let currentPage = Math.floor(Number(value));\n        const maxPage = Math.ceil(total / perPage);\n\n        if (!currentPage) {\n          currentPage = 1;\n        }\n\n        if (currentPage > maxPage) {\n          currentPage = maxPage;\n        }\n\n        if (currentPage != Number(value)) {\n          setPageInput(currentPage.toString());\n        }\n\n        if (currentPage === page) {\n          return;\n        }\n\n        onChangePage(currentPage);\n      },\n      [onChangePage, page, perPage, total]\n    );\n\n    const handleChangePerPage = React.useCallback(\n      (_: any, event: React.ChangeEvent<{ name?: string; value: any }>) => {\n        onChangePerPage(event.target.value);\n      },\n      [onChangePerPage]\n    );\n\n    const handleChangePage = React.useCallback(\n      (_: React.ChangeEvent<unknown>, page: number) => {\n        onChangePage(page);\n      },\n      [onChangePage]\n    );\n\n    React.useEffect(() => {\n      const timeout = setTimeout(() => setPageInput(page?.toString()), 500);\n      return () => clearTimeout(timeout);\n    }, [page]);\n\n    return (\n      <TableFooter>\n        <TableRow>\n          <TableCell colSpan={columnsLen} className={classes.td}>\n            <Row>\n              <Column xs={12} sm='auto'>\n                <Row justifyContent='center'>\n                  <Column xs='auto' className={classes.labels}>\n                    <Typography size='small' fontWeight='semibold'>\n                      {labelItensPerPage ?? 'Itens por página:'}\n                    </Typography>\n\n                    <SelectField\n                      disabled={loading}\n                      size='small'\n                      margin='none'\n                      options={optionsPerPage}\n                      value={perPage}\n                      onChange={handleChangePerPage}\n                    />\n                  </Column>\n\n                  <Column xs='auto' className={classes.labels}>\n                    <Typography size='small' fontWeight='semibold'>\n                      {labelGoToPage ?? 'Ir para:'}\n                    </Typography>\n\n                    <TextField\n                      margin='none'\n                      size='small'\n                      disabled={loading}\n                      value={pageInput}\n                      className={classes.input}\n                      onChange={handlePageInputChange}\n                      onKeyUp={handlePageInputChange}\n                      onBlur={handlePageInputChange}\n                    />\n                  </Column>\n                </Row>\n              </Column>\n\n              <Column xs={12} sm={true}>\n                <div className={classes.pages}>\n                  <PaginationMUI\n                    count={Math.ceil(total / perPage)}\n                    page={page ?? 1}\n                    disabled={loading}\n                    shape='rounded'\n                    size='medium'\n                    onChange={handleChangePage}\n                  />\n                </div>\n              </Column>\n            </Row>\n          </TableCell>\n        </TableRow>\n      </TableFooter>\n    );\n  }\n);\n\nexport default Pagination;\n","import * as React from 'react';\n\nimport CollapseMUI from '@material-ui/core/Collapse';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRowMUI, { TableRowProps } from '@material-ui/core/TableRow';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport clsx from 'clsx';\nimport { useContextSelector } from 'use-context-selector';\n\nimport useBoolean from '@eduzz/houston-hooks/useBoolean';\n\nimport ButtonIcon from '../../ButtonIcon';\nimport TableContext from '../context';\nimport { ITableAction, ITableCollapse } from '../interface';\nimport TableRowContext, { ITableRowContext } from './context';\n\nlet tableActionIncremeter = 0;\n\ntype ITableRowExtends = 'id' | 'className' | 'tabIndex' | 'onClick' | 'onDoubleClick';\n\nexport interface ITableRowProps extends Pick<TableRowProps, ITableRowExtends> {\n  data: unknown;\n  index: number;\n  children?: React.ReactNode;\n}\n\nconst TableRow = React.memo<ITableRowProps>(({ data, index, children, className, ...props }) => {\n  const stripedRows = useContextSelector(TableContext, context => context.stripedRows);\n  const onShowAction = useContextSelector(TableContext, context => context.onShowAction);\n  const registerRow = useContextSelector(TableContext, context => context.registerRow);\n  const columnSpan = useContextSelector(TableContext, context => context.columns.length);\n\n  const [showCollapse, toogleShowCollapse] = useBoolean(false);\n\n  const [collapse, setCollapse] = React.useState<ITableCollapse>(null);\n  const [actions, setActions] = React.useState<ITableAction[]>([]);\n\n  const oneAction = actions.length === 1 ? actions[0] : null;\n  const hasActions = actions.length > 0;\n  const hasCollapse = collapse != null;\n\n  const onClickAction = React.useCallback(\n    (e: React.MouseEvent<HTMLButtonElement>) => {\n      if (oneAction) {\n        oneAction.onClick(data, index);\n        return;\n      }\n\n      onShowAction({ anchorEl: e.currentTarget, rowData: data, rowIndex: index, actions });\n    },\n    [oneAction, onShowAction, data, index, actions]\n  );\n\n  const registerCollapse = React.useCallback((content: ITableCollapse) => {\n    setCollapse(content);\n    return () => setCollapse(null);\n  }, []);\n\n  const registerAction = React.useCallback((action: Omit<ITableAction, 'key'>) => {\n    const key = `table-action-option-${++tableActionIncremeter}`;\n    setActions(actions => [...actions, { key, ...action }]);\n    return () => setActions(actions => actions.filter(o => o.key !== key));\n  }, []);\n\n  const onCollapseEnter = React.useCallback(\n    () => collapse.onOpen && collapse.onOpen(data, index),\n    [collapse, data, index]\n  );\n\n  const onCollapseClose = React.useCallback(\n    () => collapse.onClose && collapse.onClose(data, index),\n    [collapse, data, index]\n  );\n\n  React.useEffect(() => {\n    const unregister = registerRow({ hasActions, hasCollapse });\n    return () => unregister();\n  }, [hasActions, hasCollapse, registerRow]);\n\n  const contextValue = React.useMemo<ITableRowContext>(\n    () => ({ registerAction, registerCollapse }),\n    [registerAction, registerCollapse]\n  );\n\n  return (\n    <TableRowContext.Provider value={contextValue}>\n      <TableRowMUI\n        hover={!stripedRows}\n        {...props}\n        className={clsx(\n          hasActions && 'table-row-has-action',\n          hasCollapse && 'table-row-has-collapse',\n          stripedRows ? (index % 2 == 0 ? 'table-row-even' : 'table-row-odd') : null,\n          className\n        )}\n      >\n        {children}\n\n        {(hasActions || hasCollapse) && (\n          <TableCell align='right' className={clsx('table-action-cell', className)}>\n            {hasActions && (\n              <ButtonIcon size='small' onClick={onClickAction} disabled={!actions.length}>\n                {oneAction?.icon ?? <MoreHorizIcon color='action' />}\n              </ButtonIcon>\n            )}\n            {!hasActions && <span />}\n\n            {hasCollapse ? (\n              <ButtonIcon\n                size='small'\n                onClick={toogleShowCollapse}\n                disabled={collapse.disabled}\n                className={clsx('table-collapse-button', showCollapse && 'table-collapse-button-opened')}\n              >\n                <KeyboardArrowDownIcon color='action' />\n              </ButtonIcon>\n            ) : (\n              <span />\n            )}\n          </TableCell>\n        )}\n      </TableRowMUI>\n\n      {hasCollapse && (\n        <TableRowMUI\n          className={clsx(\n            'table-collapse',\n            showCollapse && 'table-collapse-opened',\n            collapse.disableBackground && 'table-collapse-no-background',\n            collapse.disabledPadding && 'table-collapse-no-padding'\n          )}\n        >\n          <TableCell colSpan={columnSpan}>\n            <CollapseMUI\n              in={showCollapse && !collapse.disabled}\n              timeout={350}\n              onEntered={onCollapseEnter}\n              onExited={onCollapseClose}\n              unmountOnExit\n            >\n              <div className='table-collapse-content'>{collapse.content}</div>\n            </CollapseMUI>\n          </TableCell>\n        </TableRowMUI>\n      )}\n    </TableRowContext.Provider>\n  );\n});\n\nexport default TableRow;\n","import * as React from 'react';\n\nimport Menu, { MenuProps } from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { ITableAction } from '../interface';\n\nconst useStyles = makeStyles(() => ({\n  option: {\n    display: 'flex',\n    alignItems: 'center',\n\n    '& svg, span': {\n      marginRight: 8,\n      fontSize: 24\n    }\n  }\n}));\n\ninterface IProps extends MenuProps {\n  anchorEl: HTMLElement;\n  onClose: () => void;\n  options: ITableAction[];\n  rowData: unknown;\n  rowIndex: number;\n}\n\nconst MenuActions = React.memo<IProps>(({ open, onClose, options: optionsProp, anchorEl, rowData, rowIndex }) => {\n  const classes = useStyles();\n\n  const options = React.useMemo(() => {\n    return (optionsProp || []).map(option => ({\n      ...option,\n      onClick: () => {\n        option.onClick(rowData, rowIndex);\n        onClose();\n      }\n    }));\n  }, [onClose, optionsProp, rowData, rowIndex]);\n\n  const menuOptions = React.useMemo<Partial<MenuProps>>(\n    () => ({\n      anchorOrigin: { vertical: 'bottom', horizontal: 'right' },\n      transformOrigin: { vertical: 'top', horizontal: 'right' }\n    }),\n    []\n  );\n\n  return (\n    <Menu\n      anchorEl={anchorEl}\n      open={open}\n      onClose={onClose}\n      getContentAnchorEl={null}\n      disableAutoFocusItem\n      disableAutoFocus\n      keepMounted\n      anchorOrigin={menuOptions.anchorOrigin}\n      transformOrigin={menuOptions.transformOrigin}\n      elevation={3}\n    >\n      {options?.map(option => {\n        return (\n          <MenuItem key={option.key} onClick={option.onClick} disabled={option.disabled}>\n            <div className={classes.option}>\n              {option.icon}\n              {option.content}\n            </div>\n          </MenuItem>\n        );\n      })}\n    </Menu>\n  );\n});\n\nexport default MenuActions;\n","interface IRowMap {\n  [rowKey: string]: string;\n}\n\ninterface ICallback {\n  (rowMap: IRowMap): void;\n}\n\nexport function bindMutationObserver(table: HTMLTableElement, callback: ICallback) {\n  let timeout: any;\n\n  const handleMutation = () => {\n    clearTimeout(timeout);\n\n    timeout = setTimeout(() => {\n      const headerLabels = getTableHeaderLabels(table);\n\n      const hasLabels = !!Object.keys(headerLabels).length;\n      if (!hasLabels) return;\n\n      callback(headerLabels);\n    }, 300);\n  };\n\n  handleMutation();\n  const observer = new MutationObserver(handleMutation);\n  observer.observe(table, { childList: true, subtree: true });\n\n  return () => observer.disconnect();\n}\n\nfunction getTableHeaderLabels(table: HTMLTableElement): IRowMap {\n  const rows = Array.from(table.rows);\n\n  const columns = Array.from(rows.shift()?.cells).reduce((acc, column) => {\n    if (column.tagName.toLowerCase() !== 'th') {\n      return acc;\n    }\n\n    acc.push(column.textContent);\n    return acc;\n  }, []);\n\n  return rows.reduce((acc, row) => {\n    Array.from(row.cells).forEach((cell, index) => {\n      const key = cell.getAttribute('cell-key');\n\n      if (!key) return;\n      acc[key] = columns[index];\n    });\n\n    return acc;\n  }, {} as IRowMap);\n}\n","import createUseStyles from '../styles/createUseStyles';\n\nexport interface IStyleParams {\n  maxHeight: number;\n}\n\nconst useStyles = createUseStyles(theme => ({\n  tableContainer: (props: IStyleParams) => ({\n    maxHeight: props?.maxHeight\n  }),\n  table: {\n    '& .table-label-mobile': {\n      display: 'none'\n    },\n    '& .table-collapse-button': {\n      transition: '.3s'\n    },\n    '& .table-collapse-button-opened': {\n      transform: 'rotate(-180deg)'\n    },\n    '& > tbody > tr > td': {\n      boxSizing: 'border-box'\n    },\n    '& > tbody > tr.table-row-even > td': {\n      backgroundColor: theme.colors.grey[100]\n    },\n    '& > tbody > tr.table-row-even + tr.table-collapse td': {\n      backgroundColor: theme.colors.grey[100]\n    },\n    '& > tbody > tr.table-loader td': {\n      padding: 0\n    },\n    '& > tbody > tr.table-collapse > td': {\n      padding: 0\n    },\n    '& > tbody > tr.table-collapse:not(.table-collapse-opened) > td': {\n      border: 'none'\n    },\n    '& > tbody > tr.table-collapse:not(.table-collapse-no-padding) > td div.table-collapse-content': {\n      padding: theme.spacing(3)\n    },\n    '& > tbody > tr.table-collapse:not(.table-collapse-no-background) > td div.table-collapse-content': {\n      backgroundColor: theme.colors.grey[200]\n    },\n    '& > tbody > tr > td.table-action-cell': {\n      paddingRight: theme.spacing(3)\n    },\n    '& > tbody > tr > td.table-action-cell button + button': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  tableResponsive: {\n    display: 'block !important',\n    '& .table-label-mobile': {\n      display: 'block !important'\n    },\n    '& > thead': {\n      display: 'none'\n    },\n    '& > tbody, & > tfoot, , & > tfoot > tr, & > tfoot > tr > td': {\n      display: 'block'\n    },\n    '& > tbody > tr': {\n      display: 'flex',\n      width: `calc(100% - ${theme.spacing(4)})`,\n      flexWrap: 'wrap',\n      position: 'relative',\n      boxShadow: '0px 2px 1px rgba(0, 0, 0, 0.1)',\n      borderRadius: 3,\n      margin: theme.spacing(2),\n      marginTop: 0,\n      border: `1px solid ${theme.colors.grey[200]}`,\n      padding: theme.spacing(3),\n      paddingBottom: theme.spacing(1),\n      boxSizing: 'border-box'\n    },\n    '& > tbody > tr.table-collapse': {\n      padding: 0,\n      marginTop: (theme.spacing(2) + 2) * -1,\n      borderTopLeftRadius: 0,\n      borderTopRightRadius: 0,\n      boxShadow: 'none',\n      backgroundColor: 'white'\n    },\n    '& > tbody > tr.table-collapse-opened': {\n      boxShadow: '0px 2px 1px rgba(0, 0, 0, 0.1)'\n    },\n    '& > tbody > tr.table-collapse > td': {\n      marginBottom: 0\n    },\n    '& > tbody > tr.table-row-even': {\n      backgroundColor: theme.colors.grey[100]\n    },\n    '& > tbody > tr.table-row-even + tr.table-collapse': {\n      backgroundColor: theme.colors.grey[100]\n    },\n    '& > tbody > tr.table-row-even > td': {\n      backgroundColor: 'transparent'\n    },\n    '& > tbody > tr.table-row-even + tr.table-collapse td': {\n      backgroundColor: 'transparent'\n    },\n    '& > tbody > tr.table-row-has-action, & > tbody > tr.table-row-has-collapse': {\n      paddingRight: 50,\n      '&:before': {\n        content: '\" \"',\n        display: 'block',\n        position: 'absolute',\n        borderLeft: `1px solid ${theme.colors.grey[200]}`,\n        right: 38,\n        top: 0,\n        bottom: 0\n      }\n    },\n    '& > tbody > tr > td.table-action-cell': {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      bottom: theme.spacing(1),\n      flexDirection: 'column',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      display: 'flex',\n      paddingRight: 0,\n      marginBottom: 0\n    },\n    '& > tbody > tr > td.table-action-cell button + button': {\n      marginLeft: 0\n    },\n    '& > tbody > tr > td.table-action-cell button:first-child:not(:last-child)': {\n      alignSelf: 'flex-start'\n    },\n    '& > tbody > tr > td': {\n      boxSizing: 'border-box',\n      wordBreak: 'break-word',\n      padding: 0,\n      marginBottom: theme.spacing(2),\n      flex: 1,\n      border: 'none',\n      flexGrow: 0,\n      flexBasis: '100%',\n      maxWidth: '100%'\n    },\n    '& > tbody > tr.table-loader': {\n      padding: 0,\n      paddingRight: 0,\n      '&:before': {\n        display: 'none'\n      }\n    },\n    '& > tbody > tr.table-empty-message': {\n      paddingRight: 0,\n      '&:before': {\n        display: 'none'\n      }\n    },\n    '& > tbody > tr.table-loader > td': {\n      marginBottom: 0\n    },\n    '& > tbody > tr > td.cell-size-true': {\n      flexGrow: 1,\n      flexBasis: 0,\n      maxWidth: '100%'\n    },\n    ...new Array(12).fill('a').reduce((acc, _, index) => {\n      const size = index + 1;\n      const percent = `${(size / 12) * 100}%`;\n\n      return {\n        ...acc,\n        [`& > tbody > tr > td.cell-size-${size}`]: {\n          flexGrow: 0,\n          maxWidth: percent,\n          flexBasis: percent\n        }\n      };\n    }, {})\n  }\n}));\n\nexport default useStyles;\n","import * as React from 'react';\n\nimport TableMUI, { Size, TableProps } from '@material-ui/core/Table';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport clsx from 'clsx';\n\nimport useBoolean from '@eduzz/houston-hooks/useBoolean';\n\nimport withHoustonTheme from '../styles/ThemeProvider/WrapperTheme';\nimport MenuActions from './Action/Menu';\nimport TableContext, { ITableActionShow, ITableContext, ITableRow } from './context';\nimport { ITableSort } from './interface';\nimport { bindMutationObserver } from './observer';\nimport useStyles, { IStyleParams } from './styles';\n\nlet columnsKeyIncrementer = 0,\n  rowKeyIncremeter = 0;\n\nexport interface ITableProps extends Pick<TableProps, 'id' | 'children' | 'className'> {\n  loading?: boolean;\n  loadingText?: React.ReactNode;\n  stickyHeader?: boolean;\n  sort?: ITableSort;\n  /**\n   * Function called when clicking on an ordered column\n   */\n  onSort?: (ordernation: ITableSort) => void;\n  /**\n   * Default `medium`\n   */\n  size?: Size;\n  /**\n   * Max Height table container\n   */\n  maxHeight?: number;\n  stripedRows?: boolean;\n  columnActionTitle?: string;\n  mobileWidth?: number | boolean;\n}\n\nconst Table: React.FC<ITableProps> = props => {\n  const {\n    stickyHeader,\n    size,\n    id,\n    children,\n    loading,\n    sort,\n    onSort,\n    maxHeight,\n    stripedRows,\n    columnActionTitle,\n    className,\n    mobileWidth,\n    loadingText\n  } = props;\n\n  const tableRef = React.useRef<HTMLTableElement>();\n  const mediaQueryMobile = useMediaQuery(`(max-width: ${props.mobileWidth ?? 600}px)`);\n  const responsive = typeof props.mobileWidth === 'boolean' ? props.mobileWidth : mediaQueryMobile;\n\n  const [openedMenuActions, , openMenuActions, closeMenuActions] = useBoolean(false);\n  const [menuActionOptions, setMenuActionOptions] = React.useState<ITableActionShow>();\n\n  const [rowMapLabel, setRowMapLabel] = React.useState<{ [rowKey: string]: string }>({});\n  const [columns, setColumns] = React.useState<string[]>(() => []);\n  const [rows, setRows] = React.useState<ITableRow[]>([]);\n\n  const propsStyle = React.useMemo<IStyleParams>(() => ({ maxHeight, mobileWidth }), [maxHeight, mobileWidth]);\n  const classes = useStyles(propsStyle);\n\n  const onShowAction = React.useCallback(\n    (data: ITableActionShow) => {\n      setMenuActionOptions(data);\n      openMenuActions();\n    },\n    [openMenuActions]\n  );\n\n  const registerColumn = React.useCallback(() => {\n    const key = `column-${++columnsKeyIncrementer}`;\n\n    setColumns(columns => [...columns, key]);\n    return () => setColumns(columns => columns.filter(c => c != key));\n  }, []);\n\n  const registerRow = React.useCallback((row: Omit<ITableRow, 'key'>) => {\n    const key = `table-row-${++rowKeyIncremeter}`;\n\n    setRows(rows => [...rows, { key, ...row }]);\n    return () => setRows(rows => rows.filter(r => r.key !== key));\n  }, []);\n\n  React.useEffect(() => {\n    const unbind = bindMutationObserver(tableRef.current, rowMap => setRowMapLabel(rowMap));\n    return () => unbind();\n  }, []);\n\n  const contextValue = React.useMemo<ITableContext>(\n    () => ({\n      loading: loading ?? false,\n      loadingText: loadingText ?? 'Carregando...',\n      sort,\n      onSort,\n      onShowAction,\n      registerColumn,\n      rowMapLabel,\n      columns,\n      rows,\n      registerRow,\n      stripedRows,\n      columnActionTitle\n    }),\n    [\n      loading,\n      loadingText,\n      sort,\n      onSort,\n      onShowAction,\n      registerColumn,\n      rowMapLabel,\n      columns,\n      rows,\n      registerRow,\n      stripedRows,\n      columnActionTitle\n    ]\n  );\n\n  return (\n    <TableContext.Provider value={contextValue}>\n      <TableContainer className={classes.tableContainer}>\n        <TableMUI\n          stickyHeader={stickyHeader}\n          size={size}\n          id={id}\n          ref={tableRef}\n          className={clsx(classes.table, responsive && classes.tableResponsive, className)}\n        >\n          {children}\n\n          <MenuActions\n            open={openedMenuActions}\n            anchorEl={menuActionOptions?.anchorEl}\n            options={menuActionOptions?.actions}\n            rowData={menuActionOptions?.rowData}\n            rowIndex={menuActionOptions?.rowIndex}\n            onClose={closeMenuActions}\n          />\n        </TableMUI>\n      </TableContainer>\n    </TableContext.Provider>\n  );\n};\n\nexport default withHoustonTheme(React.memo(Table));\n","import nestedComponent from '../Helpers/nestedComponent';\nimport Action from './Action';\nimport Body from './Body';\nimport Cell from './Cell';\nimport Collapse from './Collapse';\nimport Column from './Column';\nimport Empty from './Empty';\nimport Error from './Error';\nimport Header from './Header';\nimport Pagination from './Pagination';\nimport Row from './Row';\nimport Table from './Table';\n\nexport default nestedComponent(Table, {\n  Body,\n  Cell,\n  Column,\n  Collapse,\n  Empty,\n  Header,\n  Row,\n  Error,\n  Pagination,\n  Action\n});\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/github/workspace/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { useState, useCallback } from 'react';\nimport { Playground } from 'docz';\nimport faker from 'faker/locale/pt_BR';\nimport { of } from 'rxjs';\nimport { delay, map } from 'rxjs/operators';\nimport useObservablePaginated from '@eduzz/houston-hooks/useObservablePaginated';\nimport Table from './index.tsx';\nexport const salesService = (() => {\n  const data = new Array(100).fill('a').map((_, index) => ({\n    id: index + 1,\n    name: `${faker.name.firstName()} ${faker.name.lastName()}`,\n    email: faker.internet.email().toLowerCase(),\n    price: faker.commerce.price()\n  }));\n  return {\n    list: params => {\n      return of(data).pipe(map(data => {\n        let result = data;\n\n        if (params.sort) {\n          result = result.sort((a, b) => {\n            if (a[params.sort.field] > b[params.sort.field]) return params.sort.direction === 'asc' ? 1 : -1;\n            if (a[params.sort.field] == b[params.sort.field]) return 0;\n            return params.sort.direction === 'asc' ? -1 : 1;\n          });\n        }\n\n        const start = (params.page - 1) * params.perPage;\n        return result.slice(start, start + params.perPage);\n      }), delay(500), map(result => ({\n        total: data.length,\n        result\n      })));\n    },\n    listWithError: () => of(true).pipe(map(() => new Error('Opá!')))\n  };\n})();\nexport const _frontmatter = {};\nconst layoutProps = {\n  salesService,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n\n\n\n    <h1 {...{\n      \"id\": \"tabela\"\n    }}>{`Tabela`}</h1>\n    <p>{`Tabelas apresentam informações de uma forma fácil de visualizar, de modo que os usuários podem\nprocurar por padrões e percepções.`}</p>\n    <h3 {...{\n      \"id\": \"importação\"\n    }}>{`Importação`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import Table from '@eduzz/houston-ui/Table';\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"tabela-simples\"\n    }}>{`Tabela simples`}</h3>\n    <Playground __position={0} __code={'() => {\\n  const [sort, setSort] = useState(null)\\n  const [page, setPage] = useState(1)\\n  const [perPage, setPerPage] = useState(10)\\n  const [rows, setRows] = useState(() => {\\n    return new Array(5).fill(\\'a\\').map((_, index) => ({\\n      id: index + 1,\\n      name: `${faker.name.firstName()} ${faker.name.lastName()}`,\\n      email: faker.internet.email().toLowerCase(),\\n      price: faker.commerce.price(),\\n    }))\\n  })\\n  const onSort = useCallback(data => {\\n    setSort(data)\\n    setRows(rows => {\\n      return rows.sort((a, b) => {\\n        if (a[data.field] > b[data.field])\\n          return data.direction === \\'asc\\' ? 1 : -1\\n        if (a[data.field] == b[data.field]) return 0\\n        return data.direction === \\'asc\\' ? -1 : 1\\n      })\\n    })\\n  }, [])\\n  return (\\n    <Table stripedRows sort={sort} onSort={onSort}>\\n      <Table.Header>\\n        <Table.Column width={50} sortableField=\\\"id\\\">\\n          #\\n        </Table.Column>\\n        <Table.Column sortableField=\\\"name\\\">Nome</Table.Column>\\n        <Table.Column sortableField=\\\"email\\\">Email</Table.Column>\\n        <Table.Column align=\\\"right\\\">Valor</Table.Column>\\n      </Table.Header>\\n      <Table.Body>\\n        <Table.Empty count={rows.length} />\\n        {rows.map((row, index) => (\\n          <Table.Row data={row} index={index} key={row.id}>\\n            <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\\n            <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\\n            <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\\n            <Table.Cell mobileSize={6} align=\\\"right\\\">\\n              {row.price}\\n            </Table.Cell>\\n          </Table.Row>\\n        ))}\\n      </Table.Body>\\n      <Table.Pagination\\n        page={page}\\n        perPage={perPage}\\n        total={100}\\n        onChangePage={setPage}\\n        onChangePerPage={setPerPage}\\n      />\\n    </Table>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      useCallback,\n      Playground,\n      faker,\n      of,\n      delay,\n      map,\n      useObservablePaginated,\n      Table,\n      DefaultLayout,\n      salesService,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [sort, setSort] = useState(null);\n        const [page, setPage] = useState(1);\n        const [perPage, setPerPage] = useState(10);\n        const [rows, setRows] = useState(() => {\n          return new Array(5).fill('a').map((_, index) => ({\n            id: index + 1,\n            name: `${faker.name.firstName()} ${faker.name.lastName()}`,\n            email: faker.internet.email().toLowerCase(),\n            price: faker.commerce.price()\n          }));\n        });\n        const onSort = useCallback(data => {\n          setSort(data);\n          setRows(rows => {\n            return rows.sort((a, b) => {\n              if (a[data.field] > b[data.field]) return data.direction === 'asc' ? 1 : -1;\n              if (a[data.field] == b[data.field]) return 0;\n              return data.direction === 'asc' ? -1 : 1;\n            });\n          });\n        }, []);\n        return <Table stripedRows sort={sort} onSort={onSort} mdxType=\"Table\">\n        <Table.Header>\n          <Table.Column width={50} sortableField='id'>\n            #\n          </Table.Column>\n          <Table.Column sortableField='name'>Nome</Table.Column>\n          <Table.Column sortableField='email'>Email</Table.Column>\n          <Table.Column align='right'>Valor</Table.Column>\n        </Table.Header>\n        <Table.Body>\n          <Table.Empty count={rows.length} />\n          {rows.map((row, index) => <Table.Row data={row} index={index} key={row.id}>\n              <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\n              <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\n              <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\n              <Table.Cell mobileSize={6} align='right'>\n                {row.price}\n              </Table.Cell>\n            </Table.Row>)}\n        </Table.Body>\n        <Table.Pagination page={page} perPage={perPage} total={100} onChangePage={setPage} onChangePerPage={setPerPage} />\n      </Table>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"collapse-e-actions\"\n    }}>{`Collapse e Actions`}</h3>\n    <Playground __position={1} __code={'() => {\\n  const [sort, setSort] = useState(null)\\n  const [page, setPage] = useState(1)\\n  const [perPage, setPerPage] = useState(10)\\n  const [rows, setRows] = useState(() => {\\n    return new Array(5).fill(\\'a\\').map((_, index) => ({\\n      id: index + 1,\\n      name: `${faker.name.firstName()} ${faker.name.lastName()}`,\\n      email: faker.internet.email().toLowerCase(),\\n      price: faker.commerce.price(),\\n    }))\\n  })\\n  const onSort = useCallback(data => {\\n    setSort(data)\\n    setRows(rows => {\\n      return rows.sort((a, b) => {\\n        if (a[data.field] > b[data.field])\\n          return data.direction === \\'asc\\' ? 1 : -1\\n        if (a[data.field] == b[data.field]) return 0\\n        return data.direction === \\'asc\\' ? -1 : 1\\n      })\\n    })\\n  }, [])\\n  const onEdit = useCallback((data, index) => {\\n    alert(\\n      `Você recebera o data e o index:\\\\n${JSON.stringify(\\n        { data, index },\\n        null,\\n        2,\\n      )}`,\\n    )\\n  }, [])\\n  return (\\n    <Table stripedRows sort={sort} onSort={onSort}>\\n      <Table.Header>\\n        <Table.Column width={50} sortableField=\\\"id\\\">\\n          #\\n        </Table.Column>\\n        <Table.Column sortableField=\\\"name\\\">Nome</Table.Column>\\n        <Table.Column sortableField=\\\"email\\\">Email</Table.Column>\\n        <Table.Column align=\\\"right\\\">Valor</Table.Column>\\n      </Table.Header>\\n      <Table.Body>\\n        <Table.Empty count={rows.length} />\\n        {rows.map((row, index) => (\\n          <Table.Row data={row} index={index} key={row.id}>\\n            <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\\n            <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\\n            <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\\n            <Table.Cell mobileSize={6} align=\\\"right\\\">\\n              {row.price}\\n            </Table.Cell>\\n            <Table.Action onClick={onEdit}>Editar</Table.Action>\\n            <Table.Collapse>Olá!</Table.Collapse>\\n          </Table.Row>\\n        ))}\\n      </Table.Body>\\n      <Table.Pagination\\n        page={page}\\n        perPage={perPage}\\n        total={100}\\n        onChangePage={setPage}\\n        onChangePerPage={setPerPage}\\n      />\\n    </Table>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      useCallback,\n      Playground,\n      faker,\n      of,\n      delay,\n      map,\n      useObservablePaginated,\n      Table,\n      DefaultLayout,\n      salesService,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [sort, setSort] = useState(null);\n        const [page, setPage] = useState(1);\n        const [perPage, setPerPage] = useState(10);\n        const [rows, setRows] = useState(() => {\n          return new Array(5).fill('a').map((_, index) => ({\n            id: index + 1,\n            name: `${faker.name.firstName()} ${faker.name.lastName()}`,\n            email: faker.internet.email().toLowerCase(),\n            price: faker.commerce.price()\n          }));\n        });\n        const onSort = useCallback(data => {\n          setSort(data);\n          setRows(rows => {\n            return rows.sort((a, b) => {\n              if (a[data.field] > b[data.field]) return data.direction === 'asc' ? 1 : -1;\n              if (a[data.field] == b[data.field]) return 0;\n              return data.direction === 'asc' ? -1 : 1;\n            });\n          });\n        }, []);\n        const onEdit = useCallback((data, index) => {\n          alert(`Você recebera o data e o index:\\n${JSON.stringify({\n            data,\n            index\n          }, null, 2)}`);\n        }, []);\n        return <Table stripedRows sort={sort} onSort={onSort} mdxType=\"Table\">\n        <Table.Header>\n          <Table.Column width={50} sortableField='id'>\n            #\n          </Table.Column>\n          <Table.Column sortableField='name'>Nome</Table.Column>\n          <Table.Column sortableField='email'>Email</Table.Column>\n          <Table.Column align='right'>Valor</Table.Column>\n        </Table.Header>\n        <Table.Body>\n          <Table.Empty count={rows.length} />\n          {rows.map((row, index) => <Table.Row data={row} index={index} key={row.id}>\n              <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\n              <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\n              <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\n              <Table.Cell mobileSize={6} align='right'>\n                {row.price}\n              </Table.Cell>\n              <Table.Action onClick={onEdit}>Editar</Table.Action>\n              <Table.Collapse>Olá!</Table.Collapse>\n            </Table.Row>)}\n        </Table.Body>\n        <Table.Pagination page={page} perPage={perPage} total={100} onChangePage={setPage} onChangePerPage={setPerPage} />\n      </Table>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"responsivo\"\n    }}>{`Responsivo`}</h3>\n    <Playground __position={2} __code={'() => {\\n  const [sort, setSort] = useState(null)\\n  const [page, setPage] = useState(1)\\n  const [perPage, setPerPage] = useState(10)\\n  const [rows, setRows] = useState(() => {\\n    return new Array(5).fill(\\'a\\').map((_, index) => ({\\n      id: index + 1,\\n      name: `${faker.name.firstName()} ${faker.name.lastName()}`,\\n      email: faker.internet.email().toLowerCase(),\\n      price: faker.commerce.price(),\\n    }))\\n  })\\n  const onSort = useCallback(data => {\\n    setSort(data)\\n    setRows(rows => {\\n      return rows.sort((a, b) => {\\n        if (a[data.field] > b[data.field])\\n          return data.direction === \\'asc\\' ? 1 : -1\\n        if (a[data.field] == b[data.field]) return 0\\n        return data.direction === \\'asc\\' ? -1 : 1\\n      })\\n    })\\n  }, [])\\n  const onEdit = useCallback((data, index) => {\\n    alert(\\n      `Você recebera o data e o index:\\\\n${JSON.stringify(\\n        { data, index },\\n        null,\\n        2,\\n      )}`,\\n    )\\n  }, [])\\n  return (\\n    <Table stripedRows mobileWidth={true} sort={sort} onSort={onSort}>\\n      <Table.Header>\\n        <Table.Column width={50} sortableField=\\\"id\\\">\\n          #\\n        </Table.Column>\\n        <Table.Column sortableField=\\\"name\\\">Nome</Table.Column>\\n        <Table.Column sortableField=\\\"email\\\">Email</Table.Column>\\n        <Table.Column align=\\\"right\\\">Valor</Table.Column>\\n      </Table.Header>\\n      <Table.Body>\\n        <Table.Empty count={rows.length} />\\n        {rows.map((row, index) => (\\n          <Table.Row data={row} index={index} key={row.id}>\\n            <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\\n            <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\\n            <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\\n            <Table.Cell mobileSize={6} align=\\\"right\\\">\\n              {row.price}\\n            </Table.Cell>\\n            <Table.Action onClick={onEdit}>Editar</Table.Action>\\n            <Table.Collapse>Olá!</Table.Collapse>\\n          </Table.Row>\\n        ))}\\n      </Table.Body>\\n      <Table.Pagination\\n        page={page}\\n        perPage={perPage}\\n        total={100}\\n        onChangePage={setPage}\\n        onChangePerPage={setPerPage}\\n      />\\n    </Table>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      useCallback,\n      Playground,\n      faker,\n      of,\n      delay,\n      map,\n      useObservablePaginated,\n      Table,\n      DefaultLayout,\n      salesService,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [sort, setSort] = useState(null);\n        const [page, setPage] = useState(1);\n        const [perPage, setPerPage] = useState(10);\n        const [rows, setRows] = useState(() => {\n          return new Array(5).fill('a').map((_, index) => ({\n            id: index + 1,\n            name: `${faker.name.firstName()} ${faker.name.lastName()}`,\n            email: faker.internet.email().toLowerCase(),\n            price: faker.commerce.price()\n          }));\n        });\n        const onSort = useCallback(data => {\n          setSort(data);\n          setRows(rows => {\n            return rows.sort((a, b) => {\n              if (a[data.field] > b[data.field]) return data.direction === 'asc' ? 1 : -1;\n              if (a[data.field] == b[data.field]) return 0;\n              return data.direction === 'asc' ? -1 : 1;\n            });\n          });\n        }, []);\n        const onEdit = useCallback((data, index) => {\n          alert(`Você recebera o data e o index:\\n${JSON.stringify({\n            data,\n            index\n          }, null, 2)}`);\n        }, []);\n        return <Table stripedRows mobileWidth={true} sort={sort} onSort={onSort} mdxType=\"Table\">\n        <Table.Header>\n          <Table.Column width={50} sortableField='id'>\n            #\n          </Table.Column>\n          <Table.Column sortableField='name'>Nome</Table.Column>\n          <Table.Column sortableField='email'>Email</Table.Column>\n          <Table.Column align='right'>Valor</Table.Column>\n        </Table.Header>\n        <Table.Body>\n          <Table.Empty count={rows.length} />\n          {rows.map((row, index) => <Table.Row data={row} index={index} key={row.id}>\n              <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\n              <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\n              <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\n              <Table.Cell mobileSize={6} align='right'>\n                {row.price}\n              </Table.Cell>\n              <Table.Action onClick={onEdit}>Editar</Table.Action>\n              <Table.Collapse>Olá!</Table.Collapse>\n            </Table.Row>)}\n        </Table.Body>\n        <Table.Pagination page={page} perPage={perPage} total={100} onChangePage={setPage} onChangePerPage={setPerPage} />\n      </Table>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"sem-dados\"\n    }}>{`Sem dados`}</h3>\n    <p>{`Mensagens customizadas para eventos internos.`}</p>\n    <Playground __position={3} __code={'<Table>\\n  <Table.Header>\\n    <Table.Column>ID</Table.Column>\\n    <Table.Column>Produto</Table.Column>\\n    <Table.Column>Produtor</Table.Column>\\n    <Table.Column align=\\\"right\\\">Valor</Table.Column>\\n  </Table.Header>\\n  <Table.Body>\\n    <Table.Empty count={0} />\\n    <Table.Empty count={0}>Realmente isso está vazio</Table.Empty>\\n  </Table.Body>\\n</Table>'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      useCallback,\n      Playground,\n      faker,\n      of,\n      delay,\n      map,\n      useObservablePaginated,\n      Table,\n      DefaultLayout,\n      salesService,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Table mdxType=\"Table\">\n    <Table.Header>\n      <Table.Column>ID</Table.Column>\n      <Table.Column>Produto</Table.Column>\n      <Table.Column>Produtor</Table.Column>\n      <Table.Column align='right'>Valor</Table.Column>\n    </Table.Header>\n    <Table.Body>\n      <Table.Empty count={0} />\n      <Table.Empty count={0}>Realmente isso está vazio</Table.Empty>\n    </Table.Body>\n  </Table>\n    </Playground>\n    <h3 {...{\n      \"id\": \"usando-um-observable\"\n    }}>{`Usando um Observable`}</h3>\n    <p>{`Você pode de uma maneira fácil utizar o hook `}<strong parentName=\"p\">{`useObservablePaginated`}</strong>{` do `}<strong parentName=\"p\">{`@eduzz/houston-hooks`}</strong>{`:`}</p>\n    <Playground __position={4} __code={'() => {\\n  const {\\n    params,\\n    handleChangePage,\\n    handleChangePerPage,\\n    handleSort,\\n    result,\\n    total,\\n    isLoading,\\n  } = useObservablePaginated(\\n    {\\n      initialParams: { perPage: 5 },\\n      onChangeParams: params => salesService.list(params),\\n    },\\n    [],\\n  )\\n  return (\\n    <Table\\n      stripedRows\\n      sort={params.sort}\\n      onSort={handleSort}\\n      loading={isLoading}\\n    >\\n      <Table.Header>\\n        <Table.Column width={50} sortableField=\\\"id\\\">\\n          #\\n        </Table.Column>\\n        <Table.Column sortableField=\\\"name\\\">Nome</Table.Column>\\n        <Table.Column sortableField=\\\"email\\\">Email</Table.Column>\\n        <Table.Column align=\\\"right\\\">Valor</Table.Column>\\n      </Table.Header>\\n      <Table.Body>\\n        <Table.Empty count={result.length} />\\n        {result.map((row, index) => (\\n          <Table.Row data={row} index={index} key={row.id}>\\n            <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\\n            <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\\n            <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\\n            <Table.Cell mobileSize={6} align=\\\"right\\\">\\n              {row.price}\\n            </Table.Cell>\\n          </Table.Row>\\n        ))}\\n      </Table.Body>\\n      <Table.Pagination\\n        page={params.page}\\n        perPage={params.perPage}\\n        total={total}\\n        onChangePage={handleChangePage}\\n        onChangePerPage={handleChangePerPage}\\n      />\\n    </Table>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      useCallback,\n      Playground,\n      faker,\n      of,\n      delay,\n      map,\n      useObservablePaginated,\n      Table,\n      DefaultLayout,\n      salesService,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const {\n          params,\n          handleChangePage,\n          handleChangePerPage,\n          handleSort,\n          result,\n          total,\n          isLoading\n        } = useObservablePaginated({\n          initialParams: {\n            perPage: 5\n          },\n          onChangeParams: params => salesService.list(params)\n        }, []);\n        return <Table stripedRows sort={params.sort} onSort={handleSort} loading={isLoading} mdxType=\"Table\">\n        <Table.Header>\n          <Table.Column width={50} sortableField='id'>\n            #\n          </Table.Column>\n          <Table.Column sortableField='name'>Nome</Table.Column>\n          <Table.Column sortableField='email'>Email</Table.Column>\n          <Table.Column align='right'>Valor</Table.Column>\n        </Table.Header>\n        <Table.Body>\n          <Table.Empty count={result.length} />\n          {result.map((row, index) => <Table.Row data={row} index={index} key={row.id}>\n              <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\n              <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\n              <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\n              <Table.Cell mobileSize={6} align='right'>\n                {row.price}\n              </Table.Cell>\n            </Table.Row>)}\n        </Table.Body>\n        <Table.Pagination page={params.page} perPage={params.perPage} total={total} onChangePage={handleChangePage} onChangePerPage={handleChangePerPage} />\n      </Table>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"tratando-errors\"\n    }}>{`Tratando Errors`}</h3>\n    <p>{`É possivel tratar os erros de uma maneira fácil apenas passando ele o `}<strong parentName=\"p\">{`Table.Error`}</strong></p>\n    <Playground __position={5} __code={'() => {\\n  const { error, isLoading, result, retry } = useObservablePaginated(\\n    { onChangeParams: () => salesService.listWithError() },\\n    [],\\n  )\\n  const errorFormater = React.useCallback(err => \\'Apenas um erro cara, rlx!\\')\\n  return (\\n    <Table stripedRows loading={isLoading}>\\n      <Table.Header>\\n        <Table.Column width={50} sortableField=\\\"id\\\">\\n          #\\n        </Table.Column>\\n        <Table.Column sortableField=\\\"name\\\">Nome</Table.Column>\\n        <Table.Column sortableField=\\\"email\\\">Email</Table.Column>\\n        <Table.Column align=\\\"right\\\">Valor</Table.Column>\\n      </Table.Header>\\n      <Table.Body>\\n        <Table.Error error={error} />\\n        <Table.Error error={error} formater={errorFormater} />\\n        <Table.Error error={error} formater={errorFormater} onRetry={retry} />\\n        {result.map((row, index) => (\\n          <Table.Row data={row} index={index} key={row.id}>\\n            <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\\n            <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\\n            <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\\n            <Table.Cell mobileSize={6} align=\\\"right\\\">\\n              {row.price}\\n            </Table.Cell>\\n          </Table.Row>\\n        ))}\\n      </Table.Body>\\n    </Table>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      useCallback,\n      Playground,\n      faker,\n      of,\n      delay,\n      map,\n      useObservablePaginated,\n      Table,\n      DefaultLayout,\n      salesService,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const {\n          error,\n          isLoading,\n          result,\n          retry\n        } = useObservablePaginated({\n          onChangeParams: () => salesService.listWithError()\n        }, []);\n        const errorFormater = React.useCallback(err => 'Apenas um erro cara, rlx!');\n        return <Table stripedRows loading={isLoading} mdxType=\"Table\">\n        <Table.Header>\n          <Table.Column width={50} sortableField='id'>\n            #\n          </Table.Column>\n          <Table.Column sortableField='name'>Nome</Table.Column>\n          <Table.Column sortableField='email'>Email</Table.Column>\n          <Table.Column align='right'>Valor</Table.Column>\n        </Table.Header>\n        <Table.Body>\n          <Table.Error error={error} />\n          <Table.Error error={error} formater={errorFormater} />\n          <Table.Error error={error} formater={errorFormater} onRetry={retry} />\n          {result.map((row, index) => <Table.Row data={row} index={index} key={row.id}>\n              <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\n              <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\n              <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\n              <Table.Cell mobileSize={6} align='right'>\n                {row.price}\n              </Table.Cell>\n            </Table.Row>)}\n        </Table.Body>\n      </Table>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"propriedades-disponíveis\"\n    }}>{`Propriedades disponíveis`}</h3>\n    <h3 {...{\n      \"id\": \"table-props\"\n    }}>{`Table props`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tipo`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`obrigatório`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`padrão`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`descrição`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`loading`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`loadingText`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`React.ReactNode`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Carregando...`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`sort`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ITableSort`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Valor atual do sort`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onSort`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`function`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Função chamada ao clicar em uma coluna com `}<inlineCode parentName=\"td\">{`sortableField`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`stickyHeader`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Header fixo, é necessário inserir um valor na prop `}<inlineCode parentName=\"td\">{`maxHeight`}</inlineCode>{` para melhor experiência.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`size`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Size`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`medium`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`maxHeight`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`stripedRows`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`columnActionTitle`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Ações`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Label da coluna de ações e collapse`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`mobileWidth`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number/boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`600`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Tamanho da tela que a tabela irá para o modo mobile, se false a tabela permanecerá sempre uma table`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"tablecolumn-props\"\n    }}>{`Table.Column props`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tipo`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`obrigatório`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`padrão`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`descrição`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`sortableField`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Campo referência para o sort`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`width`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`align`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ITableAlign`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`left`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"tablerow-props\"\n    }}>{`Table.Row props`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tipo`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`obrigatório`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`padrão`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`descrição`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`data`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`any`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Valores da linha, é necessário para o componente `}<inlineCode parentName=\"td\">{`Table.Action`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`idnex`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`numer`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Index da linha, é necessário para o componente `}<inlineCode parentName=\"td\">{`Table.Action`}</inlineCode>{`.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"tablecell-props\"\n    }}>{`Table.Cell props`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tipo`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`obrigatório`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`padrão`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`descrição`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`align`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ITableAlign`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`left`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`colSpan`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`mobileSize`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`GridSize/boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`auto`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Grid system que cada celula irá seguir no modo mobile`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`columnLabel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Padrão Header`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Existe um processo para pegar o label do header, mas caso queria mudar basta passar um valor`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"tableoption-props\"\n    }}>{`Table.Option props`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tipo`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`obrigatório`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`padrão`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`descrição`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onClick`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(row: data, index: number) => void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`disabled`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`order`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Seguirá o padrão do render, caso tenha alguma opção condicional, pode embralhar a ordem, nesse caso passe o order`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`icon`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`React.ReactNode`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"tablepagination-props\"\n    }}>{`Table.Pagination props`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tipo`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`obrigatório`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`padrão`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`descrição`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}></th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`page`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`perPage`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`total`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optionsPerPage`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\\`number[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string\\``}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`[5, 10, 25, 50]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Pode ser passado uma string separado por virgula, para diminuir o número de render`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`labelItensPerPage`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`React.ReactNode`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Itens por página:`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`labelGoToPage`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`React.ReactNode`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Ir para:`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onChangePage`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(page: number) => void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onChangePerPage`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(perPage: number) => void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"tablecollapse-props\"\n    }}>{`Table.Collapse props`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tipo`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`obrigatório`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`padrão`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`descrição`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onOpen`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(data: unknown, index: number) => void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Função chamada ao abrir.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onClose`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(data: unknown, index: number) => void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Função chamada ao fechar.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`disabled`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`disabledPadding`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Desabilita o padding interno`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`disableBackground`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Desabilita o bacgrkound interno`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}