(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{HWVT:function(e,r,n){"use strict";n.r(r),n.d(r,"_frontmatter",(function(){return p})),n.d(r,"default",(function(){return f}));var o=n("cxan"),t=n("+wNj"),a=(n("ERkP"),n("ZVZ0")),s=n("9Rvw"),i=n("x6WP"),u=n("E1Lo"),c=n("qbsg"),l=n("c1JR"),d=(n("l1C2"),["components"]),p={};void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"packages/hooks/usePromiseRefresh/index.mdx"}});var m={_frontmatter:p},b=s.a;function f(e){var r,n=e.components,f=Object(t.a)(e,d);return Object(a.b)(b,Object(o.a)({},m,f,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"usepromiserefresh"},"usePromiseRefresh"),Object(a.b)("p",null,"Um ",Object(a.b)("strong",{parentName:"p"},"usePromise")," que retorna uma função de refresh para recarregar a promisse, útil na trativa de erros ou refresh."),Object(a.b)("h2",{id:"como-usar"},"Como usar"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-tsx"},"const [value, error, loading, refresh] = usePromiseRefresh(() => userService.get(), []);\n\nreturn (\n  <div>\n    {loading ? 'Carregando' : ''}\n    {value}\n    <Button onClick={refresh} variant='text'>\n      Reset\n    </Button>\n  </div>\n);\n")),Object(a.b)(c.c,{__position:0,__code:"() => {\n  const [value, error, loading, refresh] = usePromiseRefresh(\n    () => new Promise(resolve => setTimeout(() => resolve('olá'), 2000)),\n    [],\n  )\n  return (\n    <div>\n      <Typography>Value: {value}</Typography>\n      <Typography>Loading: {loading.toString()}</Typography>\n      <Button onClick={refresh} variant=\"text\">\n        Reset\n      </Button>\n    </div>\n  )\n}",__scope:(r={props:f,DefaultLayout:s.a,Button:i.a,Typography:u.a,Playground:c.c,usePromiseRefresh:l.a},r.DefaultLayout=s.a,r._frontmatter=p,r),mdxType:"Playground"},(function(){var e=Object(l.a)((function(){return new Promise((function(e){return setTimeout((function(){return e("olá")}),2e3)}))}),[]),r=e[0],n=(e[1],e[2]),o=e[3];return Object(a.b)("div",null,Object(a.b)(u.a,{mdxType:"Typography"},"Value: ",r),Object(a.b)(u.a,{mdxType:"Typography"},"Loading: ",n.toString()),Object(a.b)(i.a,{onClick:o,variant:"text",mdxType:"Button"},"Reset"))})),Object(a.b)("h2",{id:"cuidados"},"Cuidados"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"Erros")," ocorridos serão automaticamentes logados e as o ",Object(a.b)("strong",{parentName:"li"},"onUnhandledError")," no ",Object(a.b)("strong",{parentName:"li"},"setHoustonHooksConfig"),"\nfor setado."),Object(a.b)("li",{parentName:"ul"},"O valor inicial será ",Object(a.b)("strong",{parentName:"li"},"undefined"),", lembre-se de tratar isso quando estiver usando.")),Object(a.b)("h2",{id:"parâmetros-e-retorno"},"Parâmetros e Retorno"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-ts"},"/**\n * @param promiseGenerator Função que retorna uma Promise\n * @param deps Lista de dependências\n * @returns [\n *    value: valor de retorno do Promise,\n *    error: se ocorrer um erro, ele será passado aqui,\n *    loading: boolean se esta carregando ou não,\n *    refresh: function to refresh the data\n * ]\n */\nexport default usePromiseRefresh<T>(promiseGenerator: () => Promise<any>, deps: React.DependencyList): [T, any, boolean];\n")))}void 0!==f&&f&&f===Object(f)&&Object.isExtensible(f)&&!f.hasOwnProperty("__filemeta")&&Object.defineProperty(f,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"packages/hooks/usePromiseRefresh/index.mdx"}}),f.isMDXComponent=!0}}]);
//# sourceMappingURL=component---packages-hooks-use-promise-refresh-index-mdx-cbc5047296a80c935832.js.map