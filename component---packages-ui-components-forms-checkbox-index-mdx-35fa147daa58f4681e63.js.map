{"version":3,"sources":["webpack:///../packages/ui-components/Forms/Checkbox/index.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","CheckboxField","name","label","margin","description","errorMessage","React","setValue","onChange","event","target","checked","console","log","isMDXComponent"],"mappings":"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","file":"component---packages-ui-components-forms-checkbox-index-mdx-35fa147daa58f4681e63.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/github/workspace/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport CheckboxField from './';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"checkbox-field\"\n    }}>{`Checkbox Field`}</h1>\n    <p>{`O componente de caixa de seleção (Checkbox) permite que o usuário selecione um ou mais itens de um determinado grupo.`}</p>\n    <h3 {...{\n      \"id\": \"importação\"\n    }}>{`Importação`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import CheckboxField from '@eduzz/houston-ui/Forms/Checkbox';\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"variações\"\n    }}>{`Variações`}</h3>\n    <Playground __position={0} __code={'<div>\\n  <CheckboxField name=\\\"example-1\\\" label=\\\"Exemplo 1\\\" margin=\\\"normal\\\" />\\n</div>\\n<div>\\n  <CheckboxField\\n    name=\\\"example-2\\\"\\n    label=\\\"Exemplo 2\\\"\\n    description=\\\"Exemplo de utilização do Checkbox com descrição\\\"\\n    margin=\\\"normal\\\"\\n  />\\n</div>\\n<div>\\n  <CheckboxField\\n    name=\\\"example-3\\\"\\n    label=\\\"Exemplo 3\\\"\\n    errorMessage=\\\"Mensagem de erro\\\"\\n    margin=\\\"normal\\\"\\n  />\\n</div>\\n<div>\\n  <CheckboxField\\n    name=\\\"example-4\\\"\\n    label=\\\"Exemplo 4\\\"\\n    description=\\\"Checkbox sem margem\\\"\\n    margin=\\\"none\\\"\\n  />\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      CheckboxField,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <div>\n    <CheckboxField name='example-1' label='Exemplo 1' margin='normal' mdxType=\"CheckboxField\" />\n  </div>\n  <div>\n    <CheckboxField name='example-2' label='Exemplo 2' description='Exemplo de utilização do Checkbox com descrição' margin='normal' mdxType=\"CheckboxField\" />\n  </div>\n  <div>\n    <CheckboxField name='example-3' label='Exemplo 3' errorMessage='Mensagem de erro' margin='normal' mdxType=\"CheckboxField\" />\n  </div>\n  <div>\n    <CheckboxField name='example-4' label='Exemplo 4' description='Checkbox sem margem' margin='none' mdxType=\"CheckboxField\" />\n  </div>\n    </Playground>\n    <h3 {...{\n      \"id\": \"formulário\"\n    }}>{`Formulário`}</h3>\n    <p>{`Caso utilize o componente de caixa de seleção sem estar dentro de um contexto de formulário,\né possível referenciá-lo através da propriedade `}<inlineCode parentName=\"p\">{`form`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import useForm from '@eduzz/houston-forms/useForm';\nimport CheckboxField from '@eduzz/houston-ui/Forms/Checkbox';\n\ninterface IModel {\n  name: string;\n}\n\nconst MyComponent = () => {\n  const form = useForm<IModel>({\n    onSubmit: () => {}\n  });\n\n  return (\n    <CheckboxField\n      name='example-form'\n      label='Exemplo formulário'\n      description='Checkbox fora de um FormContext'\n      form={form}\n    />\n  );\n};\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"utilizando-método-onchange-sem-hook-useform\"\n    }}>{`Utilizando método onChange (sem hook useForm)`}</h3>\n    <Playground __position={1} __code={'() => {\\n  const [value, setValue] = React.useState(false)\\n  const handleChange = event => {\\n    setValue(event.target.checked)\\n    console.log(\\'current checkbox value\\', event.target.checked)\\n  }\\n  return (\\n    <CheckboxField\\n      name=\\\"example-on-change\\\"\\n      label=\\\"Exemplo com método onChange\\\"\\n      description=\\\"Checkbox utilizando método de onChange\\\"\\n      onChange={handleChange}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      CheckboxField,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [value, setValue] = React.useState(false);\n\n        const handleChange = event => {\n          setValue(event.target.checked);\n          console.log('current checkbox value', event.target.checked);\n        };\n\n        return <CheckboxField name='example-on-change' label='Exemplo com método onChange' description='Checkbox utilizando método de onChange' onChange={handleChange} mdxType=\"CheckboxField\" />;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"propriedades\"\n    }}>{`Propriedades`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tipo`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`obrigatório`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`padrão`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`descrição`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`name`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`label`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`React.ReactNode`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`description`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`errorMessage`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`form`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`IFormAdapter<any>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`isMultiple`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Se a propriedade for configurada como `}<inlineCode parentName=\"td\">{`true`}</inlineCode>{` é necessário passar um valor para `}<inlineCode parentName=\"td\">{`form`}</inlineCode>{` obrigatoriamente`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`margin`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`none`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`normal`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`none`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`checked`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Caso a prop `}<inlineCode parentName=\"td\">{`form`}</inlineCode>{` esteja configurada, o componente será checado através dos valores do formulário e essa propriedade será ignorada`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`function`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Função chamada quando o valor do checkbox é alterado`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}