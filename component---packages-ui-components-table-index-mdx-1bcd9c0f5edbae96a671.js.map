{"version":3,"sources":["webpack:///../packages/ui-components/Table/Row/context.tsx","webpack:///../packages/ui-components/Table/Action/index.tsx","webpack:///../packages/ui-components/Table/context.tsx","webpack:///../packages/ui-components/Table/Loading/index.tsx","webpack:///../packages/ui-components/Table/Body/index.tsx","webpack:///../packages/ui-components/Table/Cell/index.tsx","webpack:///../packages/ui-components/Table/Collapse/index.tsx","webpack:///../packages/ui-components/Table/Column/SortLabel/index.tsx","webpack:///../packages/ui-components/Table/Column/index.tsx","webpack:///../packages/ui-components/Table/Empty/index.tsx","webpack:///../packages/ui-components/Table/Error/index.tsx","webpack:///../packages/ui-components/Table/Header/index.tsx","webpack:///../packages/ui-components/Table/Pagination/index.tsx","webpack:///../packages/ui-components/Table/CollapseContent/context.ts","webpack:///../packages/ui-components/Table/CollapseContent/index.tsx","webpack:///../packages/ui-components/Table/Row/styles.ts","webpack:///../packages/ui-components/Table/Row/index.tsx","webpack:///../packages/ui-components/Table/Action/Menu.tsx","webpack:///../packages/ui-components/Table/observer.ts","webpack:///../packages/ui-components/Table/styles.tsx","webpack:///../packages/ui-components/Table/Table.tsx","webpack:///../packages/ui-components/Table/index.tsx","webpack:///../packages/ui-components/Table/index.mdx"],"names":["TableRowContext","createContext","TableActionOption","React","children","disabled","onClick","icon","registerAction","useContextSelector","context","unregister","content","TableContext","useStyle","createUseStyles","theme","text","padding","spacing","TableLoading","classes","isCollapseContent","className","align","colSpan","LinearProgress","Typography","size","fontWeight","lineHeight","CircularProgress","TableBody","loading","loadingText","cellKeyIncremeter","useStyles","root","borderTop","colors","grey","fontSize","textSize","color","rootSmall","TableCell","mobileSize","mobileAlign","columnLabel","onDoubleClick","props","cellKey","cellRef","label","rowMapLabel","tableSize","current","setAttribute","clsx","ref","TableCollapse","onOpen","onClose","disableBackground","disabledPadding","registerCollapse","cursor","display","alignItems","transition","transform","SortLabel","sortable","active","direction","borderBottom","borderBottomColor","TableColumn","sortableField","rest","registerColumn","onSort","sort","isSorted","field","handleSort","Error","TableEmpty","count","columnsLen","columns","length","opacity","fontStyle","marginTop","TableError","error","onRetry","formater","errorMessage","Button","variant","TableHeader","disabledActionsColumn","hasActions","rows","some","r","hasCollapse","columnActionTitle","width","td","perPage","whiteSpace","marginRight","labels","breakpoints","down","input","maxWidth","pages","justifyContent","height","Pagination","page","optionsPerPageProp","optionsPerPage","onChangePerPage","onChangePage","total","labelGoToPage","labelItensPerPage","toString","pageInput","setPageInput","split","map","value","Number","String","handlePageInputChange","valueOrEvent","event","enterPressed","key","toLowerCase","target","type","currentPage","Math","floor","maxPage","ceil","handleChangePerPage","_","handleChangePage","timeout","setTimeout","clearTimeout","Row","xs","sm","Select","margin","options","onChange","Text","onKeyUp","onBlur","shape","TableCollapseContext","CollapseContent","visible","data","index","collapse","onCollapseEnter","onCollapseClose","in","onEntered","onExited","unmountOnExit","Provider","cellAction","cellCollapse","paddingRight","iconAction","borderRadius","background","fill","tableActionIncremeter","TableRow","stripedRows","onShowAction","registerRow","hasCollapseInRows","hasActionInRows","useBoolean","showCollapse","toogleShowCollapse","setCollapse","actions","setActions","oneAction","onClickAction","e","anchorEl","currentTarget","rowData","rowIndex","action","filter","o","contextValue","classesColumnAction","classesColumnCollapse","option","MenuActions","open","optionsProp","menuOptions","anchorOrigin","vertical","horizontal","transformOrigin","Menu","getContentAnchorEl","disableAutoFocusItem","disableAutoFocus","keepMounted","elevation","PaperProps","style","maxHeight","MenuItem","bindMutationObserver","table","callback","handleMutation","headerLabels","Array","from","shift","cells","reduce","acc","column","tagName","push","textContent","row","forEach","cell","getAttribute","getTableHeaderLabels","Object","keys","observer","MutationObserver","observe","childList","subtree","disconnect","tableContainer","position","borderSpacing","boxSizing","backgroundColor","border","marginLeft","textAlign","tableResponsive","flexWrap","boxShadow","paddingBottom","borderTopLeftRadius","borderTopRightRadius","marginBottom","borderLeft","right","top","bottom","flexDirection","alignSelf","wordBreak","flex","flexGrow","flexBasis","percent","columnsKeyIncrementer","rowKeyIncremeter","Table","id","tableRef","mediaQueryMobile","useMediaQuery","mobileWidth","responsive","openedMenuActions","openMenuActions","closeMenuActions","menuActionOptions","setMenuActionOptions","setRowMapLabel","setColumns","setRows","c","unbind","rowMap","TableContainer","withHoustonTheme","nestedComponent","Body","Cell","Column","Collapse","Empty","Header","Action","salesService","name","faker","firstName","lastName","email","internet","price","commerce","list","params","of","pipe","result","a","b","start","slice","delay","listWithError","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","__position","__code","__scope","useState","useCallback","Playground","useObservablePaginated","setSort","setPage","setPerPage","onEdit","alert","JSON","stringify","initialParams","onChangeParams","isLoading","retry","errorFormater","err","isMDXComponent"],"mappings":"wvBAYA,IAAMA,EAAkBC,YAAgC,IAEzCD,S,6mBCDf,IAAME,EAAoBC,QAAmC,YAA2C,IAAxCC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KACrFC,EAAiBC,YAAmBT,GAAiB,SAAAU,GAAO,OAAIA,EAAQF,kBAO9E,OALAL,aAAgB,WACd,IAAMQ,EAAaH,EAAe,CAAEH,WAAUC,UAASC,OAAMK,QAASR,IACtE,OAAO,kBAAMO,OACZ,CAACP,EAAUC,EAAUC,EAASC,EAAMC,IAEhC,QAGMN,S,ypCCqBf,IAAMW,EAAeZ,YAA6B,IAEnCY,S,uoBCjCf,IAAMC,EAAWC,aAAgB,SAAAC,GAAK,MAAK,CACzCC,KAAM,CACJC,QAASF,EAAMG,QAAQ,QAIrBC,EAAejB,QAA+B,YAAc,IAAXc,EAAW,EAAXA,KAC/CI,EAAUP,IAEVQ,EAAoBb,YAAmBI,GAAc,SAAAH,GAAO,OAAIA,EAAQY,qBAE9E,OACE,kBAAIC,UAAU,gBACZ,kBAAIC,MAAM,SAASC,QAAS,MACxBH,GACA,4BACE,YAACI,EAAA,EAAD,MAEA,YAACC,EAAA,EAAD,CAAYC,KAAK,SAASC,WAAW,UAAUC,WAAW,cAAcP,UAAWF,EAAQJ,MACxFA,IAKNK,GACC,mBAAKC,UAAWF,EAAQJ,MACtB,YAACc,EAAA,EAAD,CAAkBH,KAAM,WAQrBR,S,kjBCrCf,IAAMY,EAAY7B,QAA4B,YAAkB,IAAfC,EAAe,EAAfA,SACzC6B,EAAUxB,YAAmBI,GAAc,SAAAH,GAAO,OAAIA,EAAQuB,WAC9DC,EAAczB,YAAmBI,GAAc,SAAAH,GAAO,OAAIA,EAAQwB,eAExE,OAAO,yBAAQD,EAAU,YAAC,EAAD,CAAchB,KAAMiB,IAAkB9B,MAGlD4B,S,gVCTXG,EAAoB,E,kVAexB,IAAMC,EAAYrB,aAAgB,SAAAC,GAAK,MAAK,CAC1CqB,KAAM,CACJnB,QAAS,YACToB,UAAW,aAAatB,EAAMuB,OAAOC,KAAK,KAC1CC,SAAUzB,EAAM0B,SAAS,UACzBC,MAAO3B,EAAMuB,OAAOC,KAAK,KACzBX,WAAYb,EAAMa,WAAW,WAC7BC,WAAYd,EAAMc,WAAW,WAG/Bc,UAAW,CACT1B,QAAS,WACTuB,SAAUzB,EAAM0B,SAAS,cAIvBG,EAAY1C,QAChB,YAA4G,IAAzGC,EAAyG,EAAzGA,SAAUmB,EAA+F,EAA/FA,UAAWuB,EAAoF,EAApFA,WAAYC,EAAwE,EAAxEA,YAAaC,EAA2D,EAA3DA,YAAa1C,EAA8C,EAA9CA,QAAS2C,EAAqC,EAArCA,cAAezB,EAAsB,EAAtBA,MAAU0B,EAAY,iBACpG7B,EAAUe,IAETe,EAAWhD,YAAe,4BAAgBgC,KAAjD,GACMiB,EAAUjD,WAEVkD,EAAQ5C,YAAmBI,GAAc,SAAAH,GAAO,OAAIA,EAAQ4C,YAAYH,MACxEI,EAAY9C,YAAmBI,GAAc,SAAAH,GAAO,OAAIA,EAAQkB,QAMtE,OAJAzB,aAAgB,WACdiD,EAAQI,QAAQC,aAAa,WAAYN,KACxC,CAACA,IAGF,gCACMD,EADN,CAEE5C,QAASA,EACT2C,cAAeA,EACf1B,UAAWmC,kBACTrC,EAAQgB,KACM,UAAdkB,GAAyBlC,EAAQuB,UACjCrB,EAHa,cAIAuB,UAAc,QAJd,eAKCtB,UAAS,QACvBuB,GAAe,qBAAqBA,GAEtCY,IAAKP,IAEL,oBAAM7B,UAAU,sBAAsByB,UAAeK,GACpDjD,MAMMyC,S,glBC7Df,IAAMe,EAAgBzD,QACpB,YAAiF,IAA9E0D,EAA8E,EAA9EA,OAAQC,EAAsE,EAAtEA,QAASzD,EAA6D,EAA7DA,SAAU0D,EAAmD,EAAnDA,kBAAmBC,EAAgC,EAAhCA,gBAAiB5D,EAAe,EAAfA,SAC1D6D,EAAmBxD,YAAmBT,GAAiB,SAAAU,GAAO,OAAIA,EAAQuD,oBAchF,OAZA9D,aAAgB,WACd,IAAMQ,EAAasD,EAAiB,CAClC5D,WACAwD,SACAC,UACAC,oBACAC,kBACApD,QAASR,IAEX,OAAO,kBAAMO,OACZ,CAACP,EAAUC,EAAU4D,EAAkBJ,EAAQC,EAASC,EAAmBC,IAEvE,QAIIJ,S,kPChBTxB,EAAYrB,aAAgB,SAAAC,GAAK,MAAK,CAC1CqB,KAAM,CACJI,SAAUzB,EAAM0B,SAAS,UACzBb,WAAYb,EAAMa,WAAW,YAC7Bc,MAAO3B,EAAMuB,OAAOC,KAAK,KAEzB,YAAa,CACXC,SAAUzB,EAAM0B,SAAS,UAG3B,uBAAwB,CACtBD,SAAUzB,EAAM0B,SAAS,SACzBC,MAAO3B,EAAMuB,OAAOC,KAAK,MAG3B,eAAgB,CACdG,MAAO3B,EAAMuB,OAAOC,KAAK,KACzB0B,OAAQ,WAGV,eAAgB,CACdA,OAAQ,UACRC,QAAS,cACTC,WAAY,UAGd,UAAW,CACTtC,WAAY,EACZuC,WAAY,cAEZ,WAAY,CACVC,UAAW,yBAMbC,EAAuC,SAAC,GAAiE,IAA/DnE,EAA+D,EAA/DA,SAAUoE,EAAqD,EAArDA,SAAUC,EAA2C,EAA3CA,OAAQC,EAAmC,EAAnCA,UAAWrE,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACzFiD,EAAY9C,YAAmBI,GAAc,SAAAH,GAAO,OAAIA,EAAQkB,QAChEN,EAAoBb,YAAmBI,GAAc,SAAAH,GAAO,OAAIA,EAAQY,qBAExED,EAAUe,IAEhB,OAAKoC,GAAYlD,EAEb,oBACEC,UAAWmC,kBACTrC,EAAQgB,KACRhC,GAAY,aACE,UAAdkD,GAAyB,UACzBjC,GAAqB,uBAGtBlB,GAML,mBACEmB,UAAWmC,kBAAKrC,EAAQgB,KAAMhC,GAAY,aAA4B,UAAdkD,GAAyB,UAAW,cAC5FjD,QAASA,GAERF,EAEAqE,GACC,mBAAKlD,UAAWmC,kBAAmB,SAAdgB,GAAwB,SAAU,SACrD,YAAC,IAAD,S,EAOKvE,OAAWoE,G,4pBCpE1B,IAAMnC,EAAYrB,aAAgB,SAAAC,GAAK,MAAK,CAC1CqB,KAAM,CACJnB,QAAS,WACTyD,aAAc,aAAa3D,EAAMuB,OAAOC,KAAK,KAE7C,eAAgB,CACdoC,kBAAmB5D,EAAMuB,OAAOC,KAAK,OAIzCI,UAAW,CACT1B,QAAS,gBAIP2D,EAAc1E,QAA8B,YAA4D,IAAzD2E,EAAyD,EAAzDA,cAAe1E,EAA0C,EAA1CA,SAAUmB,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,MAAUuD,EAAW,iBACtGC,EAAiBvE,YAAmBI,GAAc,SAAAH,GAAO,OAAIA,EAAQsE,kBACrEC,EAASxE,YAAmBI,GAAc,SAAAH,GAAO,OAAIA,EAAQuE,UAC7DC,EAAOzE,YAAmBI,GAAc,SAAAH,GAAO,OAAIA,EAAQwE,QAC3DjD,EAAUxB,YAAmBI,GAAc,SAAAH,GAAO,OAAIA,EAAQuB,WAC9DsB,EAAY9C,YAAmBI,GAAc,SAAAH,GAAO,OAAIA,EAAQkB,QAChEN,EAAoBb,YAAmBI,GAAc,SAAAH,GAAO,OAAIA,EAAQY,qBAExED,EAAUe,IAEVgB,EAAUjD,WAEVgF,GAAWD,aAAA,EAAAA,EAAME,SAAUN,EAE3BO,EAAalF,eAAkB,WACnC,IAAK8E,EACH,MAAM,IAAIK,MAAM,4EAGlBL,EAAO,CACLG,MAAON,EACPJ,UAAYS,GAAgC,UAApBD,aAAA,EAAAA,EAAMR,WAA+B,OAAR,UAEtD,CAACO,EAAQH,EAAeK,EAAUD,aAAlC,EAAkCA,EAAMR,YAO3C,OALAvE,aAAgB,WACd,IAAMQ,EAAaqE,IACnB,OAAO,kBAAMrE,OACZ,CAACqE,IAGF,8BACErB,IAAKP,EACL7B,UAAWmC,kBACTrC,EAAQgB,KACM,UAAdkB,GAAyBlC,EAAQuB,UACjCrB,EAHa,iBAIGC,UAAS,QACzBF,GAAqB,eAEnByD,GAEJ,YAAC,EAAD,CACEP,WAAYM,IAAkBxD,EAC9BmD,OAAQU,EACR9E,SAAU4B,EACVyC,UAAWS,EAAWD,aAAH,EAAGA,EAAMR,UAAY,MACxCpE,QAAS+E,GAERjF,OAMMyE,S,yjBCnFf,IAAMU,EAAapF,QAA6B,YAAyB,MAAtBC,EAAsB,EAAtBA,SAAUoF,EAAY,EAAZA,MACrDC,EAAahF,YAAmBI,GAAc,SAAAH,GAAO,OAAIA,EAAQgF,QAAQC,UAE/E,OAAIH,EAAc,MAElBpF,EAAQ,UAAGA,SAAH,QAAe,yBAGrB,kBAAImB,UAAU,uBACZ,kBAAIC,MAAM,SAASC,QAASgE,GACL,iBAAbrF,EACN,YAACuB,EAAA,EAAD,CAAYC,KAAK,SAASC,WAAW,UAAUC,WAAW,eACvD1B,GAGHA,QAOKmF,S,+kBCrBf,IAAMzE,EAAWC,aAAgB,SAAAC,GAAK,MAAK,CACzCC,KAAM,CACJ2E,QAAS,GACTC,UAAW,SACX,aAAc,CAAEC,UAAW9E,EAAMG,QAAQ,SAIvC4E,GAAa5F,QAA8B,YAA4C,MAAzCC,EAAyC,EAAzCA,SAAU4F,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SACtE7E,EAAUP,IAEVqF,EAAehG,WAAc,WACnB,MAAd,OAAI+F,EACF,UAAOA,EAASF,UAAhB,QAA0B,+BAGJ,iBAAVA,EAAqBA,EAAQ,iCAC1C,CAACA,EAAOE,IAEX,OAAIF,EAAc,MAClB5F,EAAQ,UAAGA,SAAH,QAAe+F,EAGrB,kBAAI5E,UAAU,uBACZ,kBAAIC,MAAM,SAASC,QAAS,KACL,iBAAbrB,EACN,4BACE,YAACuB,EAAA,EAAD,CAAYC,KAAK,SAASC,WAAW,UAAUC,WAAW,cAAcP,UAAWF,EAAQJ,MACxFb,GAGF6F,GACC,YAACG,EAAA,EAAD,CAAQC,QAAQ,OAAO/F,QAAS2F,GAAhC,qBAMJ7F,QAOK2F,W,ujBC9Cf,IAAMO,GAAcnG,QAA4B,YAAyC,IAAtCC,EAAsC,EAAtCA,SAAUmG,EAA4B,EAA5BA,sBACrDC,EAAa/F,YAAmBI,GAAc,SAAAH,GAAO,OAAIA,EAAQ+F,KAAKC,MAAK,SAAAC,GAAC,OAAIA,EAAEH,iBAClFI,EAAcnG,YAAmBI,GAAc,SAAAH,GAAO,OAAIA,EAAQ+F,KAAKC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,kBACnFC,EAAoBpG,YAAmBI,GAAc,SAAAH,GAAO,OAAIA,EAAQmG,qBAE9E,OACE,yBACE,sBACGzG,EAEAoG,IAAeD,GACd,YAAC,EAAD,CAAaO,MAAO,GAAItF,MAAM,SAC3BqF,UAAqB,SAIzBD,GAAe,YAAC,EAAD,CAAaE,MAAO,UAM7BR,W,0oBCPf,IAAMlE,GAAYrB,aAAgB,SAAAC,GAAK,cAAK,CAC1C+F,GAAI,CACF7F,QAAS,UAGX8F,QAAS,CACP7C,QAAS,cACTC,WAAY,SAEZ,QAAS,CACP6C,WAAY,SACZC,YAAalG,EAAMG,QAAQ,GAC3BwB,MAAO3B,EAAMuB,OAAOC,KAAK,OAI7B2E,QAAM,GACJhD,QAAS,cACTC,WAAY,SAEZ,QAAS,CACP6C,WAAY,SACZC,YAAalG,EAAMG,QAAQ,GAC3BwB,MAAO3B,EAAMuB,OAAOC,KAAK,OAPvB,EAUHxB,EAAMoG,YAAYC,KAAK,OAAQ,CAC9BlD,QAAS,QAXP,GAeNmD,MAAO,CACLC,SAAU,IAGZC,OAAK,GACHrD,QAAS,OACTsD,eAAgB,WAChBC,OAAQ,OACRtD,WAAY,UAJT,EAMFpD,EAAMoG,YAAYC,KAAK,OAAQ,CAC9BvB,UAAW9E,EAAMG,QAAQ,GACzBsG,eAAgB,UARf,OAaDE,GAAaxH,QACjB,YASM,IARJyH,EAQI,EARJA,KACgBC,EAOZ,EAPJC,eACAC,EAMI,EANJA,gBACAC,EAKI,EALJA,aACAC,EAII,EAJJA,MACAjB,EAGI,EAHJA,QACAkB,EAEI,EAFJA,cACAC,EACI,EADJA,kBAEM9G,EAAUe,KAEVH,EAAUxB,YAAmBI,GAAc,SAAAH,GAAO,OAAIA,EAAQuB,WAEpE,EAAkC9B,WAAuByH,aAAvB,EAAuBA,EAAMQ,YAAxDC,EAAP,KAAkBC,EAAlB,KAEMR,EAAiB3H,WAAc,WACnC,OAA2B,IAAvB0H,EACK,KAGyB,iBAAvBA,EACFA,EAAmBU,MAAM,KAAKC,KAAI,SAAAC,GAAK,MAAK,CAAEpF,MAAOoF,EAAOA,MAAOC,OAAOD,QAG3EZ,UAAsB,CAAC,EAAG,GAAI,GAAI,KAAKW,KAAI,SAAAC,GAAK,MAAK,CAAEpF,MAAOsF,OAAOF,GAAQA,cACpF,CAACZ,IAEEe,EAAwBzI,eAC5B,SACE0I,EACAC,GAKA,IAGsC,EAHlCC,GAAe,EACfN,EAAQ,GAEgB,iBAAjBI,GACTC,EAAQD,EACRE,EAAmD,WAApC,UAAAF,EAAaG,WAAb,eAAkBC,eACjCR,EAASI,EAAaK,OAAeT,OAErCA,EAAQI,EAKV,GAFAP,EAAaG,GAEM,WAAfK,EAAMK,OAAqC,UAAfL,EAAMK,MAAqBJ,GAA3D,CAIA,IAAIK,EAAcC,KAAKC,MAAMZ,OAAOD,IAC9Bc,EAAUF,KAAKG,KAAKvB,EAAQjB,GAE7BoC,IACHA,EAAc,GAGZA,EAAcG,IAChBH,EAAcG,GAGZH,GAAeV,OAAOD,IACxBH,EAAac,EAAYhB,YAGvBgB,IAAgBxB,GAIpBI,EAAaoB,MAEf,CAACpB,EAAcJ,EAAMZ,EAASiB,IAG1BwB,EAAsBtJ,eAC1B,SAACuJ,EAAQZ,GACPf,EAAgBe,EAAMI,OAAOT,SAE/B,CAACV,IAGG4B,EAAmBxJ,eACvB,SAACuJ,EAA+B9B,GAC9BI,EAAaJ,KAEf,CAACI,IAQH,OALA7H,aAAgB,WACd,IAAMyJ,EAAUC,YAAW,kBAAMvB,EAAaV,aAAD,EAACA,EAAMQ,cAAa,KACjE,OAAO,kBAAM0B,aAAaF,MACzB,CAAChC,IAGF,yBACE,sBACE,kBAAInG,QAAS,IAAMF,UAAWF,EAAQ0F,IACpC,YAACgD,GAAA,EAAD,KACE,YAAC,KAAD,CAAQC,GAAI,GAAIC,GAAG,QACjB,YAACF,GAAA,EAAD,CAAKtC,eAAe,UAClB,YAAC,KAAD,CAAQuC,GAAG,OAAOzI,UAAWF,EAAQ2F,SACnC,YAACrF,EAAA,EAAD,CAAYC,KAAK,QAAQC,WAAW,YACjCsG,UAAqB,qBAGxB,YAAC+B,GAAA,EAAD,CACE7J,SAAU4B,EACVL,KAAK,QACLuI,OAAO,OACPC,QAAStC,EACTW,MAAOzB,EACPqD,SAAUZ,KAId,YAAC,KAAD,CAAQO,GAAG,OAAOzI,UAAWF,EAAQ8F,QACnC,YAACxF,EAAA,EAAD,CAAYC,KAAK,QAAQC,WAAW,YACjCqG,UAAiB,YAGpB,YAACoC,GAAA,EAAD,CACEH,OAAO,OACPvI,KAAK,QACLvB,SAAU4B,EACVwG,MAAOJ,EACP9G,UAAWF,EAAQiG,MACnB+C,SAAUzB,EACV2B,QAAS3B,EACT4B,OAAQ5B,OAMhB,YAAC,KAAD,CAAQoB,GAAI,GAAIC,IAAI,GAClB,mBAAK1I,UAAWF,EAAQmG,OACtB,YAACG,GAAA,EAAD,CACEnC,MAAO6D,KAAKG,KAAKvB,EAAQjB,GACzBY,KAAMA,UAAQ,EACdvH,SAAU4B,EACVwI,MAAM,UACN7I,KAAK,SACLyI,SAAUV,aAYfhC,W,wsBCnOf,IAAM+C,GAAuBzK,YAAqC,IAEnDyK,W,6qBCKf,IAAMC,GAAkBxK,QAAuC,YAAiB,IAAdyK,EAAc,EAAdA,QAC1DC,EAAOpK,YAAmBT,GAAiB,SAAAU,GAAO,OAAIA,EAAQmK,QAC9DC,EAAQrK,YAAmBT,GAAiB,SAAAU,GAAO,OAAIA,EAAQoK,SAC/DC,EAAWtK,YAAmBT,GAAiB,SAAAU,GAAO,OAAIA,EAAQqK,YAElEC,EAAkB7K,eACtB,kBAAM4K,EAASlH,QAAUkH,EAASlH,OAAOgH,EAAMC,KAC/C,CAACC,EAAUF,EAAMC,IAGbG,EAAkB9K,eACtB,kBAAM4K,EAASjH,SAAWiH,EAASjH,QAAQ+G,EAAMC,KACjD,CAACC,EAAUF,EAAMC,IAGnB,OACE,kBACEvJ,UAAWmC,kBACT,iBACAkH,GAAW,yBACXG,aAAA,EAAAA,EAAUhH,oBAAqB,gCAC/BgH,aAAA,EAAAA,EAAU/G,kBAAmB,8BAG/B,kBAAIvC,QAAS,KACX,YAAC,KAAD,CACEyJ,GAAIN,KAAYG,WAAU1K,UAC1BuJ,QAAS,IACTuB,UAAWH,EACXI,SAAUH,EACVI,eAAa,GAEb,mBAAK9J,UAAU,0BACb,YAAC,GAAqB+J,SAAtB,CAA+B7C,MAAO,CAAEnH,kBAAgC,OAAbyJ,IACxDA,aADH,EACGA,EAAUnK,gBASV+J,W,yPCtDA5J,aAAgB,SAAAC,GAAK,MAAK,CACvCuK,WAAY,CACVrK,QAAS,WACToB,UAAW,aAAatB,EAAMuB,OAAOC,KAAK,KAC1CC,SAAUzB,EAAM0B,SAAS,UAEzB,YAAa,CACXD,SAAUzB,EAAM0B,SAAS,WAI7B8I,aAAc,CACZC,aAAc,EACdnJ,UAAW,aAAatB,EAAMuB,OAAOC,KAAK,KAC1CC,SAAUzB,EAAM0B,SAAS,UAEzB,YAAa,CACXD,SAAUzB,EAAM0B,SAAS,WAI7BgJ,WAAY,CACVvH,QAAS,cACTjD,QAAS,EACTmD,WAAY,yBACZsH,aAAc,MACdzH,OAAQ,UAER,UAAW,CACT0H,WAAY5K,EAAMuB,OAAOC,KAAK,MAGhC,UAAW,CACToJ,WAAY5K,EAAMuB,OAAOC,KAAK,MAGhC,kBAAmB,CACjB,QAAS,CACPqJ,KAAM7K,EAAMuB,OAAOC,KAAK,Y,03BCzBhC,IAAIsJ,GAAwB,E,yUAY5B,IAAMC,GAAW5L,QAA2B,YAAoD,MAAjD0K,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,MAAO1K,EAAoC,EAApCA,SAAUmB,EAA0B,EAA1BA,UAAc2B,EAAY,kBACxF8I,EAAcvL,YAAmBI,GAAc,SAAAH,GAAO,OAAIA,EAAQsL,eAClEC,EAAexL,YAAmBI,GAAc,SAAAH,GAAO,OAAIA,EAAQuL,gBACnEC,EAAczL,YAAmBI,GAAc,SAAAH,GAAO,OAAIA,EAAQwL,eAClE3I,EAAY9C,YAAmBI,GAAc,SAAAH,GAAO,OAAIA,EAAQkB,QAChEuK,EAAoB1L,YAAmBI,GAAc,SAAAH,GAAO,OAAIA,EAAQyL,qBACxEC,EAAkB3L,YAAmBI,GAAc,SAAAH,GAAO,OAAIA,EAAQ0L,mBACtE9K,EAAoBb,YAAmBI,GAAc,SAAAH,GAAO,OAAIA,EAAQY,qBAExED,EAAUe,KAEhB,EAA2CiK,cAAW,GAA/CC,EAAP,KAAqBC,EAArB,KAEA,EAAgCpM,WAA+B,MAAxD4K,EAAP,KAAiByB,EAAjB,KACA,EAA8BrM,WAA+B,IAAtDsM,EAAP,KAAgBC,EAAhB,KAEMC,EAA+B,IAAnBF,EAAQ9G,OAAe8G,EAAQ,GAAK,KAChDjG,EAAaiG,EAAQ9G,OAAS,EAC9BiB,EAA2B,OAAbmE,EAEd6B,EAAgBzM,eACpB,SAAC0M,GACKF,EACFA,EAAUrM,QAAQuK,EAAMC,GAI1BmB,EAAa,CAAEa,SAAUD,EAAEE,cAAeC,QAASnC,EAAMoC,SAAUnC,EAAO2B,cAE5E,CAACE,EAAWV,EAAcpB,EAAMC,EAAO2B,IAGnCxI,EAAmB9D,eAAkB,SAACS,GAE1C,OADA4L,EAAY5L,GACL,kBAAM4L,EAAY,SACxB,IAEGhM,EAAiBL,eAAkB,SAAC+M,GACxC,IAAMlE,EAAM,0BAAyB8C,GAErC,OADAY,GAAW,SAAAD,GAAO,6BAAQA,GAAR,KAAmBzD,OAAQkE,QACtC,kBAAMR,GAAW,SAAAD,GAAO,OAAIA,EAAQU,QAAO,SAAAC,GAAC,OAAIA,EAAEpE,MAAQA,WAChE,IAEH7I,aAAgB,WACd,IAAMQ,EAAauL,EAAY,CAAE1F,aAAYI,gBAC7C,OAAO,kBAAMjG,OACZ,CAAC6F,EAAYI,EAAasF,IAE7B,IAAMmB,EAAelN,WACnB,iBAAO,CAAEK,iBAAgByD,mBAAkB4G,OAAMC,QAAOC,cACxD,CAACA,EAAUF,EAAMC,EAAOtK,EAAgByD,IAGpCqJ,EAAsBnN,WAC1B,kBAAMuD,kBAAKrC,EAAQkK,WAA0B,UAAdhI,GAAyB,UAAW,oBAAqBhC,KACxF,CAACA,EAAWF,EAAQkK,WAAYhI,IAG5BgK,EAAwBpN,WAC5B,kBAAMuD,kBAAKrC,EAAQmK,aAA4B,UAAdjI,GAAyB,UAAW,sBAAuBhC,KAC5F,CAACA,EAAWF,EAAQmK,aAAcjI,IAGpC,OACE,YAAC,EAAgB+H,SAAjB,CAA0B7C,MAAO4E,GAC/B,gCACMnK,EADN,CAEE3B,UAAWmC,kBACT8C,GAAc,wBACblF,GAAqBsF,GAAe,0BACpCtF,GAAqB0K,IAAgBlB,EAAQ,GAAK,EAAI,iBAAmB,iBAC1EvJ,KAGDnB,EAEAoG,GACC,kBAAIhF,MAAM,QAAQD,UAAW+L,GAC1B9G,GACC,mBAAKlG,QAASsM,EAAerL,UAAWF,EAAQqK,YAAhD,UACGiB,aADH,EACGA,EAAWpM,YADd,QACsB,YAAC,KAAD,CAAoBqB,KAAM,QAMpD4E,GAAc4F,GAAmB,kBAAI7K,UAAW+L,KAEhDhM,GAAqBsF,GACrB,kBAAIpF,MAAM,QAAQD,UAAWgM,GAC3B,mBACEjN,QAASiM,EACThL,UAAWmC,kBACTrC,EAAQqK,WACR,wBACAY,GAAgB,iCAGlB,YAAC,KAAD,CAAiB1K,KAAM,QAK3BgF,GAAeuF,GAAqB,kBAAI5K,UAAWgM,MAGrDjM,GAAqBsF,GAAe,YAAC,GAAD,CAAiBgE,QAAS0B,QAKvDP,W,k3BClIf,IAAM3J,GAAYrB,aAAgB,iBAAO,CACvCyM,OAAQ,CACNrJ,QAAS,OACTC,WAAY,SAEZ,cAAe,CACb8C,YAAa,EACbzE,SAAU,SAaVgL,GAActN,QAAmB,YAA0E,IAAvEuN,EAAuE,EAAvEA,KAAM5J,EAAiE,EAAjEA,QAAkB6J,EAA+C,EAAxDvD,QAAsB0C,EAAkC,EAAlCA,SAAUE,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAC1F5L,EAAUe,KAEVgI,EAAUjK,WAAc,WAC5B,OAAQwN,GAAe,IAAInF,KAAI,SAAAgF,GAAM,gBAChCA,GADgC,IAEnClN,QAAS,WACPkN,EAAOlN,QAAQ0M,EAASC,GACxBnJ,YAGH,CAACA,EAAS6J,EAAaX,EAASC,IAE7BW,EAAczN,WAClB,iBAAO,CACL0N,aAAc,CAAEC,SAAU,SAAUC,WAAY,SAChDC,gBAAiB,CAAEF,SAAU,MAAOC,WAAY,YAElD,IAGF,OACE,YAACE,GAAA,EAAD,CACEnB,SAAUA,EACVY,KAAMA,EACN5J,QAASA,EACToK,mBAAoB,KACpBC,sBAAoB,EACpBC,kBAAgB,EAChBC,aAAW,EACXR,aAAcD,EAAYC,aAC1BG,gBAAiBJ,EAAYI,gBAC7BM,UAAW,EACXC,WAAY,CACVC,MAAO,CACLC,UAAW,OAIdrE,aAjBH,EAiBGA,EAAS5B,KAAI,SAAAgF,GACZ,OACE,YAACkB,GAAA,EAAD,CAAU1F,IAAKwE,EAAOxE,IAAK1I,QAASkN,EAAOlN,QAASD,SAAUmN,EAAOnN,UACnE,mBAAKkB,UAAWF,EAAQmM,QACrBA,EAAOjN,KACPiN,EAAO5M,iBASP6M,W,8OCzER,SAASkB,GAAqBC,EAAyBC,GAC5D,IAAIjF,EAEEkF,EAAiB,WACrBhF,aAAaF,GAEbA,EAAUC,YAAW,WACnB,IAAMkF,EAgBZ,SAA8BH,GAAkC,MACxDnI,EAAOuI,MAAMC,KAAKL,EAAMnI,MAExBf,EAAUsJ,MAAMC,KAAN,UAAWxI,EAAKyI,eAAhB,aAAW,EAAcC,OAAOC,QAAO,SAACC,EAAKC,GAC3D,MAAqC,OAAjCA,EAAOC,QAAQtG,eAInBoG,EAAIG,KAAKF,EAAOG,aAHPJ,IAKR,IAEH,OAAO5I,EAAK2I,QAAO,SAACC,EAAKK,GAQvB,OAPAV,MAAMC,KAAKS,EAAIP,OAAOQ,SAAQ,SAACC,EAAM9E,GACnC,IAAM9B,EAAM4G,EAAKC,aAAa,YAEzB7G,IACLqG,EAAIrG,GAAOtD,EAAQoF,OAGduE,IACN,IArCsBS,CAAqBlB,KAEtBmB,OAAOC,KAAKjB,GAAcpJ,QAG9CkJ,EAASE,KACR,MAGLD,IACA,IAAMmB,EAAW,IAAIC,iBAAiBpB,GAGtC,OAFAmB,EAASE,QAAQvB,EAAO,CAAEwB,WAAW,EAAMC,SAAS,IAE7C,kBAAMJ,EAASK,c,knCCtBxB,IAAMlO,GAAYrB,aAAgB,SAAAC,GAAK,MAAK,CAC1CuP,eAAgB,CACdC,SAAU,YAGZ5B,MAAO,CACL9H,MAAO,OACP2J,cAAe,EAEf,wBAAyB,CACvBtM,QAAS,OACT1B,SAAUzB,EAAM0B,SAAS,WACzBb,WAAYb,EAAMa,WAAW,aAG/B,2BAA4B,CAC1BwC,WAAY,cAGd,kCAAmC,CACjCC,UAAW,mBAGb,sBAAuB,CACrBoM,UAAW,cAGb,qCAAsC,CACpCC,gBAAiB3P,EAAMuB,OAAOC,KAAK,MAGrC,uDAAwD,CACtDmO,gBAAiB,eAGnB,iCAAkC,CAChCzP,QAAS,GAGX,qCAAsC,CACpCA,QAAS,GAGX,iEAAkE,CAChE0P,OAAQ,QAGV,gGAAiG,CAC/F1P,QAASF,EAAMG,QAAQ,IAGzB,mGAAoG,CAClGwP,gBAAiB3P,EAAMuB,OAAOC,KAAK,MAGrC,wCAAyC,CACvCiJ,aAAczK,EAAMG,QAAQ,IAG9B,wDAAyD,CACvD0P,WAAY7P,EAAMG,QAAQ,IAG5B,wCAAyC,CACvC2P,UAAW,QAGb,0CAA2C,CACzCA,UAAW,UAGb,yCAA0C,CACxCA,UAAW,SAGb,sCAAuC,CACrCA,UAAW,QAGb,wCAAyC,CACvCA,UAAW,UAGb,uCAAwC,CACtCA,UAAW,UAIfC,gBAAiB,IACf5M,QAAS,mBAET,wBAAyB,CACvBA,QAAS,oBAGX,YAAa,CACXA,QAAS,QAGX,8DAA+D,CAC7DA,QAAS,SAGX,iBAAkB,CAChBA,QAAS,OACT2C,MAAO,eAAe9F,EAAMG,QAAQ,GAA/B,IACL6P,SAAU,OACVR,SAAU,WACVS,UAAW,iCACXtF,aAAc,EACdxB,OAAQnJ,EAAMG,QAAQ,GACtB2E,UAAW,EACX8K,OAAQ,aAAa5P,EAAMuB,OAAOC,KAAK,KACvCtB,QAASF,EAAMG,QAAQ,GACvB+P,cAAelQ,EAAMG,QAAQ,GAC7BuP,UAAW,cAGb,gCAAiC,CAC/BxP,QAAS,EACT4E,WAAqC,GAAzB9E,EAAMG,QAAQ,GAAK,GAC/BgQ,oBAAqB,EACrBC,qBAAsB,EACtBH,UAAW,OACXN,gBAAiB,SAGnB,uCAAwC,CACtCM,UAAW,kCAGb,qCAAsC,CACpCI,aAAc,GAGhB,gCAAiC,CAC/BV,gBAAiB3P,EAAMuB,OAAOC,KAAK,MAGrC,oDAAqD,CACnDmO,gBAAiB3P,EAAMuB,OAAOC,KAAK,KACnCoO,OAAQ,GAGV,qCAAsC,CACpCD,gBAAiB,eAGnB,uDAAwD,CACtDA,gBAAiB,eAGnB,6EAA8E,CAC5ElF,aAAc,GACd,WAAY,CACV7K,QAAS,MACTuD,QAAS,QACTqM,SAAU,WACVc,WAAY,aAAatQ,EAAMuB,OAAOC,KAAK,KAC3C+O,MAAO,GACPC,IAAK,EACLC,OAAQ,IAIZ,0CAA2C,CACzCjB,SAAU,WACVe,MAAOvQ,EAAMG,QAAQ,GACrBqQ,IAAK,OACLC,OAAQzQ,EAAMG,QAAQ,GACtBuQ,cAAe,SACfjK,eAAgB,gBAChBrD,WAAY,SACZD,QAAS,OACTsH,aAAc,EACd4F,aAAc,GAGhB,wCAAyC,CACvCb,SAAU,WACVe,MAAOvQ,EAAMG,QAAQ,GACrBqQ,IAAKxQ,EAAMG,QAAQ,GACnBsQ,OAAQ,OACRC,cAAe,SACfjK,eAAgB,gBAChBrD,WAAY,SACZD,QAAS,OACTsH,aAAc,EACd4F,aAAc,GAGhB,wDAAyD,CACvDR,WAAY,GAGd,4EAA6E,CAC3Ec,UAAW,cAGb,sBAAuB,CACrBjB,UAAW,aACXkB,UAAW,aACX1Q,QAAS,EACTmQ,aAAcrQ,EAAMG,QAAQ,GAC5B0Q,KAAM,EACNjB,OAAQ,OACRkB,SAAU,EACVC,UAAW,OACXxK,SAAU,OACVzF,WAAYd,EAAMc,WAAW,YAG/B,8BAA+B,CAC7BZ,QAAS,EACTuK,aAAc,EACd,WAAY,CACVtH,QAAS,SAIb,qCAAsC,CACpCsH,aAAc,EACd,WAAY,CACVtH,QAAS,SAIb,mCAAoC,CAClCkN,aAAc,GAGhB,6CAA8C,CAC5CP,UAAW,QAGb,+CAAgD,CAC9CA,UAAW,UAGb,8CAA+C,CAC7CA,UAAW,SAGb,qCAAsC,CACpCgB,SAAU,EACVC,UAAW,EACXxK,SAAU,QAGZ,kCAAmC,CACjCpD,QAAS,SAGR,IAAI6K,MAAM,IAAInD,KAAK,KAAKuD,QAAO,SAACC,EAAK3F,EAAGoB,GAAU,MAC7ClJ,EAAOkJ,EAAQ,EACfkH,EAAcpQ,EAAO,GAAM,IAApB,IAEb,gBACKyN,GADL,4CAEoCzN,GAAS,CACzCkQ,SAAU,EACVvK,SAAUyK,EACVD,UAAWC,GALf,MAQC,SAIQ5P,M,gzBCjQf,IAAI6P,GAAwB,EAC1BC,GAAmB,E,6SAuBrB,IAAMC,GAA+B,SAAAjP,GAAS,MAC5C,EAYIA,EAXFtB,YADF,MACS,SADT,EAEEwQ,EAUElP,EAVFkP,GACAhS,EASE8C,EATF9C,SACA6B,EAQEiB,EARFjB,QACAiD,EAOEhC,EAPFgC,KACAD,EAME/B,EANF+B,OACAwJ,EAKEvL,EALFuL,UACAzC,EAIE9I,EAJF8I,YACAnF,EAGE3D,EAHF2D,kBACAtF,EAEE2B,EAFF3B,UACAW,EACEgB,EADFhB,YAGIb,EAAUe,KAEVd,EAAoBb,YAAmBiK,IAAsB,SAAAhK,GAAO,OAAIA,EAAQY,qBAEhF+Q,EAAWlS,WACXmS,EAAmBC,aAAc,gBAAD,UAAgBrP,EAAMsP,mBAAtB,QAAqC,KAArC,OAChCC,EAA0C,kBAAtBvP,EAAMsP,YAA4BtP,EAAMsP,YAAcF,EAEhF,EAAiEjG,cAAW,GAArEqG,EAAP,KAA4BC,EAA5B,KAA6CC,EAA7C,KACA,EAAkDzS,aAA3C0S,EAAP,KAA0BC,EAA1B,KAEA,EAAsC3S,WAA6C,IAA5EmD,EAAP,KAAoByP,EAApB,KACA,EAA8B5S,YAAyB,iBAAM,MAAtDuF,EAAP,KAAgBsN,EAAhB,KACA,EAAwB7S,WAA4B,IAA7CsG,EAAP,KAAawM,EAAb,KAEMhH,EAAe9L,eACnB,SAAC0K,GACCiI,EAAqBjI,GACrB8H,MAEF,CAACA,IAGG3N,EAAiB7E,eAAkB,WACvC,IAAM6I,EAAM,aAAYiJ,GAExB,OADAe,GAAW,SAAAtN,GAAO,6BAAQA,GAAR,CAAiBsD,OAC5B,kBAAMgK,GAAW,SAAAtN,GAAO,OAAIA,EAAQyH,QAAO,SAAA+F,GAAC,OAAIA,GAAKlK,WAC3D,IAEGkD,EAAc/L,eAAkB,SAACuP,GACrC,IAAM1G,EAAM,gBAAekJ,GAE3B,OADAe,GAAQ,SAAAxM,GAAI,6BAAQA,GAAR,KAAgBuC,OAAQ0G,QAC7B,kBAAMuD,GAAQ,SAAAxM,GAAI,OAAIA,EAAK0G,QAAO,SAAAxG,GAAC,OAAIA,EAAEqC,MAAQA,WACvD,IAEGmD,EAAoBhM,WACxB,kBAAOmB,IAAqBmF,aAAtB,EAAsBA,EAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,kBAC9C,CAACtF,EAAmBmF,IAGhB2F,EAAkBjM,WAAc,kBAAMsG,aAAN,EAAMA,EAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEH,gBAAa,CAACC,IAE5EtG,aAAgB,WACd,IAAMgT,EAASxE,GAAqB0D,aAAD,EAACA,EAAU7O,SAAS,SAAA4P,GAAM,OAAIL,EAAeK,MAChF,OAAO,kBAAMD,OACZ,IAEH,IAAM9F,EAAelN,WACnB,iBAAO,CACL8B,QAASA,WACTC,YAAaA,UAAe,gBAC5BgD,OACAD,SACAgH,eACAjH,iBACA1B,cACAoC,UACAe,OACAyF,cACAF,cACAnF,oBACAjF,KAAMN,EAAoB,QAAUM,EACpCuK,oBACAC,kBACA9K,uBAEF,CACEW,EACAC,EACAgD,EACAD,EACAgH,EACAjH,EACA1B,EACAoC,EACAe,EACAyF,EACAF,EACAnF,EACAvF,EACAM,EACAuK,EACAC,IAIJ,OACE,YAAC,EAAad,SAAd,CAAuB7C,MAAO4E,GAC5B,YAACgG,GAAA,EAAD,CAAgB9R,UAAWF,EAAQkP,eAAgB/B,MAAO,CAAEC,cAC1D,qBAAO2D,GAAIA,EAAIzO,IAAK0O,EAAU9Q,UAAWmC,kBAAKrC,EAAQuN,MAAO6D,GAAcpR,EAAQ0P,gBAAiBxP,IACjGnB,EAED,YAAC,GAAD,CACEsN,KAAMgF,EACN5F,SAAU+F,aAAF,EAAEA,EAAmB/F,SAC7B1C,QAASyI,aAAF,EAAEA,EAAmBpG,QAC5BO,QAAS6F,aAAF,EAAEA,EAAmB7F,QAC5BC,SAAU4F,aAAF,EAAEA,EAAmB5F,SAC7BnJ,QAAS8O,Q,GAQNU,aAAiBnT,OAAWgS,K,gQCrJ5BoB,YAAgBpB,GAAO,CACpCqB,OACAC,OACAC,SACAC,WACAC,QACAC,UACA9J,OACAzE,SACAqC,cACAmM,W,6PCRMjJ,G,kBADKkJ,IACLlJ,GAAO,IAAImE,MAAM,KAAKnD,KAAK,KAAKrD,KAAI,SAACkB,EAAGoB,GAAJ,MAAe,CACvDsH,GAAItH,EAAQ,EACZkJ,KAASC,IAAMD,KAAKE,YAAhB,IAA+BD,IAAMD,KAAKG,WAC9CC,MAAOH,IAAMI,SAASD,QAAQnL,cAC9BqL,MAAOL,IAAMM,SAASD,YAEjB,CACLE,KAAM,SAAAC,GACJ,OAAOC,YAAG7J,IAAM8J,KAAKnM,aAAI,SAAAqC,GACvB,IAAI+J,EAAS/J,EAET4J,EAAOvP,OACT0P,EAASA,EAAO1P,MAAK,SAAC2P,EAAGC,GACvB,OAAID,EAAEJ,EAAOvP,KAAKE,OAAS0P,EAAEL,EAAOvP,KAAKE,OAAyC,QAA1BqP,EAAOvP,KAAKR,UAAsB,GAAK,EAC3FmQ,EAAEJ,EAAOvP,KAAKE,QAAU0P,EAAEL,EAAOvP,KAAKE,OAAe,EACxB,QAA1BqP,EAAOvP,KAAKR,WAAuB,EAAI,MAIlD,IAAMqQ,GAASN,EAAO7M,KAAO,GAAK6M,EAAOzN,QACzC,OAAO4N,EAAOI,MAAMD,EAAOA,EAAQN,EAAOzN,YACxCiO,YAAM,KAAMzM,aAAI,SAAAoM,GAAM,MAAK,CAC7B3M,MAAO4C,GAAKlF,OACZiP,eAGJM,cAAe,kBAAMR,aAAG,GAAMC,KAAKnM,aAAI,kBAAM,IAAIlD,MAAM,oB,+NAGpD,IAAM6P,GAAe,Q,+NAC5B,IAAMC,GAAc,CAClBrB,gBACAoB,iBAEIE,GAAYC,IACH,SAASC,GAAT,GAGZ,gBAFDC,EAEC,EAFDA,WACGtS,EACF,kBACD,OAAO,YAACmS,GAAD,eAAeD,GAAiBlS,EAAhC,CAAuCsS,WAAYA,EAAYC,QAAQ,cAQ5E,kBACE,GAAM,UADR,UAGA,2JAEA,kBACE,GAAM,cADR,cAGA,uBAAK,oBAAMC,WAAW,MAClB,UAAa,eADZ,mDAIL,kBACE,GAAM,kBADR,kBAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,o2DAA+2DC,SAAO,GACv5D3S,QACAoS,kBACAQ,oBACAC,0BACAC,eACA/B,UACAS,OACAO,UACAzM,QACAyN,2BACA9D,UAXu5D,gBAYv5DmD,IAZu5D,EAav5DvB,gBAbu5D,EAcv5DoB,gBAdu5D,GAet5DM,QAAQ,eACZ,WACK,MAAwBK,mBAAS,MAA1B5Q,EAAP,KAAagR,EAAb,KACA,EAAwBJ,mBAAS,GAA1BlO,EAAP,KAAauO,EAAb,KACA,EAA8BL,mBAAS,IAAhC9O,EAAP,KAAgBoP,EAAhB,KACA,EAAwBN,oBAAS,WAC/B,OAAO,IAAI9G,MAAM,GAAGnD,KAAK,KAAKrD,KAAI,SAACkB,EAAGoB,GAAJ,MAAe,CAC/CsH,GAAItH,EAAQ,EACZkJ,KAASC,IAAMD,KAAKE,YAAhB,IAA+BD,IAAMD,KAAKG,WAC9CC,MAAOH,IAAMI,SAASD,QAAQnL,cAC9BqL,MAAOL,IAAMM,SAASD,eALnB7N,EAAP,KAAawM,EAAb,KAQMhO,EAAS8Q,uBAAY,SAAAlL,GACzBqL,EAAQrL,GACRoI,GAAQ,SAAAxM,GACN,OAAOA,EAAKvB,MAAK,SAAC2P,EAAGC,GACnB,OAAID,EAAEhK,EAAKzF,OAAS0P,EAAEjK,EAAKzF,OAAkC,QAAnByF,EAAKnG,UAAsB,GAAK,EACtEmQ,EAAEhK,EAAKzF,QAAU0P,EAAEjK,EAAKzF,OAAe,EACjB,QAAnByF,EAAKnG,WAAuB,EAAI,UAG1C,IACH,OAAO,YAAC,GAAD,CAAOsH,aAAW,EAAC9G,KAAMA,EAAMD,OAAQA,EAAQwQ,QAAQ,SAC9D,YAAC,GAAM5B,OAAP,KACE,YAAC,GAAMH,OAAP,CAAc5M,MAAO,GAAIhC,cAAc,MAAvC,KAGA,YAAC,GAAM4O,OAAP,CAAc5O,cAAc,QAA5B,QACA,YAAC,GAAM4O,OAAP,CAAc5O,cAAc,SAA5B,SACA,YAAC,GAAM4O,OAAP,CAAclS,MAAM,SAApB,UAEF,YAAC,GAAMgS,KAAP,KACE,YAAC,GAAMI,MAAP,CAAapO,MAAOiB,EAAKd,SACxBc,EAAK+B,KAAI,SAACkH,EAAK5E,GAAN,OAAgB,YAAC,GAAMf,IAAP,CAAWc,KAAM6E,EAAK5E,MAAOA,EAAO9B,IAAK0G,EAAI0C,IACnE,YAAC,GAAMqB,KAAP,CAAY3Q,WAAY,GAAI4M,EAAI0C,GAAhC,KACA,YAAC,GAAMqB,KAAP,CAAY3Q,WAAY,IAAK4M,EAAIsE,MACjC,YAAC,GAAMP,KAAP,CAAY3Q,WAAY,GAAI4M,EAAI0E,OAChC,YAAC,GAAMX,KAAP,CAAY3Q,WAAY,EAAGtB,MAAM,SAC9BkO,EAAI4E,YAIb,YAAC,GAAM3M,WAAP,CAAkBC,KAAMA,EAAMZ,QAASA,EAASiB,MAAO,IAAKD,aAAcmO,EAASpO,gBAAiBqO,QAIxG,kBACE,GAAM,sBADR,sBAGA,YAAC,IAAD,CAAYT,WAAY,EAAGC,OAAQ,oqEAA+qEC,SAAO,GACvtE3S,QACAoS,kBACAQ,oBACAC,0BACAC,eACA/B,UACAS,OACAO,UACAzM,QACAyN,2BACA9D,UAXutE,gBAYvtEmD,IAZutE,EAavtEvB,gBAbutE,EAcvtEoB,gBAdutE,GAettEM,QAAQ,eACZ,WACK,MAAwBK,mBAAS,MAA1B5Q,EAAP,KAAagR,EAAb,KACA,EAAwBJ,mBAAS,GAA1BlO,EAAP,KAAauO,EAAb,KACA,EAA8BL,mBAAS,IAAhC9O,EAAP,KAAgBoP,EAAhB,KACA,EAAwBN,oBAAS,WAC/B,OAAO,IAAI9G,MAAM,GAAGnD,KAAK,KAAKrD,KAAI,SAACkB,EAAGoB,GAAJ,MAAe,CAC/CsH,GAAItH,EAAQ,EACZkJ,KAASC,IAAMD,KAAKE,YAAhB,IAA+BD,IAAMD,KAAKG,WAC9CC,MAAOH,IAAMI,SAASD,QAAQnL,cAC9BqL,MAAOL,IAAMM,SAASD,eALnB7N,EAAP,KAAawM,EAAb,KAQMhO,EAAS8Q,uBAAY,SAAAlL,GACzBqL,EAAQrL,GACRoI,GAAQ,SAAAxM,GACN,OAAOA,EAAKvB,MAAK,SAAC2P,EAAGC,GACnB,OAAID,EAAEhK,EAAKzF,OAAS0P,EAAEjK,EAAKzF,OAAkC,QAAnByF,EAAKnG,UAAsB,GAAK,EACtEmQ,EAAEhK,EAAKzF,QAAU0P,EAAEjK,EAAKzF,OAAe,EACjB,QAAnByF,EAAKnG,WAAuB,EAAI,UAG1C,IACG2R,EAASN,uBAAY,SAAClL,EAAMC,GAChCwL,MAAM,oCAAoCC,KAAKC,UAAU,CACvD3L,OACAC,SACC,KAAM,MACR,IACH,OAAO,YAAC,GAAD,CAAOkB,aAAW,EAAC9G,KAAMA,EAAMD,OAAQA,EAAQwQ,QAAQ,SAC9D,YAAC,GAAM5B,OAAP,KACE,YAAC,GAAMH,OAAP,CAAc5M,MAAO,GAAIhC,cAAc,MAAvC,KAGA,YAAC,GAAM4O,OAAP,CAAc5O,cAAc,QAA5B,QACA,YAAC,GAAM4O,OAAP,CAAc5O,cAAc,SAA5B,SACA,YAAC,GAAM4O,OAAP,CAAclS,MAAM,SAApB,UAEF,YAAC,GAAMgS,KAAP,KACE,YAAC,GAAMI,MAAP,CAAapO,MAAOiB,EAAKd,SACxBc,EAAK+B,KAAI,SAACkH,EAAK5E,GAAN,OAAgB,YAAC,GAAMf,IAAP,CAAWc,KAAM6E,EAAK5E,MAAOA,EAAO9B,IAAK0G,EAAI0C,IACnE,YAAC,GAAMqB,KAAP,CAAY3Q,WAAY,GAAI4M,EAAI0C,GAAhC,KACA,YAAC,GAAMqB,KAAP,CAAY3Q,WAAY,IAAK4M,EAAIsE,MACjC,YAAC,GAAMP,KAAP,CAAY3Q,WAAY,GAAI4M,EAAI0E,OAChC,YAAC,GAAMX,KAAP,CAAY3Q,WAAY,EAAGtB,MAAM,SAC9BkO,EAAI4E,OAEP,YAAC,GAAMR,OAAP,CAAcxT,QAAS+V,GAAvB,UACA,YAAC,GAAM1C,SAAP,kBAGN,YAAC,GAAMhM,WAAP,CAAkBC,KAAMA,EAAMZ,QAASA,EAASiB,MAAO,IAAKD,aAAcmO,EAASpO,gBAAiBqO,QAIxG,kBACE,GAAM,cADR,cAGA,YAAC,IAAD,CAAYT,WAAY,EAAGC,OAAQ,urEAAksEC,SAAO,GAC1uE3S,QACAoS,kBACAQ,oBACAC,0BACAC,eACA/B,UACAS,OACAO,UACAzM,QACAyN,2BACA9D,UAX0uE,gBAY1uEmD,IAZ0uE,EAa1uEvB,gBAb0uE,EAc1uEoB,gBAd0uE,GAezuEM,QAAQ,eACZ,WACK,MAAwBK,mBAAS,MAA1B5Q,EAAP,KAAagR,EAAb,KACA,EAAwBJ,mBAAS,GAA1BlO,EAAP,KAAauO,EAAb,KACA,EAA8BL,mBAAS,IAAhC9O,EAAP,KAAgBoP,EAAhB,KACA,EAAwBN,oBAAS,WAC/B,OAAO,IAAI9G,MAAM,GAAGnD,KAAK,KAAKrD,KAAI,SAACkB,EAAGoB,GAAJ,MAAe,CAC/CsH,GAAItH,EAAQ,EACZkJ,KAASC,IAAMD,KAAKE,YAAhB,IAA+BD,IAAMD,KAAKG,WAC9CC,MAAOH,IAAMI,SAASD,QAAQnL,cAC9BqL,MAAOL,IAAMM,SAASD,eALnB7N,EAAP,KAAawM,EAAb,KAQMhO,EAAS8Q,uBAAY,SAAAlL,GACzBqL,EAAQrL,GACRoI,GAAQ,SAAAxM,GACN,OAAOA,EAAKvB,MAAK,SAAC2P,EAAGC,GACnB,OAAID,EAAEhK,EAAKzF,OAAS0P,EAAEjK,EAAKzF,OAAkC,QAAnByF,EAAKnG,UAAsB,GAAK,EACtEmQ,EAAEhK,EAAKzF,QAAU0P,EAAEjK,EAAKzF,OAAe,EACjB,QAAnByF,EAAKnG,WAAuB,EAAI,UAG1C,IACG2R,EAASN,uBAAY,SAAClL,EAAMC,GAChCwL,MAAM,oCAAoCC,KAAKC,UAAU,CACvD3L,OACAC,SACC,KAAM,MACR,IACH,OAAO,YAAC,GAAD,CAAOkB,aAAW,EAACwG,aAAa,EAAMtN,KAAMA,EAAMD,OAAQA,EAAQwQ,QAAQ,SACjF,YAAC,GAAM5B,OAAP,KACE,YAAC,GAAMH,OAAP,CAAc5M,MAAO,GAAIhC,cAAc,MAAvC,KAGA,YAAC,GAAM4O,OAAP,CAAc5O,cAAc,QAA5B,QACA,YAAC,GAAM4O,OAAP,CAAc5O,cAAc,SAA5B,SACA,YAAC,GAAM4O,OAAP,CAAclS,MAAM,SAApB,UAEF,YAAC,GAAMgS,KAAP,KACE,YAAC,GAAMI,MAAP,CAAapO,MAAOiB,EAAKd,SACxBc,EAAK+B,KAAI,SAACkH,EAAK5E,GAAN,OAAgB,YAAC,GAAMf,IAAP,CAAWc,KAAM6E,EAAK5E,MAAOA,EAAO9B,IAAK0G,EAAI0C,IACnE,YAAC,GAAMqB,KAAP,CAAY3Q,WAAY,GAAI4M,EAAI0C,GAAhC,KACA,YAAC,GAAMqB,KAAP,CAAY3Q,WAAY,IAAK4M,EAAIsE,MACjC,YAAC,GAAMP,KAAP,CAAY3Q,WAAY,GAAI4M,EAAI0E,OAChC,YAAC,GAAMX,KAAP,CAAY3Q,WAAY,EAAGtB,MAAM,SAC9BkO,EAAI4E,OAEP,YAAC,GAAMR,OAAP,CAAcxT,QAAS+V,GAAvB,UACA,YAAC,GAAM1C,SAAP,kBAGN,YAAC,GAAMhM,WAAP,CAAkBC,KAAMA,EAAMZ,QAASA,EAASiB,MAAO,IAAKD,aAAcmO,EAASpO,gBAAiBqO,QAIxG,kBACE,GAAM,aADR,aAGA,sEACA,YAAC,IAAD,CAAYT,WAAY,EAAGC,OAAQ,6WAAgXC,SAAO,GACxZ3S,QACAoS,kBACAQ,oBACAC,0BACAC,eACA/B,UACAS,OACAO,UACAzM,QACAyN,2BACA9D,UAXwZ,gBAYxZmD,IAZwZ,EAaxZvB,gBAbwZ,EAcxZoB,gBAdwZ,GAevZM,QAAQ,cACb,YAAC,GAAD,CAAOA,QAAQ,SACb,YAAC,GAAM5B,OAAP,KACE,YAAC,GAAMH,OAAP,WACA,YAAC,GAAMA,OAAP,gBACA,YAAC,GAAMA,OAAP,iBACA,YAAC,GAAMA,OAAP,CAAclS,MAAM,SAApB,UAEF,YAAC,GAAMgS,KAAP,KACE,YAAC,GAAMI,MAAP,CAAapO,MAAO,IACpB,YAAC,GAAMoO,MAAP,CAAapO,MAAO,GAApB,gCAIF,kBACE,GAAM,wBADR,wBAGA,qEAAoD,sBAAQkQ,WAAW,KAAnB,0BAApD,OAAsH,sBAAQA,WAAW,KAAnB,wBAAtH,KACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,u+CAAk/CC,SAAO,GAC1hD3S,QACAoS,kBACAQ,oBACAC,0BACAC,eACA/B,UACAS,OACAO,UACAzM,QACAyN,2BACA9D,UAX0hD,gBAY1hDmD,IAZ0hD,EAa1hDvB,gBAb0hD,EAc1hDoB,gBAd0hD,GAezhDM,QAAQ,eACZ,WACK,MAQIQ,YAAuB,CACzBQ,cAAe,CACbzP,QAAS,GAEX0P,eAAgB,SAAAjC,GAAM,OAAIV,GAAaS,KAAKC,KAC3C,IAZDA,EADF,EACEA,OACA9K,EAFF,EAEEA,iBACAF,EAHF,EAGEA,oBACApE,EAJF,EAIEA,WACAuP,EALF,EAKEA,OACA3M,EANF,EAMEA,MACA0O,EAPF,EAOEA,UAOF,OAAO,YAAC,GAAD,CAAO3K,aAAW,EAAC9G,KAAMuP,EAAOvP,KAAMD,OAAQI,EAAYpD,QAAS0U,EAAWlB,QAAQ,SAC7F,YAAC,GAAM5B,OAAP,KACE,YAAC,GAAMH,OAAP,CAAc5M,MAAO,GAAIhC,cAAc,MAAvC,KAGA,YAAC,GAAM4O,OAAP,CAAc5O,cAAc,QAA5B,QACA,YAAC,GAAM4O,OAAP,CAAc5O,cAAc,SAA5B,SACA,YAAC,GAAM4O,OAAP,CAAclS,MAAM,SAApB,UAEF,YAAC,GAAMgS,KAAP,KACE,YAAC,GAAMI,MAAP,CAAapO,MAAOoP,EAAOjP,SAC1BiP,EAAOpM,KAAI,SAACkH,EAAK5E,GAAN,OAAgB,YAAC,GAAMf,IAAP,CAAWc,KAAM6E,EAAK5E,MAAOA,EAAO9B,IAAK0G,EAAI0C,IACrE,YAAC,GAAMqB,KAAP,CAAY3Q,WAAY,GAAI4M,EAAI0C,GAAhC,KACA,YAAC,GAAMqB,KAAP,CAAY3Q,WAAY,IAAK4M,EAAIsE,MACjC,YAAC,GAAMP,KAAP,CAAY3Q,WAAY,GAAI4M,EAAI0E,OAChC,YAAC,GAAMX,KAAP,CAAY3Q,WAAY,EAAGtB,MAAM,SAC9BkO,EAAI4E,YAIb,YAAC,GAAM3M,WAAP,CAAkBC,KAAM6M,EAAO7M,KAAMZ,QAASyN,EAAOzN,QAASiB,MAAOA,EAAOD,aAAc2B,EAAkB5B,gBAAiB0B,QAIjI,kBACE,GAAM,mBADR,mBAGA,8FAA6E,sBAAQiM,WAAW,KAAnB,gBAC7E,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,wxCAAmyCC,SAAO,GAC30C3S,QACAoS,kBACAQ,oBACAC,0BACAC,eACA/B,UACAS,OACAO,UACAzM,QACAyN,2BACA9D,UAX20C,gBAY30CmD,IAZ20C,EAa30CvB,gBAb20C,EAc30CoB,gBAd20C,GAe10CM,QAAQ,eACZ,WACK,MAKIQ,YAAuB,CACzBS,eAAgB,kBAAM3C,GAAamB,kBAClC,IANDlP,EADF,EACEA,MACA2Q,EAFF,EAEEA,UACA/B,EAHF,EAGEA,OACAgC,EAJF,EAIEA,MAIIC,EAAgB1W,eAAkB,SAAA2W,GAAG,MAAI,+BAC/C,OAAO,YAAC,GAAD,CAAO9K,aAAW,EAAC/J,QAAS0U,EAAWlB,QAAQ,SACtD,YAAC,GAAM5B,OAAP,KACE,YAAC,GAAMH,OAAP,CAAc5M,MAAO,GAAIhC,cAAc,MAAvC,KAGA,YAAC,GAAM4O,OAAP,CAAc5O,cAAc,QAA5B,QACA,YAAC,GAAM4O,OAAP,CAAc5O,cAAc,SAA5B,SACA,YAAC,GAAM4O,OAAP,CAAclS,MAAM,SAApB,UAEF,YAAC,GAAMgS,KAAP,KACE,YAAC,GAAMlO,MAAP,CAAaU,MAAOA,IACpB,YAAC,GAAMV,MAAP,CAAaU,MAAOA,EAAOE,SAAU2Q,IACrC,YAAC,GAAMvR,MAAP,CAAaU,MAAOA,EAAOE,SAAU2Q,EAAe5Q,QAAS2Q,IAC5DhC,EAAOpM,KAAI,SAACkH,EAAK5E,GAAN,OAAgB,YAAC,GAAMf,IAAP,CAAWc,KAAM6E,EAAK5E,MAAOA,EAAO9B,IAAK0G,EAAI0C,IACrE,YAAC,GAAMqB,KAAP,CAAY3Q,WAAY,GAAI4M,EAAI0C,GAAhC,KACA,YAAC,GAAMqB,KAAP,CAAY3Q,WAAY,IAAK4M,EAAIsE,MACjC,YAAC,GAAMP,KAAP,CAAY3Q,WAAY,GAAI4M,EAAI0E,OAChC,YAAC,GAAMX,KAAP,CAAY3Q,WAAY,EAAGtB,MAAM,SAC9BkO,EAAI4E,gBAOjB,kBACE,GAAM,4BADR,4BAGA,kBACE,GAAM,eADR,eAGA,yBACE,qBAAOoB,WAAW,SAChB,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,QAGA,kBAAIA,WAAW,KACb,MAAS,MADX,QAGA,kBAAIA,WAAW,KACb,MAAS,MADX,eAGA,kBAAIA,WAAW,KACb,MAAS,MADX,UAGA,kBAAIA,WAAW,KACb,MAAS,MADX,eAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,WAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,YACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,UACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,UACH,kBAAIA,WAAW,KACb,MAAS,MADX,MAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,eAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,oBACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,UACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,kBACH,kBAAIA,WAAW,KACb,MAAS,MADX,MAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,QAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,eACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,UACH,kBAAIA,WAAW,KACb,MAAS,MADX,KAGA,kBAAIA,WAAW,KACb,MAAS,MADX,wBAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,UAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,aACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,UACH,kBAAIA,WAAW,KACb,MAAS,MADX,KAGA,kBAAIA,WAAW,KACb,MAAS,MADX,8CAEkD,0BAAYA,WAAW,MAAvB,iBAFlD,MAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,QAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,SACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,UACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,WACH,kBAAIA,WAAW,KACb,MAAS,MADX,MAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,aAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,WACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,UACH,kBAAIA,WAAW,KACb,MAAS,MADX,KAGA,kBAAIA,WAAW,KACb,MAAS,MADX,MAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,eAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,YACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,UACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,UACH,kBAAIA,WAAW,KACb,MAAS,MADX,MAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,qBAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,WACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,UACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,UACH,kBAAIA,WAAW,KACb,MAAS,MADX,wCAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,eAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,mBACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,UACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,QACH,kBAAIA,WAAW,KACb,MAAS,MADX,0GAMN,kBACE,GAAM,qBADR,sBAGA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,QAGA,kBAAIA,WAAW,KACb,MAAS,MADX,QAGA,kBAAIA,WAAW,KACb,MAAS,MADX,eAGA,kBAAIA,WAAW,KACb,MAAS,MADX,UAGA,kBAAIA,WAAW,KACb,MAAS,MADX,eAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,iBAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,UAFH,KAE4D,0BAAYA,WAAW,MAAvB,UAC5D,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,SACH,kBAAIA,WAAW,KACb,MAAS,MADX,KAGA,kBAAIA,WAAW,KACb,MAAS,MADX,iCAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,SAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,WACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,UACH,kBAAIA,WAAW,KACb,MAAS,MADX,KAGA,kBAAIA,WAAW,KACb,MAAS,MADX,MAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,SAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,gBACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,UACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,SACH,kBAAIA,WAAW,KACb,MAAS,MADX,QAMN,kBACE,GAAM,kBADR,mBAGA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,QAGA,kBAAIA,WAAW,KACb,MAAS,MADX,QAGA,kBAAIA,WAAW,KACb,MAAS,MADX,eAGA,kBAAIA,WAAW,KACb,MAAS,MADX,UAGA,kBAAIA,WAAW,KACb,MAAS,MADX,eAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,QAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,QACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,SACH,kBAAIA,WAAW,KACb,MAAS,MADX,KAGA,kBAAIA,WAAW,KACb,MAAS,MADX,oDAEwD,0BAAYA,WAAW,MAAvB,gBAFxD,MAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,SAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,UACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,SACH,kBAAIA,WAAW,KACb,MAAS,MADX,KAGA,kBAAIA,WAAW,KACb,MAAS,MADX,kDAEsD,0BAAYA,WAAW,MAAvB,gBAFtD,QAMN,kBACE,GAAM,mBADR,oBAGA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,QAGA,kBAAIA,WAAW,KACb,MAAS,MADX,QAGA,kBAAIA,WAAW,KACb,MAAS,MADX,eAGA,kBAAIA,WAAW,KACb,MAAS,MADX,UAGA,kBAAIA,WAAW,KACb,MAAS,MADX,eAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,SAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,gBACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,UACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,SACH,kBAAIA,WAAW,KACb,MAAS,MADX,MAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,WAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,WACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,UACH,kBAAIA,WAAW,KACb,MAAS,MADX,KAGA,kBAAIA,WAAW,KACb,MAAS,MADX,MAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,cAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,qBACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,UACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,SACH,kBAAIA,WAAW,KACb,MAAS,MADX,0DAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,eAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,gBACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,UACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,SACH,kBAAIA,WAAW,KACb,MAAS,MADX,MAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,eAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,WACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,UACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,kBACH,kBAAIA,WAAW,KACb,MAAS,MADX,mGAMN,kBACE,GAAM,qBADR,sBAGA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,QAGA,kBAAIA,WAAW,KACb,MAAS,MADX,QAGA,kBAAIA,WAAW,KACb,MAAS,MADX,eAGA,kBAAIA,WAAW,KACb,MAAS,MADX,UAGA,kBAAIA,WAAW,KACb,MAAS,MADX,eAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,WAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,uCACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,SACH,kBAAIA,WAAW,KACb,MAAS,MADX,KAGA,kBAAIA,WAAW,KACb,MAAS,MADX,MAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,YAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,YACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,UACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,UACH,kBAAIA,WAAW,KACb,MAAS,MADX,MAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,SAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,WACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,UACH,kBAAIA,WAAW,KACb,MAAS,MADX,KAGA,kBAAIA,WAAW,KACb,MAAS,MADX,sHAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,QAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,oBACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,UACH,kBAAIA,WAAW,KACb,MAAS,MADX,KAGA,kBAAIA,WAAW,KACb,MAAS,MADX,QAMN,kBACE,GAAM,yBADR,0BAGA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,QAGA,kBAAIA,WAAW,KACb,MAAS,MADX,QAGA,kBAAIA,WAAW,KACb,MAAS,MADX,eAGA,kBAAIA,WAAW,KACb,MAAS,MADX,UAGA,kBAAIA,WAAW,KACb,MAAS,MADX,aAGA,kBAAIA,WAAW,KACb,MAAS,SAIf,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,QAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,WACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,SACH,kBAAIA,WAAW,KACb,MAAS,MADX,KAGA,kBAAIA,WAAW,KACb,MAAS,MADX,KAGA,kBAAIA,WAAW,KACb,MAAS,QAGb,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,WAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,WACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,SACH,kBAAIA,WAAW,KACb,MAAS,MADX,KAGA,kBAAIA,WAAW,KACb,MAAS,MADX,KAGA,kBAAIA,WAAW,KACb,MAAS,QAGb,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,SAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,WACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,SACH,kBAAIA,WAAW,KACb,MAAS,MADX,KAGA,kBAAIA,WAAW,KACb,MAAS,MADX,KAGA,kBAAIA,WAAW,KACb,MAAS,QAGb,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,kBAGA,kBAAIA,WAAW,KACb,MAAS,MADX,aAGA,kBAAIA,WAAW,KACb,MAAS,MADX,WAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,UACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,oBACH,kBAAIA,WAAW,KACb,MAAS,MADX,uFAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,qBAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,oBACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,UACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,sBACH,kBAAIA,WAAW,KACb,MAAS,MADX,KAGA,kBAAIA,WAAW,KACb,MAAS,QAGb,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,iBAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,oBACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,UACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,aACH,kBAAIA,WAAW,KACb,MAAS,MADX,KAGA,kBAAIA,WAAW,KACb,MAAS,QAGb,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,gBAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,2BACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,SACH,kBAAIA,WAAW,KACb,MAAS,MADX,KAGA,kBAAIA,WAAW,KACb,MAAS,MADX,KAGA,kBAAIA,WAAW,KACb,MAAS,QAGb,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,mBAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,8BACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,SACH,kBAAIA,WAAW,KACb,MAAS,MADX,KAGA,kBAAIA,WAAW,KACb,MAAS,MADX,KAGA,kBAAIA,WAAW,KACb,MAAS,UAKjB,kBACE,GAAM,uBADR,wBAGA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,QAGA,kBAAIA,WAAW,KACb,MAAS,MADX,QAGA,kBAAIA,WAAW,KACb,MAAS,MADX,eAGA,kBAAIA,WAAW,KACb,MAAS,MADX,UAGA,kBAAIA,WAAW,KACb,MAAS,MADX,eAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,UAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,2CACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,UACH,kBAAIA,WAAW,KACb,MAAS,MADX,KAGA,kBAAIA,WAAW,KACb,MAAS,MADX,6BAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,WAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,2CACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,UACH,kBAAIA,WAAW,KACb,MAAS,MADX,KAGA,kBAAIA,WAAW,KACb,MAAS,MADX,8BAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,YAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,YACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,UACH,kBAAIA,WAAW,KACb,MAAS,MADX,KAGA,kBAAIA,WAAW,KACb,MAAS,QAGb,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,mBAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,YACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,UACH,kBAAIA,WAAW,KACb,MAAS,MADX,KAGA,kBAAIA,WAAW,KACb,MAAS,MADX,iCAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,qBAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,YACH,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,UACH,kBAAIA,WAAW,KACb,MAAS,MADX,KAGA,kBAAIA,WAAW,KACb,MAAS,MADX,4C,6NAUVH,GAAWwB,gBAAiB","file":"component---packages-ui-components-table-index-mdx-1bcd9c0f5edbae96a671.js","sourcesContent":["import { createContext } from 'use-context-selector';\n\nimport { ITableAction, ITableCollapse } from '../interface';\n\nexport interface ITableRowContext {\n  data: unknown;\n  index: number;\n  collapse: ITableCollapse;\n  registerCollapse: (content: ITableCollapse) => () => void;\n  registerAction: (option: Omit<ITableAction, 'key'>) => () => void;\n}\n\nconst TableRowContext = createContext<ITableRowContext>({} as ITableRowContext);\n\nexport default TableRowContext;\n","import * as React from 'react';\n\nimport { useContextSelector } from 'use-context-selector';\n\nimport TableRowContext from '../Row/context';\n\nexport interface ITableActionOptionProp {\n  children?: React.ReactNode;\n  onClick: (data: unknown, index?: number) => void;\n  icon?: React.ReactNode;\n  disabled?: boolean;\n}\n\nconst TableActionOption = React.memo<ITableActionOptionProp>(({ children, disabled, onClick, icon }) => {\n  const registerAction = useContextSelector(TableRowContext, context => context.registerAction);\n\n  React.useEffect(() => {\n    const unregister = registerAction({ disabled, onClick, icon, content: children });\n    return () => unregister();\n  }, [children, disabled, onClick, icon, registerAction]);\n\n  return null;\n});\n\nexport default TableActionOption;\n","import { Size } from '@material-ui/core/Table';\nimport { createContext } from 'use-context-selector';\n\nimport { ITableSort, ITableAction } from './interface';\n\nexport interface ITableRow {\n  key: string;\n  hasActions: boolean;\n  hasCollapse: boolean;\n}\n\nexport interface ITableActionShow {\n  anchorEl: HTMLElement;\n  rowData: unknown;\n  rowIndex?: number;\n  actions: ITableAction[];\n}\n\nexport interface ITableContext {\n  loading: boolean;\n  loadingText?: React.ReactNode;\n  size: Size;\n\n  sort?: ITableSort;\n  onSort: (param: ITableSort) => void;\n\n  columns: string[];\n  registerColumn: (isCollapse?: boolean) => () => void;\n\n  rows: ITableRow[];\n  registerRow: (param: Omit<ITableRow, 'key'>) => () => void;\n\n  rowMapLabel: { [rowKey: string]: string };\n\n  onShowAction: (param: ITableActionShow) => void;\n\n  stripedRows: boolean;\n  columnActionTitle?: string;\n\n  hasCollapseInRows: boolean;\n  hasActionInRows: boolean;\n\n  isCollapseContent: boolean;\n}\n\nconst TableContext = createContext<ITableContext>({} as ITableContext);\n\nexport default TableContext;\n","import * as React from 'react';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { useContextSelector } from 'use-context-selector';\n\nimport createUseStyles from '../../styles/createUseStyles';\nimport Typography from '../../Typography';\nimport TableContext from '../context';\n\nexport interface ITableLoadingProps {\n  text: React.ReactNode;\n}\n\nconst useStyle = createUseStyles(theme => ({\n  text: {\n    padding: theme.spacing(5)\n  }\n}));\n\nconst TableLoading = React.memo<ITableLoadingProps>(({ text }) => {\n  const classes = useStyle();\n\n  const isCollapseContent = useContextSelector(TableContext, context => context.isCollapseContent);\n\n  return (\n    <tr className='table-loader'>\n      <td align='center' colSpan={1000}>\n        {!isCollapseContent && (\n          <>\n            <LinearProgress />\n\n            <Typography size='normal' fontWeight='regular' lineHeight='comfortable' className={classes.text}>\n              {text}\n            </Typography>\n          </>\n        )}\n\n        {isCollapseContent && (\n          <div className={classes.text}>\n            <CircularProgress size={32} />\n          </div>\n        )}\n      </td>\n    </tr>\n  );\n});\n\nexport default TableLoading;\n","import * as React from 'react';\n\nimport { useContextSelector } from 'use-context-selector';\n\nimport TableContext from '../context';\nimport TableLoading from '../Loading';\n\nexport interface ITableBodyProps {\n  children: React.ReactNode;\n}\n\nconst TableBody = React.memo<ITableBodyProps>(({ children }) => {\n  const loading = useContextSelector(TableContext, context => context.loading);\n  const loadingText = useContextSelector(TableContext, context => context.loadingText);\n\n  return <tbody>{loading ? <TableLoading text={loadingText} /> : children}</tbody>;\n});\n\nexport default TableBody;\n","import * as React from 'react';\n\nimport { GridSize } from '@material-ui/core/Grid';\nimport clsx from 'clsx';\nimport { useContextSelector } from 'use-context-selector';\n\nimport createUseStyles from '../../styles/createUseStyles';\nimport TableContext from '../context';\n\nlet cellKeyIncremeter = 0;\n\nexport interface ITableCellProps {\n  id?: string;\n  className?: string;\n  colSpan?: number;\n  columnLabel?: string;\n  mobileSize?: GridSize | true | false | 0;\n  mobileAlign?: React.TdHTMLAttributes<HTMLTableCellElement>['align'];\n  onClick?: () => void;\n  onDoubleClick?: () => void;\n  children?: React.ReactNode;\n  align?: React.TdHTMLAttributes<HTMLTableCellElement>['align'];\n}\n\nconst useStyles = createUseStyles(theme => ({\n  root: {\n    padding: '12px 20px',\n    borderTop: `1px solid ${theme.colors.grey[200]}`,\n    fontSize: theme.textSize('normal'),\n    color: theme.colors.grey[600],\n    fontWeight: theme.fontWeight('regular'),\n    lineHeight: theme.lineHeight('normal')\n  },\n\n  rootSmall: {\n    padding: '8px 12px',\n    fontSize: theme.textSize('small')\n  }\n}));\n\nconst TableCell = React.memo<ITableCellProps>(\n  ({ children, className, mobileSize, mobileAlign, columnLabel, onClick, onDoubleClick, align, ...props }) => {\n    const classes = useStyles();\n\n    const [cellKey] = React.useState(() => `cell-${++cellKeyIncremeter}`);\n    const cellRef = React.useRef<HTMLTableCellElement>();\n\n    const label = useContextSelector(TableContext, context => context.rowMapLabel[cellKey]);\n    const tableSize = useContextSelector(TableContext, context => context.size);\n\n    React.useEffect(() => {\n      cellRef.current.setAttribute('cell-key', cellKey);\n    }, [cellKey]);\n\n    return (\n      <td\n        {...props}\n        onClick={onClick}\n        onDoubleClick={onDoubleClick}\n        className={clsx(\n          classes.root,\n          tableSize === 'small' && classes.rootSmall,\n          className,\n          `cell-size-${mobileSize ?? 'auto'}`,\n          `cell-align-${align ?? 'left'}`,\n          mobileAlign && `cell-mobile-align-${mobileAlign}`\n        )}\n        ref={cellRef}\n      >\n        <span className='table-label-mobile'>{columnLabel ?? label}</span>\n        {children}\n      </td>\n    );\n  }\n);\n\nexport default TableCell;\n","import * as React from 'react';\n\nimport { useContextSelector } from 'use-context-selector';\n\nimport TableRowContext from '../Row/context';\n\nexport interface ITableCollapseProps {\n  onOpen?: (data: unknown, index: number) => void;\n  onClose?: (data: unknown, index: number) => void;\n  disabled?: boolean;\n  children?: React.ReactNode;\n  disabledPadding?: boolean;\n  disableBackground?: boolean;\n}\n\nconst TableCollapse = React.memo<ITableCollapseProps>(\n  ({ onOpen, onClose, disabled, disableBackground, disabledPadding, children }) => {\n    const registerCollapse = useContextSelector(TableRowContext, context => context.registerCollapse);\n\n    React.useEffect(() => {\n      const unregister = registerCollapse({\n        disabled,\n        onOpen,\n        onClose,\n        disableBackground,\n        disabledPadding,\n        content: children\n      });\n      return () => unregister();\n    }, [children, disabled, registerCollapse, onOpen, onClose, disableBackground, disabledPadding]);\n\n    return null;\n  }\n);\n\nexport default TableCollapse;\n","import * as React from 'react';\n\nimport clsx from 'clsx';\nimport { useContextSelector } from 'use-context-selector';\n\nimport IconArrowUp from '@eduzz/houston-icons/ArrowUp';\n\nimport createUseStyles from '../../../styles/createUseStyles';\nimport TableContext from '../../context';\n\ninterface ISortLabelProps {\n  sortable?: boolean;\n  active?: boolean;\n  disabled?: boolean;\n  direction?: 'asc' | 'desc';\n  onClick?: () => void;\n  children?: React.ReactNode;\n}\n\nconst useStyles = createUseStyles(theme => ({\n  root: {\n    fontSize: theme.textSize('normal'),\n    fontWeight: theme.fontWeight('semibold'),\n    color: theme.colors.grey[600],\n\n    '&.--small': {\n      fontSize: theme.textSize('small')\n    },\n\n    '&.--collapse-content': {\n      fontSize: theme.textSize('small'),\n      color: theme.colors.grey[500]\n    },\n\n    '&.--disabled': {\n      color: theme.colors.grey[400],\n      cursor: 'no-drop'\n    },\n\n    '&.--sortable': {\n      cursor: 'pointer',\n      display: 'inline-flex',\n      alignItems: 'center'\n    },\n\n    '& .icon': {\n      lineHeight: 0,\n      transition: '0.2s linear',\n\n      '&.--desc': {\n        transform: 'rotate(-180deg)'\n      }\n    }\n  }\n}));\n\nconst SortLabel: React.FC<ISortLabelProps> = ({ children, sortable, active, direction, disabled, onClick }) => {\n  const tableSize = useContextSelector(TableContext, context => context.size);\n  const isCollapseContent = useContextSelector(TableContext, context => context.isCollapseContent);\n\n  const classes = useStyles();\n\n  if (!sortable || isCollapseContent) {\n    return (\n      <span\n        className={clsx(\n          classes.root,\n          disabled && '--disabled',\n          tableSize === 'small' && '--small',\n          isCollapseContent && '--collapse-content'\n        )}\n      >\n        {children}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={clsx(classes.root, disabled && '--disabled', tableSize === 'small' && '--small', '--sortable')}\n      onClick={onClick}\n    >\n      {children}\n\n      {active && (\n        <div className={clsx(direction === 'desc' && '--desc', 'icon')}>\n          <IconArrowUp />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default React.memo(SortLabel);\n","import * as React from 'react';\n\nimport clsx from 'clsx';\nimport { useContextSelector } from 'use-context-selector';\n\nimport createUseStyles from '../../styles/createUseStyles';\nimport TableContext from '../context';\nimport SortLabel from './SortLabel';\n\nexport interface ITableColumnProps {\n  id?: string;\n  className?: string;\n  children?: React.ReactNode;\n  width?: number;\n  /**\n   * Default `left`\n   */\n  align?: React.TdHTMLAttributes<HTMLTableCellElement>['align'];\n  /**\n   * Control of ordered columns\n   * Default `false`\n   */\n  sortableField?: string;\n}\n\nconst useStyles = createUseStyles(theme => ({\n  root: {\n    padding: '8px 20px',\n    borderBottom: `1px solid ${theme.colors.grey[200]}`,\n\n    '&.--collapse': {\n      borderBottomColor: theme.colors.grey[300]\n    }\n  },\n\n  rootSmall: {\n    padding: '8px 12px'\n  }\n}));\n\nconst TableColumn = React.memo<ITableColumnProps>(({ sortableField, children, className, align, ...rest }) => {\n  const registerColumn = useContextSelector(TableContext, context => context.registerColumn);\n  const onSort = useContextSelector(TableContext, context => context.onSort);\n  const sort = useContextSelector(TableContext, context => context.sort);\n  const loading = useContextSelector(TableContext, context => context.loading);\n  const tableSize = useContextSelector(TableContext, context => context.size);\n  const isCollapseContent = useContextSelector(TableContext, context => context.isCollapseContent);\n\n  const classes = useStyles();\n\n  const cellRef = React.useRef<HTMLTableCellElement>();\n\n  const isSorted = sort?.field === sortableField;\n\n  const handleSort = React.useCallback(() => {\n    if (!onSort) {\n      throw new Error('@eduzz/houston-ui: add the onSort prop to the Table to filter the fields');\n    }\n\n    onSort({\n      field: sortableField,\n      direction: !isSorted || sort?.direction === 'desc' ? 'asc' : 'desc'\n    });\n  }, [onSort, sortableField, isSorted, sort?.direction]);\n\n  React.useEffect(() => {\n    const unregister = registerColumn();\n    return () => unregister();\n  }, [registerColumn]);\n\n  return (\n    <th\n      ref={cellRef}\n      className={clsx(\n        classes.root,\n        tableSize === 'small' && classes.rootSmall,\n        className,\n        `column-align-${align ?? 'left'}`,\n        isCollapseContent && '--collapse'\n      )}\n      {...rest}\n    >\n      <SortLabel\n        sortable={!!sortableField && !isCollapseContent}\n        active={isSorted}\n        disabled={loading}\n        direction={isSorted ? sort?.direction : 'asc'}\n        onClick={handleSort}\n      >\n        {children}\n      </SortLabel>\n    </th>\n  );\n});\n\nexport default TableColumn;\n","import * as React from 'react';\n\nimport { useContextSelector } from 'use-context-selector';\n\nimport Typography from '../../Typography';\nimport TableContext from '../context';\n\nexport interface ITableEmptyProps {\n  count: number;\n  children?: React.ReactNode;\n}\n\nconst TableEmpty = React.memo<ITableEmptyProps>(({ children, count }) => {\n  const columnsLen = useContextSelector(TableContext, context => context.columns.length);\n\n  if (count) return null;\n\n  children = children ?? 'Nenhum dado encontrado';\n\n  return (\n    <tr className='table-empty-message'>\n      <td align='center' colSpan={columnsLen}>\n        {typeof children === 'string' ? (\n          <Typography size='normal' fontWeight='regular' lineHeight='comfortable'>\n            {children}\n          </Typography>\n        ) : (\n          children\n        )}\n      </td>\n    </tr>\n  );\n});\n\nexport default TableEmpty;\n","import * as React from 'react';\n\nimport Button from '../../Button';\nimport createUseStyles from '../../styles/createUseStyles';\nimport Typography from '../../Typography';\n\nexport interface ITableEErrorProps {\n  error?: any;\n  formater?: (error: any) => string;\n  onRetry?: () => void;\n  children?: React.ReactNode;\n}\n\nconst useStyle = createUseStyles(theme => ({\n  text: {\n    opacity: 0.8,\n    fontStyle: 'italic',\n    '& + button': { marginTop: theme.spacing(3) }\n  }\n}));\n\nconst TableError = React.memo<ITableEErrorProps>(({ children, error, onRetry, formater }) => {\n  const classes = useStyle();\n\n  const errorMessage = React.useMemo(() => {\n    if (formater) {\n      return formater(error) ?? 'Algo inesperado aconteceu...';\n    }\n\n    return typeof error === 'string' ? error : 'Algo inesperado aconteceu...';\n  }, [error, formater]);\n\n  if (error) return null;\n  children = children ?? errorMessage;\n\n  return (\n    <tr className='table-error-message'>\n      <td align='center' colSpan={1000}>\n        {typeof children === 'string' ? (\n          <>\n            <Typography size='normal' fontWeight='regular' lineHeight='comfortable' className={classes.text}>\n              {children}\n            </Typography>\n\n            {onRetry && (\n              <Button variant='text' onClick={onRetry}>\n                Tentar Novamente\n              </Button>\n            )}\n          </>\n        ) : (\n          children\n        )}\n      </td>\n    </tr>\n  );\n});\n\nexport default TableError;\n","import * as React from 'react';\n\nimport { useContextSelector } from 'use-context-selector';\n\nimport TableColumn from '../Column';\nimport TableContext from '../context';\n\nexport interface ITableHeadProps {\n  children: React.ReactNode;\n  disabledActionsColumn?: boolean;\n}\n\nconst TableHeader = React.memo<ITableHeadProps>(({ children, disabledActionsColumn }) => {\n  const hasActions = useContextSelector(TableContext, context => context.rows.some(r => r.hasActions));\n  const hasCollapse = useContextSelector(TableContext, context => context.rows.some(r => r.hasCollapse));\n  const columnActionTitle = useContextSelector(TableContext, context => context.columnActionTitle);\n\n  return (\n    <thead>\n      <tr>\n        {children}\n\n        {hasActions && !disabledActionsColumn && (\n          <TableColumn width={30} align='right'>\n            {columnActionTitle ?? 'Ações'}\n          </TableColumn>\n        )}\n\n        {hasCollapse && <TableColumn width={30} />}\n      </tr>\n    </thead>\n  );\n});\n\nexport default TableHeader;\n","import * as React from 'react';\n\nimport PaginationMUI from '@material-ui/lab/Pagination';\nimport { useContextSelector } from 'use-context-selector';\n\nimport SelectField from '@eduzz/houston-ui/Forms/Select';\nimport TextField from '@eduzz/houston-ui/Forms/Text';\nimport Column from '@eduzz/houston-ui/Grid/Column';\nimport Row from '@eduzz/houston-ui/Grid/Row';\nimport createUseStyles from '@eduzz/houston-ui/styles/createUseStyles';\nimport Typography from '@eduzz/houston-ui/Typography';\n\nimport TableContext from '../context';\n\ntype ITablePaginationExtends = 'id' | 'className' | 'children';\n\nexport interface ITablePagination extends Pick<React.HTMLAttributes<HTMLTableRowElement>, ITablePaginationExtends> {\n  page: number;\n  perPage: number;\n  total: number;\n  optionsPerPage?: number[] | 'string' | false;\n  labelItensPerPage?: React.ReactNode;\n  labelGoToPage?: React.ReactNode;\n  onChangePage: (page: number) => void;\n  onChangePerPage: (rowsPerPage: number) => void;\n}\n\nconst useStyles = createUseStyles(theme => ({\n  td: {\n    padding: '12px 0'\n  },\n\n  perPage: {\n    display: 'inline-flex',\n    alignItems: 'center',\n\n    '& > p': {\n      whiteSpace: 'nowrap',\n      marginRight: theme.spacing(2),\n      color: theme.colors.grey[600]\n    }\n  },\n\n  labels: {\n    display: 'inline-flex',\n    alignItems: 'center',\n\n    '& > p': {\n      whiteSpace: 'nowrap',\n      marginRight: theme.spacing(2),\n      color: theme.colors.grey[600]\n    },\n\n    [theme.breakpoints.down('xs')]: {\n      display: 'none'\n    }\n  },\n\n  input: {\n    maxWidth: 50\n  },\n\n  pages: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    height: '100%',\n    alignItems: 'center',\n\n    [theme.breakpoints.down('xs')]: {\n      marginTop: theme.spacing(2),\n      justifyContent: 'center'\n    }\n  }\n}));\n\nconst Pagination = React.memo<ITablePagination>(\n  ({\n    page,\n    optionsPerPage: optionsPerPageProp,\n    onChangePerPage,\n    onChangePage,\n    total,\n    perPage,\n    labelGoToPage,\n    labelItensPerPage\n  }) => {\n    const classes = useStyles();\n\n    const loading = useContextSelector(TableContext, context => context.loading);\n\n    const [pageInput, setPageInput] = React.useState<string>(page?.toString());\n\n    const optionsPerPage = React.useMemo(() => {\n      if (optionsPerPageProp === false) {\n        return null;\n      }\n\n      if (typeof optionsPerPageProp === 'string') {\n        return optionsPerPageProp.split(',').map(value => ({ label: value, value: Number(value) }));\n      }\n\n      return (optionsPerPageProp ?? [5, 10, 25, 50]).map(value => ({ label: String(value), value }));\n    }, [optionsPerPageProp]);\n\n    const handlePageInputChange = React.useCallback(\n      (\n        valueOrEvent: string | React.KeyboardEvent<HTMLDivElement>,\n        event?:\n          | React.KeyboardEvent<HTMLDivElement>\n          | React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>\n          | React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n      ) => {\n        let enterPressed = false;\n        let value = '';\n\n        if (typeof valueOrEvent === 'object') {\n          event = valueOrEvent;\n          enterPressed = valueOrEvent.key?.toLowerCase() === 'enter';\n          value = (valueOrEvent.target as any).value;\n        } else {\n          value = valueOrEvent;\n        }\n\n        setPageInput(value);\n\n        if (event.type === 'change' || (event.type === 'keyup' && !enterPressed)) {\n          return;\n        }\n\n        let currentPage = Math.floor(Number(value));\n        const maxPage = Math.ceil(total / perPage);\n\n        if (!currentPage) {\n          currentPage = 1;\n        }\n\n        if (currentPage > maxPage) {\n          currentPage = maxPage;\n        }\n\n        if (currentPage != Number(value)) {\n          setPageInput(currentPage.toString());\n        }\n\n        if (currentPage === page) {\n          return;\n        }\n\n        onChangePage(currentPage);\n      },\n      [onChangePage, page, perPage, total]\n    );\n\n    const handleChangePerPage = React.useCallback(\n      (_: any, event: React.ChangeEvent<{ name?: string; value: any }>) => {\n        onChangePerPage(event.target.value);\n      },\n      [onChangePerPage]\n    );\n\n    const handleChangePage = React.useCallback(\n      (_: React.ChangeEvent<unknown>, page: number) => {\n        onChangePage(page);\n      },\n      [onChangePage]\n    );\n\n    React.useEffect(() => {\n      const timeout = setTimeout(() => setPageInput(page?.toString()), 500);\n      return () => clearTimeout(timeout);\n    }, [page]);\n\n    return (\n      <tfoot>\n        <tr>\n          <td colSpan={1000} className={classes.td}>\n            <Row>\n              <Column xs={12} sm='auto'>\n                <Row justifyContent='center'>\n                  <Column xs='auto' className={classes.perPage}>\n                    <Typography size='small' fontWeight='semibold'>\n                      {labelItensPerPage ?? 'Itens por página:'}\n                    </Typography>\n\n                    <SelectField\n                      disabled={loading}\n                      size='small'\n                      margin='none'\n                      options={optionsPerPage}\n                      value={perPage}\n                      onChange={handleChangePerPage}\n                    />\n                  </Column>\n\n                  <Column xs='auto' className={classes.labels}>\n                    <Typography size='small' fontWeight='semibold'>\n                      {labelGoToPage ?? 'Ir para:'}\n                    </Typography>\n\n                    <TextField\n                      margin='none'\n                      size='small'\n                      disabled={loading}\n                      value={pageInput}\n                      className={classes.input}\n                      onChange={handlePageInputChange}\n                      onKeyUp={handlePageInputChange}\n                      onBlur={handlePageInputChange}\n                    />\n                  </Column>\n                </Row>\n              </Column>\n\n              <Column xs={12} sm={true}>\n                <div className={classes.pages}>\n                  <PaginationMUI\n                    count={Math.ceil(total / perPage)}\n                    page={page ?? 1}\n                    disabled={loading}\n                    shape='rounded'\n                    size='medium'\n                    onChange={handleChangePage}\n                  />\n                </div>\n              </Column>\n            </Row>\n          </td>\n        </tr>\n      </tfoot>\n    );\n  }\n);\n\nexport default Pagination;\n","import { createContext } from 'use-context-selector';\n\nexport interface ITableCollapseContext {\n  isCollapseContent: boolean;\n}\n\nconst TableCollapseContext = createContext<ITableCollapseContext>({} as ITableCollapseContext);\n\nexport default TableCollapseContext;\n","import * as React from 'react';\n\nimport CollapseMUI from '@material-ui/core/Collapse';\nimport clsx from 'clsx';\nimport { useContextSelector } from 'use-context-selector';\n\nimport TableRowContext from '../Row/context';\nimport TableCollapseContext from './context';\n\nexport interface ITableCollapseContentProps {\n  visible: boolean;\n}\n\nconst CollapseContent = React.memo<ITableCollapseContentProps>(({ visible }) => {\n  const data = useContextSelector(TableRowContext, context => context.data);\n  const index = useContextSelector(TableRowContext, context => context.index);\n  const collapse = useContextSelector(TableRowContext, context => context.collapse);\n\n  const onCollapseEnter = React.useCallback(\n    () => collapse.onOpen && collapse.onOpen(data, index),\n    [collapse, data, index]\n  );\n\n  const onCollapseClose = React.useCallback(\n    () => collapse.onClose && collapse.onClose(data, index),\n    [collapse, data, index]\n  );\n\n  return (\n    <tr\n      className={clsx(\n        'table-collapse',\n        visible && 'table-collapse-opened',\n        collapse?.disableBackground && 'table-collapse-no-background',\n        collapse?.disabledPadding && 'table-collapse-no-padding'\n      )}\n    >\n      <td colSpan={1000}>\n        <CollapseMUI\n          in={visible && !collapse?.disabled}\n          timeout={350}\n          onEntered={onCollapseEnter}\n          onExited={onCollapseClose}\n          unmountOnExit\n        >\n          <div className='table-collapse-content'>\n            <TableCollapseContext.Provider value={{ isCollapseContent: collapse !== null }}>\n              {collapse?.content}\n            </TableCollapseContext.Provider>\n          </div>\n        </CollapseMUI>\n      </td>\n    </tr>\n  );\n});\n\nexport default CollapseContent;\n","import createUseStyles from '@eduzz/houston-ui/styles/createUseStyles';\n\nexport default createUseStyles(theme => ({\n  cellAction: {\n    padding: '6px 12px',\n    borderTop: `1px solid ${theme.colors.grey[200]}`,\n    fontSize: theme.textSize('normal'),\n\n    '&.--small': {\n      fontSize: theme.textSize('small')\n    }\n  },\n\n  cellCollapse: {\n    paddingRight: 8,\n    borderTop: `1px solid ${theme.colors.grey[200]}`,\n    fontSize: theme.textSize('normal'),\n\n    '&.--small': {\n      fontSize: theme.textSize('small')\n    }\n  },\n\n  iconAction: {\n    display: 'inline-flex',\n    padding: 4,\n    transition: 'background 0.2s linear',\n    borderRadius: '50%',\n    cursor: 'pointer',\n\n    '&:hover': {\n      background: theme.colors.grey[200]\n    },\n\n    '&:focus': {\n      background: theme.colors.grey[300]\n    },\n\n    '& .houston-icon': {\n      '& svg': {\n        fill: theme.colors.grey[600]\n      }\n    }\n  }\n}));\n","import * as React from 'react';\n\nimport clsx from 'clsx';\nimport { useContextSelector } from 'use-context-selector';\n\nimport useBoolean from '@eduzz/houston-hooks/useBoolean';\nimport IconChevronDown from '@eduzz/houston-icons/ChevronDown';\nimport IconDotsHorizontal from '@eduzz/houston-icons/DotsHorizontal';\n\nimport CollapseContent from '../CollapseContent';\nimport TableContext from '../context';\nimport { ITableAction, ITableCollapse } from '../interface';\nimport TableRowContext, { ITableRowContext } from './context';\nimport useStyles from './styles';\n\nlet tableActionIncremeter = 0;\n\nexport interface ITableRowProps {\n  id?: string;\n  className?: string;\n  data: unknown;\n  index: number;\n  children?: React.ReactNode;\n  onClick?: () => void;\n  onDoubleClick?: () => void;\n}\n\nconst TableRow = React.memo<ITableRowProps>(({ data, index, children, className, ...props }) => {\n  const stripedRows = useContextSelector(TableContext, context => context.stripedRows);\n  const onShowAction = useContextSelector(TableContext, context => context.onShowAction);\n  const registerRow = useContextSelector(TableContext, context => context.registerRow);\n  const tableSize = useContextSelector(TableContext, context => context.size);\n  const hasCollapseInRows = useContextSelector(TableContext, context => context.hasCollapseInRows);\n  const hasActionInRows = useContextSelector(TableContext, context => context.hasActionInRows);\n  const isCollapseContent = useContextSelector(TableContext, context => context.isCollapseContent);\n\n  const classes = useStyles();\n\n  const [showCollapse, toogleShowCollapse] = useBoolean(false);\n\n  const [collapse, setCollapse] = React.useState<ITableCollapse>(null);\n  const [actions, setActions] = React.useState<ITableAction[]>([]);\n\n  const oneAction = actions.length === 1 ? actions[0] : null;\n  const hasActions = actions.length > 0;\n  const hasCollapse = collapse !== null;\n\n  const onClickAction = React.useCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n      if (oneAction) {\n        oneAction.onClick(data, index);\n        return;\n      }\n\n      onShowAction({ anchorEl: e.currentTarget, rowData: data, rowIndex: index, actions });\n    },\n    [oneAction, onShowAction, data, index, actions]\n  );\n\n  const registerCollapse = React.useCallback((content: ITableCollapse) => {\n    setCollapse(content);\n    return () => setCollapse(null);\n  }, []);\n\n  const registerAction = React.useCallback((action: Omit<ITableAction, 'key'>) => {\n    const key = `table-action-option-${++tableActionIncremeter}`;\n    setActions(actions => [...actions, { key, ...action }]);\n    return () => setActions(actions => actions.filter(o => o.key !== key));\n  }, []);\n\n  React.useEffect(() => {\n    const unregister = registerRow({ hasActions, hasCollapse });\n    return () => unregister();\n  }, [hasActions, hasCollapse, registerRow]);\n\n  const contextValue = React.useMemo<ITableRowContext>(\n    () => ({ registerAction, registerCollapse, data, index, collapse }),\n    [collapse, data, index, registerAction, registerCollapse]\n  );\n\n  const classesColumnAction = React.useMemo(\n    () => clsx(classes.cellAction, tableSize === 'small' && '--small', 'table-action-cell', className),\n    [className, classes.cellAction, tableSize]\n  );\n\n  const classesColumnCollapse = React.useMemo(\n    () => clsx(classes.cellCollapse, tableSize === 'small' && '--small', 'table-collapse-cell', className),\n    [className, classes.cellCollapse, tableSize]\n  );\n\n  return (\n    <TableRowContext.Provider value={contextValue}>\n      <tr\n        {...props}\n        className={clsx(\n          hasActions && 'table-row-has-action',\n          !isCollapseContent && hasCollapse && 'table-row-has-collapse',\n          !isCollapseContent && stripedRows && (index % 2 == 0 ? 'table-row-even' : 'table-row-odd'),\n          className\n        )}\n      >\n        {children}\n\n        {hasActions && (\n          <td align='right' className={classesColumnAction}>\n            {hasActions && (\n              <div onClick={onClickAction} className={classes.iconAction}>\n                {oneAction?.icon ?? <IconDotsHorizontal size={24} />}\n              </div>\n            )}\n          </td>\n        )}\n\n        {!hasActions && hasActionInRows && <td className={classesColumnAction} />}\n\n        {!isCollapseContent && hasCollapse && (\n          <td align='right' className={classesColumnCollapse}>\n            <div\n              onClick={toogleShowCollapse}\n              className={clsx(\n                classes.iconAction,\n                'table-collapse-button',\n                showCollapse && 'table-collapse-button-opened'\n              )}\n            >\n              <IconChevronDown size={24} />\n            </div>\n          </td>\n        )}\n\n        {!hasCollapse && hasCollapseInRows && <td className={classesColumnCollapse} />}\n      </tr>\n\n      {!isCollapseContent && hasCollapse && <CollapseContent visible={showCollapse} />}\n    </TableRowContext.Provider>\n  );\n});\n\nexport default TableRow;\n","import * as React from 'react';\n\nimport Menu, { MenuProps } from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport createUseStyles from '../../styles/createUseStyles';\nimport { ITableAction } from '../interface';\n\nconst useStyles = createUseStyles(() => ({\n  option: {\n    display: 'flex',\n    alignItems: 'center',\n\n    '& svg, span': {\n      marginRight: 8,\n      fontSize: 24\n    }\n  }\n}));\n\ninterface IProps extends MenuProps {\n  anchorEl: HTMLElement;\n  onClose: () => void;\n  options: ITableAction[];\n  rowData: unknown;\n  rowIndex: number;\n}\n\nconst MenuActions = React.memo<IProps>(({ open, onClose, options: optionsProp, anchorEl, rowData, rowIndex }) => {\n  const classes = useStyles();\n\n  const options = React.useMemo(() => {\n    return (optionsProp || []).map(option => ({\n      ...option,\n      onClick: () => {\n        option.onClick(rowData, rowIndex);\n        onClose();\n      }\n    }));\n  }, [onClose, optionsProp, rowData, rowIndex]);\n\n  const menuOptions = React.useMemo<Partial<MenuProps>>(\n    () => ({\n      anchorOrigin: { vertical: 'bottom', horizontal: 'right' },\n      transformOrigin: { vertical: 'top', horizontal: 'right' }\n    }),\n    []\n  );\n\n  return (\n    <Menu\n      anchorEl={anchorEl}\n      open={open}\n      onClose={onClose}\n      getContentAnchorEl={null}\n      disableAutoFocusItem\n      disableAutoFocus\n      keepMounted\n      anchorOrigin={menuOptions.anchorOrigin}\n      transformOrigin={menuOptions.transformOrigin}\n      elevation={3}\n      PaperProps={{\n        style: {\n          maxHeight: 350\n        }\n      }}\n    >\n      {options?.map(option => {\n        return (\n          <MenuItem key={option.key} onClick={option.onClick} disabled={option.disabled}>\n            <div className={classes.option}>\n              {option.icon}\n              {option.content}\n            </div>\n          </MenuItem>\n        );\n      })}\n    </Menu>\n  );\n});\n\nexport default MenuActions;\n","interface IRowMap {\n  [rowKey: string]: string;\n}\n\ninterface ICallback {\n  (rowMap: IRowMap): void;\n}\n\nexport function bindMutationObserver(table: HTMLTableElement, callback: ICallback) {\n  let timeout: any;\n\n  const handleMutation = () => {\n    clearTimeout(timeout);\n\n    timeout = setTimeout(() => {\n      const headerLabels = getTableHeaderLabels(table);\n\n      const hasLabels = !!Object.keys(headerLabels).length;\n      if (!hasLabels) return;\n\n      callback(headerLabels);\n    }, 300);\n  };\n\n  handleMutation();\n  const observer = new MutationObserver(handleMutation);\n  observer.observe(table, { childList: true, subtree: true });\n\n  return () => observer.disconnect();\n}\n\nfunction getTableHeaderLabels(table: HTMLTableElement): IRowMap {\n  const rows = Array.from(table.rows);\n\n  const columns = Array.from(rows.shift()?.cells).reduce((acc, column) => {\n    if (column.tagName.toLowerCase() !== 'th') {\n      return acc;\n    }\n\n    acc.push(column.textContent);\n    return acc;\n  }, []);\n\n  return rows.reduce((acc, row) => {\n    Array.from(row.cells).forEach((cell, index) => {\n      const key = cell.getAttribute('cell-key');\n\n      if (!key) return;\n      acc[key] = columns[index];\n    });\n\n    return acc;\n  }, {} as IRowMap);\n}\n","import createUseStyles from '@eduzz/houston-ui/styles/createUseStyles';\n\nexport interface IStyleParams {\n  maxHeight: number;\n}\n\nconst useStyles = createUseStyles(theme => ({\n  tableContainer: {\n    position: 'relative'\n  },\n\n  table: {\n    width: '100%',\n    borderSpacing: 0,\n\n    '& .table-label-mobile': {\n      display: 'none',\n      fontSize: theme.textSize('x-small'),\n      fontWeight: theme.fontWeight('semibold')\n    },\n\n    '& .table-collapse-button': {\n      transition: '.2s linear'\n    },\n\n    '& .table-collapse-button-opened': {\n      transform: 'rotate(-180deg)'\n    },\n\n    '& > tbody > tr > td': {\n      boxSizing: 'border-box'\n    },\n\n    '& > tbody > tr.table-row-even > td': {\n      backgroundColor: theme.colors.grey[100]\n    },\n\n    '& > tbody > tr.table-row-even + tr.table-collapse td': {\n      backgroundColor: 'transparent'\n    },\n\n    '& > tbody > tr.table-loader td': {\n      padding: 0\n    },\n\n    '& > tbody > tr.table-collapse > td': {\n      padding: 0\n    },\n\n    '& > tbody > tr.table-collapse:not(.table-collapse-opened) > td': {\n      border: 'none'\n    },\n\n    '& > tbody > tr.table-collapse:not(.table-collapse-no-padding) > td div.table-collapse-content': {\n      padding: theme.spacing(3)\n    },\n\n    '& > tbody > tr.table-collapse:not(.table-collapse-no-background) > td div.table-collapse-content': {\n      backgroundColor: theme.colors.grey[200]\n    },\n\n    '& > tbody > tr > td.table-action-cell': {\n      paddingRight: theme.spacing(3)\n    },\n\n    '& > tbody > tr > td.table-action-cell button + button': {\n      marginLeft: theme.spacing(1)\n    },\n\n    '& > thead > tr > th.column-align-left': {\n      textAlign: 'left'\n    },\n\n    '& > thead > tr > th.column-align-center': {\n      textAlign: 'center'\n    },\n\n    '& > thead > tr > th.column-align-right': {\n      textAlign: 'right'\n    },\n\n    '& > tbody > tr > td.cell-align-left': {\n      textAlign: 'left'\n    },\n\n    '& > tbody > tr > td.cell-align-center': {\n      textAlign: 'center'\n    },\n\n    '& > tbody > tr > td.cell-align-right': {\n      textAlign: 'right'\n    }\n  },\n\n  tableResponsive: {\n    display: 'block !important',\n\n    '& .table-label-mobile': {\n      display: 'block !important'\n    },\n\n    '& > thead': {\n      display: 'none'\n    },\n\n    '& > tbody, & > tfoot, , & > tfoot > tr, & > tfoot > tr > td': {\n      display: 'block'\n    },\n\n    '& > tbody > tr': {\n      display: 'flex',\n      width: `calc(100% - ${theme.spacing(4)})`,\n      flexWrap: 'wrap',\n      position: 'relative',\n      boxShadow: '0px 2px 1px rgba(0, 0, 0, 0.1)',\n      borderRadius: 3,\n      margin: theme.spacing(2),\n      marginTop: 0,\n      border: `1px solid ${theme.colors.grey[200]}`,\n      padding: theme.spacing(3),\n      paddingBottom: theme.spacing(1),\n      boxSizing: 'border-box'\n    },\n\n    '& > tbody > tr.table-collapse': {\n      padding: 0,\n      marginTop: (theme.spacing(2) + 2) * -1,\n      borderTopLeftRadius: 0,\n      borderTopRightRadius: 0,\n      boxShadow: 'none',\n      backgroundColor: 'white'\n    },\n\n    '& > tbody > tr.table-collapse-opened': {\n      boxShadow: '0px 2px 1px rgba(0, 0, 0, 0.1)'\n    },\n\n    '& > tbody > tr.table-collapse > td': {\n      marginBottom: 0\n    },\n\n    '& > tbody > tr.table-row-even': {\n      backgroundColor: theme.colors.grey[100]\n    },\n\n    '& > tbody > tr.table-row-even + tr.table-collapse': {\n      backgroundColor: theme.colors.grey[100],\n      border: 0\n    },\n\n    '& > tbody > tr.table-row-even > td': {\n      backgroundColor: 'transparent'\n    },\n\n    '& > tbody > tr.table-row-even + tr.table-collapse td': {\n      backgroundColor: 'transparent'\n    },\n\n    '& > tbody > tr.table-row-has-action, & > tbody > tr.table-row-has-collapse': {\n      paddingRight: 50,\n      '&:before': {\n        content: '\" \"',\n        display: 'block',\n        position: 'absolute',\n        borderLeft: `1px solid ${theme.colors.grey[200]}`,\n        right: 40,\n        top: 0,\n        bottom: 0\n      }\n    },\n\n    '& > tbody > tr > td.table-collapse-cell': {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: 'auto',\n      bottom: theme.spacing(1),\n      flexDirection: 'column',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      display: 'flex',\n      paddingRight: 0,\n      marginBottom: 0\n    },\n\n    '& > tbody > tr > td.table-action-cell': {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      bottom: 'auto',\n      flexDirection: 'column',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      display: 'flex',\n      paddingRight: 0,\n      marginBottom: 0\n    },\n\n    '& > tbody > tr > td.table-action-cell button + button': {\n      marginLeft: 0\n    },\n\n    '& > tbody > tr > td.table-action-cell button:first-child:not(:last-child)': {\n      alignSelf: 'flex-start'\n    },\n\n    '& > tbody > tr > td': {\n      boxSizing: 'border-box',\n      wordBreak: 'break-word',\n      padding: 0,\n      marginBottom: theme.spacing(2),\n      flex: 1,\n      border: 'none',\n      flexGrow: 0,\n      flexBasis: '100%',\n      maxWidth: '100%',\n      lineHeight: theme.lineHeight('compact')\n    },\n\n    '& > tbody > tr.table-loader': {\n      padding: 0,\n      paddingRight: 0,\n      '&:before': {\n        display: 'none'\n      }\n    },\n\n    '& > tbody > tr.table-empty-message': {\n      paddingRight: 0,\n      '&:before': {\n        display: 'none'\n      }\n    },\n\n    '& > tbody > tr.table-loader > td': {\n      marginBottom: 0\n    },\n\n    '& > tbody > tr > td.cell-mobile-align-left': {\n      textAlign: 'left'\n    },\n\n    '& > tbody > tr > td.cell-mobile-align-center': {\n      textAlign: 'center'\n    },\n\n    '& > tbody > tr > td.cell-mobile-align-right': {\n      textAlign: 'right'\n    },\n\n    '& > tbody > tr > td.cell-size-true': {\n      flexGrow: 1,\n      flexBasis: 0,\n      maxWidth: '100%'\n    },\n\n    '& > tbody > tr > td.cell-size-0': {\n      display: 'none'\n    },\n\n    ...new Array(12).fill('a').reduce((acc, _, index) => {\n      const size = index + 1;\n      const percent = `${(size / 12) * 100}%`;\n\n      return {\n        ...acc,\n        [`& > tbody > tr > td.cell-size-${size}`]: {\n          flexGrow: 0,\n          maxWidth: percent,\n          flexBasis: percent\n        }\n      };\n    }, {})\n  }\n}));\n\nexport default useStyles;\n","import * as React from 'react';\n\nimport { Size, TableProps } from '@material-ui/core/Table';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport clsx from 'clsx';\nimport { useContextSelector } from 'use-context-selector';\n\nimport useBoolean from '@eduzz/houston-hooks/useBoolean';\nimport withHoustonTheme from '@eduzz/houston-ui/styles/ThemeProvider/WrapperTheme';\n\nimport MenuActions from './Action/Menu';\nimport TableCollapseContext from './CollapseContent/context';\nimport TableContext, { ITableActionShow, ITableContext, ITableRow } from './context';\nimport { ITableSort } from './interface';\nimport { bindMutationObserver } from './observer';\nimport useStyles from './styles';\n\nlet columnsKeyIncrementer = 0,\n  rowKeyIncremeter = 0;\n\nexport interface ITableProps extends Pick<TableProps, 'id' | 'children' | 'className'> {\n  loading?: boolean;\n  loadingText?: React.ReactNode;\n  sort?: ITableSort;\n  /**\n   * Function called when clicking on an ordered column\n   */\n  onSort?: (ordernation: ITableSort) => void;\n  /**\n   * Default `medium`\n   */\n  size?: Size;\n  /**\n   * Max Height table container\n   */\n  maxHeight?: number;\n  stripedRows?: boolean;\n  columnActionTitle?: string;\n  mobileWidth?: number | boolean;\n}\n\nconst Table: React.FC<ITableProps> = props => {\n  const {\n    size = 'medium',\n    id,\n    children,\n    loading,\n    sort,\n    onSort,\n    maxHeight,\n    stripedRows,\n    columnActionTitle,\n    className,\n    loadingText\n  } = props;\n\n  const classes = useStyles();\n\n  const isCollapseContent = useContextSelector(TableCollapseContext, context => context.isCollapseContent);\n\n  const tableRef = React.useRef<HTMLTableElement>();\n  const mediaQueryMobile = useMediaQuery(`(max-width: ${props.mobileWidth ?? 600}px)`);\n  const responsive = typeof props.mobileWidth === 'boolean' ? props.mobileWidth : mediaQueryMobile;\n\n  const [openedMenuActions, , openMenuActions, closeMenuActions] = useBoolean(false);\n  const [menuActionOptions, setMenuActionOptions] = React.useState<ITableActionShow>();\n\n  const [rowMapLabel, setRowMapLabel] = React.useState<{ [rowKey: string]: string }>({});\n  const [columns, setColumns] = React.useState<string[]>(() => []);\n  const [rows, setRows] = React.useState<ITableRow[]>([]);\n\n  const onShowAction = React.useCallback(\n    (data: ITableActionShow) => {\n      setMenuActionOptions(data);\n      openMenuActions();\n    },\n    [openMenuActions]\n  );\n\n  const registerColumn = React.useCallback(() => {\n    const key = `column-${++columnsKeyIncrementer}`;\n    setColumns(columns => [...columns, key]);\n    return () => setColumns(columns => columns.filter(c => c != key));\n  }, []);\n\n  const registerRow = React.useCallback((row: Omit<ITableRow, 'key'>) => {\n    const key = `table-row-${++rowKeyIncremeter}`;\n    setRows(rows => [...rows, { key, ...row }]);\n    return () => setRows(rows => rows.filter(r => r.key !== key));\n  }, []);\n\n  const hasCollapseInRows = React.useMemo(\n    () => !isCollapseContent && rows?.some(r => r.hasCollapse),\n    [isCollapseContent, rows]\n  );\n\n  const hasActionInRows = React.useMemo(() => rows?.some(r => r.hasActions), [rows]);\n\n  React.useEffect(() => {\n    const unbind = bindMutationObserver(tableRef?.current, rowMap => setRowMapLabel(rowMap));\n    return () => unbind();\n  }, []);\n\n  const contextValue = React.useMemo<ITableContext>(\n    () => ({\n      loading: loading ?? false,\n      loadingText: loadingText ?? 'Carregando...',\n      sort,\n      onSort,\n      onShowAction,\n      registerColumn,\n      rowMapLabel,\n      columns,\n      rows,\n      registerRow,\n      stripedRows,\n      columnActionTitle,\n      size: isCollapseContent ? 'small' : size,\n      hasCollapseInRows,\n      hasActionInRows,\n      isCollapseContent\n    }),\n    [\n      loading,\n      loadingText,\n      sort,\n      onSort,\n      onShowAction,\n      registerColumn,\n      rowMapLabel,\n      columns,\n      rows,\n      registerRow,\n      stripedRows,\n      columnActionTitle,\n      isCollapseContent,\n      size,\n      hasCollapseInRows,\n      hasActionInRows\n    ]\n  );\n\n  return (\n    <TableContext.Provider value={contextValue}>\n      <TableContainer className={classes.tableContainer} style={{ maxHeight }}>\n        <table id={id} ref={tableRef} className={clsx(classes.table, responsive && classes.tableResponsive, className)}>\n          {children}\n\n          <MenuActions\n            open={openedMenuActions}\n            anchorEl={menuActionOptions?.anchorEl}\n            options={menuActionOptions?.actions}\n            rowData={menuActionOptions?.rowData}\n            rowIndex={menuActionOptions?.rowIndex}\n            onClose={closeMenuActions}\n          />\n        </table>\n      </TableContainer>\n    </TableContext.Provider>\n  );\n};\n\nexport default withHoustonTheme(React.memo(Table));\n","import nestedComponent from '@eduzz/houston-ui/Helpers/nestedComponent';\n\nimport Action from './Action';\nimport Body from './Body';\nimport Cell from './Cell';\nimport Collapse from './Collapse';\nimport Column from './Column';\nimport Empty from './Empty';\nimport Error from './Error';\nimport Header from './Header';\nimport Pagination from './Pagination';\nimport Row from './Row';\nimport Table from './Table';\n\nexport default nestedComponent(Table, {\n  Body,\n  Cell,\n  Column,\n  Collapse,\n  Empty,\n  Header,\n  Row,\n  Error,\n  Pagination,\n  Action\n});\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/github/workspace/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { useState, useCallback } from 'react';\nimport { Playground } from 'docz';\nimport faker from 'faker/locale/pt_BR';\nimport { of } from 'rxjs';\nimport { delay, map } from 'rxjs/operators';\nimport useObservablePaginated from '@eduzz/houston-hooks/useObservablePaginated';\nimport Table from './index.tsx';\nexport const salesService = (() => {\n  const data = new Array(100).fill('a').map((_, index) => ({\n    id: index + 1,\n    name: `${faker.name.firstName()} ${faker.name.lastName()}`,\n    email: faker.internet.email().toLowerCase(),\n    price: faker.commerce.price()\n  }));\n  return {\n    list: params => {\n      return of(data).pipe(map(data => {\n        let result = data;\n\n        if (params.sort) {\n          result = result.sort((a, b) => {\n            if (a[params.sort.field] > b[params.sort.field]) return params.sort.direction === 'asc' ? 1 : -1;\n            if (a[params.sort.field] == b[params.sort.field]) return 0;\n            return params.sort.direction === 'asc' ? -1 : 1;\n          });\n        }\n\n        const start = (params.page - 1) * params.perPage;\n        return result.slice(start, start + params.perPage);\n      }), delay(500), map(result => ({\n        total: data.length,\n        result\n      })));\n    },\n    listWithError: () => of(true).pipe(map(() => new Error('Opá!')))\n  };\n})();\nexport const _frontmatter = {};\nconst layoutProps = {\n  salesService,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n\n\n\n    <h1 {...{\n      \"id\": \"tabela\"\n    }}>{`Tabela`}</h1>\n    <p>{`Tabelas apresentam informações de uma forma fácil de visualizar, de modo que os usuários podem\nprocurar por padrões e percepções.`}</p>\n    <h3 {...{\n      \"id\": \"importação\"\n    }}>{`Importação`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import Table from '@eduzz/houston-ui/Table';\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"tabela-simples\"\n    }}>{`Tabela simples`}</h3>\n    <Playground __position={0} __code={'() => {\\n  const [sort, setSort] = useState(null)\\n  const [page, setPage] = useState(1)\\n  const [perPage, setPerPage] = useState(10)\\n  const [rows, setRows] = useState(() => {\\n    return new Array(5).fill(\\'a\\').map((_, index) => ({\\n      id: index + 1,\\n      name: `${faker.name.firstName()} ${faker.name.lastName()}`,\\n      email: faker.internet.email().toLowerCase(),\\n      price: faker.commerce.price(),\\n    }))\\n  })\\n  const onSort = useCallback(data => {\\n    setSort(data)\\n    setRows(rows => {\\n      return rows.sort((a, b) => {\\n        if (a[data.field] > b[data.field])\\n          return data.direction === \\'asc\\' ? 1 : -1\\n        if (a[data.field] == b[data.field]) return 0\\n        return data.direction === \\'asc\\' ? -1 : 1\\n      })\\n    })\\n  }, [])\\n  return (\\n    <Table stripedRows sort={sort} onSort={onSort}>\\n      <Table.Header>\\n        <Table.Column width={50} sortableField=\\\"id\\\">\\n          #\\n        </Table.Column>\\n        <Table.Column sortableField=\\\"name\\\">Nome</Table.Column>\\n        <Table.Column sortableField=\\\"email\\\">Email</Table.Column>\\n        <Table.Column align=\\\"right\\\">Valor</Table.Column>\\n      </Table.Header>\\n      <Table.Body>\\n        <Table.Empty count={rows.length} />\\n        {rows.map((row, index) => (\\n          <Table.Row data={row} index={index} key={row.id}>\\n            <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\\n            <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\\n            <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\\n            <Table.Cell mobileSize={6} align=\\\"right\\\">\\n              {row.price}\\n            </Table.Cell>\\n          </Table.Row>\\n        ))}\\n      </Table.Body>\\n      <Table.Pagination\\n        page={page}\\n        perPage={perPage}\\n        total={100}\\n        onChangePage={setPage}\\n        onChangePerPage={setPerPage}\\n      />\\n    </Table>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      useCallback,\n      Playground,\n      faker,\n      of,\n      delay,\n      map,\n      useObservablePaginated,\n      Table,\n      DefaultLayout,\n      salesService,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [sort, setSort] = useState(null);\n        const [page, setPage] = useState(1);\n        const [perPage, setPerPage] = useState(10);\n        const [rows, setRows] = useState(() => {\n          return new Array(5).fill('a').map((_, index) => ({\n            id: index + 1,\n            name: `${faker.name.firstName()} ${faker.name.lastName()}`,\n            email: faker.internet.email().toLowerCase(),\n            price: faker.commerce.price()\n          }));\n        });\n        const onSort = useCallback(data => {\n          setSort(data);\n          setRows(rows => {\n            return rows.sort((a, b) => {\n              if (a[data.field] > b[data.field]) return data.direction === 'asc' ? 1 : -1;\n              if (a[data.field] == b[data.field]) return 0;\n              return data.direction === 'asc' ? -1 : 1;\n            });\n          });\n        }, []);\n        return <Table stripedRows sort={sort} onSort={onSort} mdxType=\"Table\">\n        <Table.Header>\n          <Table.Column width={50} sortableField='id'>\n            #\n          </Table.Column>\n          <Table.Column sortableField='name'>Nome</Table.Column>\n          <Table.Column sortableField='email'>Email</Table.Column>\n          <Table.Column align='right'>Valor</Table.Column>\n        </Table.Header>\n        <Table.Body>\n          <Table.Empty count={rows.length} />\n          {rows.map((row, index) => <Table.Row data={row} index={index} key={row.id}>\n              <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\n              <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\n              <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\n              <Table.Cell mobileSize={6} align='right'>\n                {row.price}\n              </Table.Cell>\n            </Table.Row>)}\n        </Table.Body>\n        <Table.Pagination page={page} perPage={perPage} total={100} onChangePage={setPage} onChangePerPage={setPerPage} />\n      </Table>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"collapse-e-actions\"\n    }}>{`Collapse e Actions`}</h3>\n    <Playground __position={1} __code={'() => {\\n  const [sort, setSort] = useState(null)\\n  const [page, setPage] = useState(1)\\n  const [perPage, setPerPage] = useState(10)\\n  const [rows, setRows] = useState(() => {\\n    return new Array(5).fill(\\'a\\').map((_, index) => ({\\n      id: index + 1,\\n      name: `${faker.name.firstName()} ${faker.name.lastName()}`,\\n      email: faker.internet.email().toLowerCase(),\\n      price: faker.commerce.price(),\\n    }))\\n  })\\n  const onSort = useCallback(data => {\\n    setSort(data)\\n    setRows(rows => {\\n      return rows.sort((a, b) => {\\n        if (a[data.field] > b[data.field])\\n          return data.direction === \\'asc\\' ? 1 : -1\\n        if (a[data.field] == b[data.field]) return 0\\n        return data.direction === \\'asc\\' ? -1 : 1\\n      })\\n    })\\n  }, [])\\n  const onEdit = useCallback((data, index) => {\\n    alert(\\n      `Você recebera o data e o index:\\\\n${JSON.stringify(\\n        { data, index },\\n        null,\\n        2,\\n      )}`,\\n    )\\n  }, [])\\n  return (\\n    <Table stripedRows sort={sort} onSort={onSort}>\\n      <Table.Header>\\n        <Table.Column width={50} sortableField=\\\"id\\\">\\n          #\\n        </Table.Column>\\n        <Table.Column sortableField=\\\"name\\\">Nome</Table.Column>\\n        <Table.Column sortableField=\\\"email\\\">Email</Table.Column>\\n        <Table.Column align=\\\"right\\\">Valor</Table.Column>\\n      </Table.Header>\\n      <Table.Body>\\n        <Table.Empty count={rows.length} />\\n        {rows.map((row, index) => (\\n          <Table.Row data={row} index={index} key={row.id}>\\n            <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\\n            <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\\n            <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\\n            <Table.Cell mobileSize={6} align=\\\"right\\\">\\n              {row.price}\\n            </Table.Cell>\\n            <Table.Action onClick={onEdit}>Editar</Table.Action>\\n            <Table.Collapse>Olá!</Table.Collapse>\\n          </Table.Row>\\n        ))}\\n      </Table.Body>\\n      <Table.Pagination\\n        page={page}\\n        perPage={perPage}\\n        total={100}\\n        onChangePage={setPage}\\n        onChangePerPage={setPerPage}\\n      />\\n    </Table>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      useCallback,\n      Playground,\n      faker,\n      of,\n      delay,\n      map,\n      useObservablePaginated,\n      Table,\n      DefaultLayout,\n      salesService,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [sort, setSort] = useState(null);\n        const [page, setPage] = useState(1);\n        const [perPage, setPerPage] = useState(10);\n        const [rows, setRows] = useState(() => {\n          return new Array(5).fill('a').map((_, index) => ({\n            id: index + 1,\n            name: `${faker.name.firstName()} ${faker.name.lastName()}`,\n            email: faker.internet.email().toLowerCase(),\n            price: faker.commerce.price()\n          }));\n        });\n        const onSort = useCallback(data => {\n          setSort(data);\n          setRows(rows => {\n            return rows.sort((a, b) => {\n              if (a[data.field] > b[data.field]) return data.direction === 'asc' ? 1 : -1;\n              if (a[data.field] == b[data.field]) return 0;\n              return data.direction === 'asc' ? -1 : 1;\n            });\n          });\n        }, []);\n        const onEdit = useCallback((data, index) => {\n          alert(`Você recebera o data e o index:\\n${JSON.stringify({\n            data,\n            index\n          }, null, 2)}`);\n        }, []);\n        return <Table stripedRows sort={sort} onSort={onSort} mdxType=\"Table\">\n        <Table.Header>\n          <Table.Column width={50} sortableField='id'>\n            #\n          </Table.Column>\n          <Table.Column sortableField='name'>Nome</Table.Column>\n          <Table.Column sortableField='email'>Email</Table.Column>\n          <Table.Column align='right'>Valor</Table.Column>\n        </Table.Header>\n        <Table.Body>\n          <Table.Empty count={rows.length} />\n          {rows.map((row, index) => <Table.Row data={row} index={index} key={row.id}>\n              <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\n              <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\n              <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\n              <Table.Cell mobileSize={6} align='right'>\n                {row.price}\n              </Table.Cell>\n              <Table.Action onClick={onEdit}>Editar</Table.Action>\n              <Table.Collapse>Olá!</Table.Collapse>\n            </Table.Row>)}\n        </Table.Body>\n        <Table.Pagination page={page} perPage={perPage} total={100} onChangePage={setPage} onChangePerPage={setPerPage} />\n      </Table>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"responsivo\"\n    }}>{`Responsivo`}</h3>\n    <Playground __position={2} __code={'() => {\\n  const [sort, setSort] = useState(null)\\n  const [page, setPage] = useState(1)\\n  const [perPage, setPerPage] = useState(10)\\n  const [rows, setRows] = useState(() => {\\n    return new Array(5).fill(\\'a\\').map((_, index) => ({\\n      id: index + 1,\\n      name: `${faker.name.firstName()} ${faker.name.lastName()}`,\\n      email: faker.internet.email().toLowerCase(),\\n      price: faker.commerce.price(),\\n    }))\\n  })\\n  const onSort = useCallback(data => {\\n    setSort(data)\\n    setRows(rows => {\\n      return rows.sort((a, b) => {\\n        if (a[data.field] > b[data.field])\\n          return data.direction === \\'asc\\' ? 1 : -1\\n        if (a[data.field] == b[data.field]) return 0\\n        return data.direction === \\'asc\\' ? -1 : 1\\n      })\\n    })\\n  }, [])\\n  const onEdit = useCallback((data, index) => {\\n    alert(\\n      `Você recebera o data e o index:\\\\n${JSON.stringify(\\n        { data, index },\\n        null,\\n        2,\\n      )}`,\\n    )\\n  }, [])\\n  return (\\n    <Table stripedRows mobileWidth={true} sort={sort} onSort={onSort}>\\n      <Table.Header>\\n        <Table.Column width={50} sortableField=\\\"id\\\">\\n          #\\n        </Table.Column>\\n        <Table.Column sortableField=\\\"name\\\">Nome</Table.Column>\\n        <Table.Column sortableField=\\\"email\\\">Email</Table.Column>\\n        <Table.Column align=\\\"right\\\">Valor</Table.Column>\\n      </Table.Header>\\n      <Table.Body>\\n        <Table.Empty count={rows.length} />\\n        {rows.map((row, index) => (\\n          <Table.Row data={row} index={index} key={row.id}>\\n            <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\\n            <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\\n            <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\\n            <Table.Cell mobileSize={6} align=\\\"right\\\">\\n              {row.price}\\n            </Table.Cell>\\n            <Table.Action onClick={onEdit}>Editar</Table.Action>\\n            <Table.Collapse>Olá!</Table.Collapse>\\n          </Table.Row>\\n        ))}\\n      </Table.Body>\\n      <Table.Pagination\\n        page={page}\\n        perPage={perPage}\\n        total={100}\\n        onChangePage={setPage}\\n        onChangePerPage={setPerPage}\\n      />\\n    </Table>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      useCallback,\n      Playground,\n      faker,\n      of,\n      delay,\n      map,\n      useObservablePaginated,\n      Table,\n      DefaultLayout,\n      salesService,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [sort, setSort] = useState(null);\n        const [page, setPage] = useState(1);\n        const [perPage, setPerPage] = useState(10);\n        const [rows, setRows] = useState(() => {\n          return new Array(5).fill('a').map((_, index) => ({\n            id: index + 1,\n            name: `${faker.name.firstName()} ${faker.name.lastName()}`,\n            email: faker.internet.email().toLowerCase(),\n            price: faker.commerce.price()\n          }));\n        });\n        const onSort = useCallback(data => {\n          setSort(data);\n          setRows(rows => {\n            return rows.sort((a, b) => {\n              if (a[data.field] > b[data.field]) return data.direction === 'asc' ? 1 : -1;\n              if (a[data.field] == b[data.field]) return 0;\n              return data.direction === 'asc' ? -1 : 1;\n            });\n          });\n        }, []);\n        const onEdit = useCallback((data, index) => {\n          alert(`Você recebera o data e o index:\\n${JSON.stringify({\n            data,\n            index\n          }, null, 2)}`);\n        }, []);\n        return <Table stripedRows mobileWidth={true} sort={sort} onSort={onSort} mdxType=\"Table\">\n        <Table.Header>\n          <Table.Column width={50} sortableField='id'>\n            #\n          </Table.Column>\n          <Table.Column sortableField='name'>Nome</Table.Column>\n          <Table.Column sortableField='email'>Email</Table.Column>\n          <Table.Column align='right'>Valor</Table.Column>\n        </Table.Header>\n        <Table.Body>\n          <Table.Empty count={rows.length} />\n          {rows.map((row, index) => <Table.Row data={row} index={index} key={row.id}>\n              <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\n              <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\n              <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\n              <Table.Cell mobileSize={6} align='right'>\n                {row.price}\n              </Table.Cell>\n              <Table.Action onClick={onEdit}>Editar</Table.Action>\n              <Table.Collapse>Olá!</Table.Collapse>\n            </Table.Row>)}\n        </Table.Body>\n        <Table.Pagination page={page} perPage={perPage} total={100} onChangePage={setPage} onChangePerPage={setPerPage} />\n      </Table>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"sem-dados\"\n    }}>{`Sem dados`}</h3>\n    <p>{`Mensagens customizadas para eventos internos.`}</p>\n    <Playground __position={3} __code={'<Table>\\n  <Table.Header>\\n    <Table.Column>ID</Table.Column>\\n    <Table.Column>Produto</Table.Column>\\n    <Table.Column>Produtor</Table.Column>\\n    <Table.Column align=\\\"right\\\">Valor</Table.Column>\\n  </Table.Header>\\n  <Table.Body>\\n    <Table.Empty count={0} />\\n    <Table.Empty count={0}>Realmente isso está vazio</Table.Empty>\\n  </Table.Body>\\n</Table>'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      useCallback,\n      Playground,\n      faker,\n      of,\n      delay,\n      map,\n      useObservablePaginated,\n      Table,\n      DefaultLayout,\n      salesService,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Table mdxType=\"Table\">\n    <Table.Header>\n      <Table.Column>ID</Table.Column>\n      <Table.Column>Produto</Table.Column>\n      <Table.Column>Produtor</Table.Column>\n      <Table.Column align='right'>Valor</Table.Column>\n    </Table.Header>\n    <Table.Body>\n      <Table.Empty count={0} />\n      <Table.Empty count={0}>Realmente isso está vazio</Table.Empty>\n    </Table.Body>\n  </Table>\n    </Playground>\n    <h3 {...{\n      \"id\": \"usando-um-observable\"\n    }}>{`Usando um Observable`}</h3>\n    <p>{`Você pode de uma maneira fácil utizar o hook `}<strong parentName=\"p\">{`useObservablePaginated`}</strong>{` do `}<strong parentName=\"p\">{`@eduzz/houston-hooks`}</strong>{`:`}</p>\n    <Playground __position={4} __code={'() => {\\n  const {\\n    params,\\n    handleChangePage,\\n    handleChangePerPage,\\n    handleSort,\\n    result,\\n    total,\\n    isLoading,\\n  } = useObservablePaginated(\\n    {\\n      initialParams: { perPage: 5 },\\n      onChangeParams: params => salesService.list(params),\\n    },\\n    [],\\n  )\\n  return (\\n    <Table\\n      stripedRows\\n      sort={params.sort}\\n      onSort={handleSort}\\n      loading={isLoading}\\n    >\\n      <Table.Header>\\n        <Table.Column width={50} sortableField=\\\"id\\\">\\n          #\\n        </Table.Column>\\n        <Table.Column sortableField=\\\"name\\\">Nome</Table.Column>\\n        <Table.Column sortableField=\\\"email\\\">Email</Table.Column>\\n        <Table.Column align=\\\"right\\\">Valor</Table.Column>\\n      </Table.Header>\\n      <Table.Body>\\n        <Table.Empty count={result.length} />\\n        {result.map((row, index) => (\\n          <Table.Row data={row} index={index} key={row.id}>\\n            <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\\n            <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\\n            <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\\n            <Table.Cell mobileSize={6} align=\\\"right\\\">\\n              {row.price}\\n            </Table.Cell>\\n          </Table.Row>\\n        ))}\\n      </Table.Body>\\n      <Table.Pagination\\n        page={params.page}\\n        perPage={params.perPage}\\n        total={total}\\n        onChangePage={handleChangePage}\\n        onChangePerPage={handleChangePerPage}\\n      />\\n    </Table>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      useCallback,\n      Playground,\n      faker,\n      of,\n      delay,\n      map,\n      useObservablePaginated,\n      Table,\n      DefaultLayout,\n      salesService,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const {\n          params,\n          handleChangePage,\n          handleChangePerPage,\n          handleSort,\n          result,\n          total,\n          isLoading\n        } = useObservablePaginated({\n          initialParams: {\n            perPage: 5\n          },\n          onChangeParams: params => salesService.list(params)\n        }, []);\n        return <Table stripedRows sort={params.sort} onSort={handleSort} loading={isLoading} mdxType=\"Table\">\n        <Table.Header>\n          <Table.Column width={50} sortableField='id'>\n            #\n          </Table.Column>\n          <Table.Column sortableField='name'>Nome</Table.Column>\n          <Table.Column sortableField='email'>Email</Table.Column>\n          <Table.Column align='right'>Valor</Table.Column>\n        </Table.Header>\n        <Table.Body>\n          <Table.Empty count={result.length} />\n          {result.map((row, index) => <Table.Row data={row} index={index} key={row.id}>\n              <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\n              <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\n              <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\n              <Table.Cell mobileSize={6} align='right'>\n                {row.price}\n              </Table.Cell>\n            </Table.Row>)}\n        </Table.Body>\n        <Table.Pagination page={params.page} perPage={params.perPage} total={total} onChangePage={handleChangePage} onChangePerPage={handleChangePerPage} />\n      </Table>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"tratando-errors\"\n    }}>{`Tratando Errors`}</h3>\n    <p>{`É possivel tratar os erros de uma maneira fácil apenas passando ele o `}<strong parentName=\"p\">{`Table.Error`}</strong></p>\n    <Playground __position={5} __code={'() => {\\n  const { error, isLoading, result, retry } = useObservablePaginated(\\n    { onChangeParams: () => salesService.listWithError() },\\n    [],\\n  )\\n  const errorFormater = React.useCallback(err => \\'Apenas um erro cara, rlx!\\')\\n  return (\\n    <Table stripedRows loading={isLoading}>\\n      <Table.Header>\\n        <Table.Column width={50} sortableField=\\\"id\\\">\\n          #\\n        </Table.Column>\\n        <Table.Column sortableField=\\\"name\\\">Nome</Table.Column>\\n        <Table.Column sortableField=\\\"email\\\">Email</Table.Column>\\n        <Table.Column align=\\\"right\\\">Valor</Table.Column>\\n      </Table.Header>\\n      <Table.Body>\\n        <Table.Error error={error} />\\n        <Table.Error error={error} formater={errorFormater} />\\n        <Table.Error error={error} formater={errorFormater} onRetry={retry} />\\n        {result.map((row, index) => (\\n          <Table.Row data={row} index={index} key={row.id}>\\n            <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\\n            <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\\n            <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\\n            <Table.Cell mobileSize={6} align=\\\"right\\\">\\n              {row.price}\\n            </Table.Cell>\\n          </Table.Row>\\n        ))}\\n      </Table.Body>\\n    </Table>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      useCallback,\n      Playground,\n      faker,\n      of,\n      delay,\n      map,\n      useObservablePaginated,\n      Table,\n      DefaultLayout,\n      salesService,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const {\n          error,\n          isLoading,\n          result,\n          retry\n        } = useObservablePaginated({\n          onChangeParams: () => salesService.listWithError()\n        }, []);\n        const errorFormater = React.useCallback(err => 'Apenas um erro cara, rlx!');\n        return <Table stripedRows loading={isLoading} mdxType=\"Table\">\n        <Table.Header>\n          <Table.Column width={50} sortableField='id'>\n            #\n          </Table.Column>\n          <Table.Column sortableField='name'>Nome</Table.Column>\n          <Table.Column sortableField='email'>Email</Table.Column>\n          <Table.Column align='right'>Valor</Table.Column>\n        </Table.Header>\n        <Table.Body>\n          <Table.Error error={error} />\n          <Table.Error error={error} formater={errorFormater} />\n          <Table.Error error={error} formater={errorFormater} onRetry={retry} />\n          {result.map((row, index) => <Table.Row data={row} index={index} key={row.id}>\n              <Table.Cell mobileSize={1}>{row.id}.</Table.Cell>\n              <Table.Cell mobileSize={11}>{row.name}</Table.Cell>\n              <Table.Cell mobileSize={6}>{row.email}</Table.Cell>\n              <Table.Cell mobileSize={6} align='right'>\n                {row.price}\n              </Table.Cell>\n            </Table.Row>)}\n        </Table.Body>\n      </Table>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"propriedades-disponíveis\"\n    }}>{`Propriedades disponíveis`}</h3>\n    <h3 {...{\n      \"id\": \"table-props\"\n    }}>{`Table props`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tipo`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`obrigatório`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`padrão`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`descrição`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`loading`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`loadingText`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`React.ReactNode`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Carregando...`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`sort`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ITableSort`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Valor atual do sort`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onSort`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`function`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Função chamada ao clicar em uma coluna com `}<inlineCode parentName=\"td\">{`sortableField`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`size`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Size`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`medium`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`maxHeight`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`stripedRows`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`columnActionTitle`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Ações`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Label da coluna de ações e collapse`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`mobileWidth`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number/boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`600`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Tamanho da tela que a tabela irá para o modo mobile, se false a tabela permanecerá sempre uma table`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"tablecolumn-props\"\n    }}>{`Table.Column props`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tipo`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`obrigatório`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`padrão`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`descrição`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`sortableField`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Campo referência para o sort`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`width`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`align`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ITableAlign`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`left`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"tablerow-props\"\n    }}>{`Table.Row props`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tipo`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`obrigatório`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`padrão`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`descrição`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`data`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`any`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Valores da linha, é necessário para o componente `}<inlineCode parentName=\"td\">{`Table.Action`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`index`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`numer`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Index da linha, é necessário para o componente `}<inlineCode parentName=\"td\">{`Table.Action`}</inlineCode>{`.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"tablecell-props\"\n    }}>{`Table.Cell props`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tipo`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`obrigatório`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`padrão`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`descrição`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`align`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ITableAlign`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`left`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`colSpan`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`mobileSize`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`GridSize/boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`auto`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Grid system que cada celula irá seguir no modo mobile`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`mobileAlign`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ITableAlign`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`left`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`columnLabel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Padrão Header`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Existe um processo para pegar o label do header, mas caso queria mudar basta passar um valor`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"tableoption-props\"\n    }}>{`Table.Option props`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tipo`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`obrigatório`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`padrão`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`descrição`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onClick`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(row: data, index: number) => void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`disabled`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`order`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Seguirá o padrão do render, caso tenha alguma opção condicional, pode embralhar a ordem, nesse caso passe o order`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`icon`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`React.ReactNode`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"tablepagination-props\"\n    }}>{`Table.Pagination props`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tipo`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`obrigatório`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`padrão`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`descrição`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}></th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`page`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`perPage`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`total`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optionsPerPage`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\\`number[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string\\``}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`[5, 10, 25, 50]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Pode ser passado uma string separado por virgula, para diminuir o número de render`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`labelItensPerPage`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`React.ReactNode`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Itens por página:`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`labelGoToPage`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`React.ReactNode`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Ir para:`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onChangePage`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(page: number) => void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onChangePerPage`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(perPage: number) => void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"tablecollapse-props\"\n    }}>{`Table.Collapse props`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tipo`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`obrigatório`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`padrão`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`descrição`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onOpen`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(data: unknown, index: number) => void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Função chamada ao abrir.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onClose`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(data: unknown, index: number) => void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Função chamada ao fechar.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`disabled`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`disabledPadding`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Desabilita o padding interno`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`disableBackground`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Desabilita o bacgrkound interno`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}