{"version":3,"sources":["webpack:///../packages/forms/README.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","alt","src","isMDXComponent"],"mappings":"uPAQaA,G,UAAe,S,2MAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,kBACE,GAAM,iBADR,iBAGA,qBAAG,iBAAGC,WAAW,IACb,KAAQ,sDACP,mBAAKC,IAAI,UAAUC,IAAI,8DAF5B,KAGF,iBAAGF,WAAW,IACR,KAAQ,sDACP,mBAAKC,IAAI,OAAOC,IAAI,kEALzB,6BAMsB,sBAAQF,WAAW,KAAnB,gBANtB,mGAQA,kBACE,GAAM,eADR,eAGA,sBACE,kBAAIA,WAAW,MAAf,UACA,kBAAIA,WAAW,MAAf,OACA,kBAAIA,WAAW,MAAf,SAEF,kBACE,GAAM,aADR,aAGA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,sbAeL,kBACE,GAAM,aADR,aAGA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,8kBA2BL,kBACE,GAAM,UADR,UAGA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,cAGA,kBAAIA,WAAW,KACb,MAAS,MADX,QAGA,kBAAIA,WAAW,KACb,MAAS,MADX,eAGA,kBAAIA,WAAW,KACb,MAAS,MADX,eAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,iBAGA,kBAAIA,WAAW,KACb,MAAS,MADX,oDAGA,kBAAIA,WAAW,KACb,MAAS,MADX,SAGA,kBAAIA,WAAW,KACb,MAAS,QAGb,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,oBAGA,kBAAIA,WAAW,KACb,MAAS,MADX,uCAGA,kBAAIA,WAAW,KACb,MAAS,MADX,SAGA,kBAAIA,WAAW,KACb,MAAS,QAGb,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,sBAGA,kBAAIA,WAAW,KACb,MAAS,OAEX,kBAAIA,WAAW,KACb,MAAS,OAEX,kBAAIA,WAAW,KACb,MAAS,QAGb,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,YAGA,kBAAIA,WAAW,KACb,MAAS,OAEX,kBAAIA,WAAW,KACb,MAAS,OAEX,kBAAIA,WAAW,KACb,MAAS,gB,yMASrBJ,EAAWO,gBAAiB","file":"component---packages-forms-readme-mdx-5c56cb4a525d38cafdb3.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/github/workspace/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"houston-forms\"\n    }}>{`Houston Forms`}</h1>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/@eduzz/houston-forms\"\n      }}><img alt=\"version\" src=\"https://img.shields.io/npm/v/@eduzz/@eduzz/houston-forms\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/@eduzz/houston-forms\"\n      }}><img alt=\"size\" src=\"https://img.shields.io/bundlephobia/min/@eduzz/houston-forms\" /></a>{`\nImplementação padrão do `}<strong parentName=\"p\">{`IFormAdapter`}</strong>{` do houston para validação de formulário, foi criado para\nser compatível com retornos do RxJs.`}</p>\n    <h3 {...{\n      \"id\": \"técnologias\"\n    }}>{`Técnologias`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Formik`}</li>\n      <li parentName=\"ul\">{`Yup`}</li>\n      <li parentName=\"ul\">{`RxJs`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"interface\"\n    }}>{`Interface`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`interface IFormAdapter<V extends { [key: string]: any }> {\n  handleSubmit?: (event: any) => void;\n  handleChange?: (name: string) => (value: any) => void;\n  handleReset?: () => void;\n  getFieldValue?: (name: string) => any;\n  setFieldValue?: (name: string, value: any) => void;\n  getFieldError: (name: string) => string;\n  values: Partial<V>;\n  isSubmitting: boolean;\n  isValid: boolean;\n  reset: (values?: V) => void;\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"como-usar\"\n    }}>{`Como usar`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`interface IModel {\n  // optional\n  name: string;\n  money: number;\n  option: number;\n  check: boolean;\n}\n\nconst form = useForm<IModel>({\n  initialValues: { money: 5 }, // optional\n  validationSchema: yup =>\n    yup.object().shape({\n      name: yup.string().required(),\n      money: yup.number().min(10),\n      option: yup.number().min(3),\n      check: yup.bool().required().equals([true])\n    }),\n  onSubmit: () => {\n    // Pode retornar uma promise, observable ou\n    return new Promise(resolve => {\n      setTimeout(() => resolve(null), 3000);\n    });\n  }\n});\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"opções\"\n    }}>{`Opções`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Parametros`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Tipo`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Obrigatório`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Descrição`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`initialValues`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Partial do que for passado no Generic do useForm`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`validationSchema`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Função geradora do validationSchema`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onSubmitWithErrors`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onSubmit`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}