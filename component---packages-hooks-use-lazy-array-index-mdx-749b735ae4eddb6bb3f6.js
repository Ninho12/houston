(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{ZHzo:function(e,a,t){"use strict";t.r(a),t.d(a,"_frontmatter",(function(){return p})),t.d(a,"default",(function(){return j}));var n=t("cxan"),r=t("+wNj"),o=t("ERkP"),l=t("ZVZ0"),c=t("9Rvw"),u=t("zgTd"),b=t("x6WP"),i=t("E1Lo"),y=t("qbsg"),s=t("3Mj+"),p=(t("l1C2"),{});void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"packages/hooks/useLazyArray/index.mdx"}});var d={_frontmatter:p},m=c.a;function j(e){var a,t,j=e.components,O=Object(r.a)(e,["components"]);return Object(l.b)(m,Object(n.a)({},d,O,{components:j,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"uselazyarray"},"useLazyArray"),Object(l.b)("p",null,"Cria um novo array que adiciona o array original progressivamente aliviando o processo de render. Não é uma solução perfeita, ainda estamos estudando alterantivas"),Object(l.b)(u.a,{mdxType:"CircularProgress"}),Object(l.b)("p",null,"Use o loader acima como referência, quando é feito o render de muitos items ele congela, agora se usar o lazy ele não congelará."),Object(l.b)(y.c,{__position:1,__code:'() => {\n  const [array, setArray] = useState([])\n  const onClick = useCallback(() => setArray(new Array(200).fill(\'a\')), [])\n  const onReset = useCallback(() => setArray([]), [])\n  const lazyArray = useLazyArray(array)\n  return (\n    <div>\n      <Typography>\n        Array Length: {array.length} / Lazy Array Length: {lazyArray.length}\n      </Typography>\n      <Button onClick={onClick}>Add 200 with Lazy</Button>\n      <Button onClick={onReset} variant="text">\n        Reset\n      </Button>\n      {lazyArray.map((a, index) => (\n        <div key={index}>\n          <Typography size="small">{index + 1}. Value</Typography>\n        </div>\n      ))}\n    </div>\n  )\n}',__scope:(a={props:O,DefaultLayout:c.a,useState:o.useState,useCallback:o.useCallback,CircularProgress:u.a,Button:b.a,Typography:i.a,Playground:y.c,useLazyArray:s.a},a.DefaultLayout=c.a,a._frontmatter=p,a),mdxType:"Playground"},(function(){var e=Object(o.useState)([]),a=e[0],t=e[1],n=Object(o.useCallback)((function(){return t(new Array(200).fill("a"))}),[]),r=Object(o.useCallback)((function(){return t([])}),[]),c=Object(s.a)(a);return Object(l.b)("div",null,Object(l.b)(i.a,{mdxType:"Typography"},"Array Length: ",a.length," / Lazy Array Length: ",c.length),Object(l.b)(b.a,{onClick:n,mdxType:"Button"},"Add 200 with Lazy"),Object(l.b)(b.a,{onClick:r,variant:"text",mdxType:"Button"},"Reset"),c.map((function(e,a){return Object(l.b)("div",{key:a},Object(l.b)(i.a,{size:"small",mdxType:"Typography"},a+1,". Value"))})))})),Object(l.b)("br",null),Object(l.b)(y.c,{__position:3,__code:'() => {\n  const [array, setArray] = useState([])\n  const onClick = useCallback(() => setArray(new Array(200).fill(\'a\')), [])\n  const onReset = useCallback(() => setArray([]), [])\n  return (\n    <div>\n      <Typography>Array Length: {array.length}</Typography>\n      <Button onClick={onClick}>Add 200 without Lazy</Button>\n      <Button onClick={onReset} variant="text">\n        Reset\n      </Button>\n      {array.map((a, index) => (\n        <div key={index}>\n          <Typography size="small">{index + 1}. Value</Typography>\n        </div>\n      ))}\n    </div>\n  )\n}',__scope:(t={props:O,DefaultLayout:c.a,useState:o.useState,useCallback:o.useCallback,CircularProgress:u.a,Button:b.a,Typography:i.a,Playground:y.c,useLazyArray:s.a},t.DefaultLayout=c.a,t._frontmatter=p,t),mdxType:"Playground"},(function(){var e=Object(o.useState)([]),a=e[0],t=e[1],n=Object(o.useCallback)((function(){return t(new Array(200).fill("a"))}),[]),r=Object(o.useCallback)((function(){return t([])}),[]);return Object(l.b)("div",null,Object(l.b)(i.a,{mdxType:"Typography"},"Array Length: ",a.length),Object(l.b)(b.a,{onClick:n,mdxType:"Button"},"Add 200 without Lazy"),Object(l.b)(b.a,{onClick:r,variant:"text",mdxType:"Button"},"Reset"),a.map((function(e,a){return Object(l.b)("div",{key:a},Object(l.b)(i.a,{size:"small",mdxType:"Typography"},a+1,". Value"))})))})),Object(l.b)("h2",{id:"parametros"},"Parametros"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Parametro"),Object(l.b)("th",{parentName:"tr",align:null},"Descrição"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"data"),Object(l.b)("td",{parentName:"tr",align:null},"Array com os dados")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"options"),Object(l.b)("td",{parentName:"tr",align:null},"Objecto: {",Object(l.b)("br",null)," "," ","chunckSize?: number; ",Object(l.b)("br",null)," "," ","intervalTime?: number;",Object(l.b)("br",null),"}")))))}void 0!==j&&j&&j===Object(j)&&Object.isExtensible(j)&&!j.hasOwnProperty("__filemeta")&&Object.defineProperty(j,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"packages/hooks/useLazyArray/index.mdx"}}),j.isMDXComponent=!0}}]);
//# sourceMappingURL=component---packages-hooks-use-lazy-array-index-mdx-749b735ae4eddb6bb3f6.js.map