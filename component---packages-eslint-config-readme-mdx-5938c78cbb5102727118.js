(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{TQLc:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return i})),n.d(t,"default",(function(){return p}));var r=n("cxan"),a=n("+wNj"),o=(n("ERkP"),n("ZVZ0")),s=n("9Rvw"),i=(n("l1C2"),{});void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"packages/eslint-config/README.mdx"}});var l={_frontmatter:i},c=s.a;function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)(c,Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"eslint-config"},"ESLint Config"),Object(o.b)("p",null,"Para configurar no padrão do Houston, primerio você deve adicionar as dependências, pois o eslint exige que plugins devem,\nser adicionados no projeto principal:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-sh"},"yarn add --dev @eduzz/eslint-config-houston @typescript-eslint/eslint-plugin @typescript-eslint/parser eslint-config-prettier eslint-plugin-eslint-plugin eslint-plugin-import-helpers eslint-plugin-prettier eslint-plugin-react eslint-plugin-react-hooks eslint-plugin-unused-imports prettier\n")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-json"},'// .eslintrc\n{\n  "extends": ["@eduzz/eslint-config-houston"]\n}\n')),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"// .prettierrc.js\nmodule.exports = {\n  ...require('@eduzz/eslint-config-houston/.prettierrc')\n};\n")),Object(o.b)("h2",{id:"generator"},"Generator"),Object(o.b)("p",null,"Para que o eslint verifique e aplica a regra correta do ",Object(o.b)("strong",{parentName:"p"},"react-hooks/exhaustive-deps")," é preciso adicionar seus custom hooks\nnas regras do .eslintrc, para facilitar esse processo criamos um ",Object(o.b)("strong",{parentName:"p"},"generator"),"."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"// .eslintrc.js <~precisa ser .js\nconst generator = require('@eduzz/eslint-config-houston/generator');\n\nmodule.exports = {\n  extends: ['@eduzz/eslint-config-houston'],\n  rules: {\n    'react-hooks/exhaustive-deps': generator.exhaustiveDeps('warn', ['useMyCustomHook', true])\n  }\n};\n")),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:null},"Método"),Object(o.b)("th",{parentName:"tr",align:null},"Params"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"exhaustiveDeps"),Object(o.b)("td",{parentName:"tr",align:null},"1. 'warn' ","|"," 'error'",Object(o.b)("br",null),"2. Array com seus hooks ",Object(o.b)("br",null),"3. boolean se deve ou não adicionar os hooks do @eduzz/houston-hooks")))),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"⚠️ Vale ressaltar que os custom hooks devem seguir o padrão de que o segundo parametro seja a deps")))}void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"packages/eslint-config/README.mdx"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---packages-eslint-config-readme-mdx-5938c78cbb5102727118.js.map